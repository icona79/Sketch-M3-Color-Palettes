{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://exports/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://exports/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://exports/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://exports/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://exports/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/blend/blend.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/hct/cam16.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/hct/hct.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/hct/hct_solver.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/hct/viewing_conditions.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/index.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/palettes/core_palette.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/palettes/tonal_palette.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/quantize/lab_point_provider.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/quantize/point_provider.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/quantize/quantizer_celebi.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/quantize/quantizer_map.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/quantize/quantizer_wsmeans.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/quantize/quantizer_wu.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/scheme/scheme.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/scheme/scheme_android.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/score/score.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/utils/color_utils.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/utils/image_utils.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/utils/math_utils.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/utils/string_utils.js","webpack://exports/./node_modules/@material/material-color-utilities/dist/utils/theme_utils.js","webpack://exports/./node_modules/@skpm/fs/index.js","webpack://exports/./node_modules/@skpm/fs/utils.js","webpack://exports/./node_modules/@skpm/promise/index.js","webpack://exports/./node_modules/color-difference/lib/compare.js","webpack://exports/./node_modules/color-difference/lib/index.js","webpack://exports/./node_modules/color-difference/lib/method/abstract.js","webpack://exports/./node_modules/color-difference/lib/method/cie-76-difference.js","webpack://exports/./node_modules/color-difference/lib/method/euclidean-distance.js","webpack://exports/./node_modules/color-model/index.js","webpack://exports/./node_modules/color-model/lib/abstract-model.js","webpack://exports/./node_modules/color-model/lib/component.js","webpack://exports/./node_modules/color-model/lib/hex-rgb.js","webpack://exports/./node_modules/color-model/lib/hsl.js","webpack://exports/./node_modules/color-model/lib/index.js","webpack://exports/./node_modules/color-model/lib/lab.js","webpack://exports/./node_modules/color-model/lib/rgb.js","webpack://exports/./node_modules/color-model/lib/xyz.js","webpack://exports/./node_modules/color-name/index.js","webpack://exports/./node_modules/colorcolor/src/colorcolor.js","webpack://exports/./node_modules/hex-color-regex/index.js","webpack://exports/./node_modules/hex-rgb/index.js","webpack://exports/./node_modules/is-hexcolor/index.js","webpack://exports/./node_modules/mocha-js-delegate/index.js","webpack://exports/./node_modules/rgb-hex/index.js","webpack://exports/./node_modules/sketch-module-web-view/lib/browser-api.js","webpack://exports/./node_modules/sketch-module-web-view/lib/constants.js","webpack://exports/./node_modules/sketch-module-web-view/lib/dispatch-first-click.js","webpack://exports/./node_modules/sketch-module-web-view/lib/execute-javascript.js","webpack://exports/./node_modules/sketch-module-web-view/lib/fitSubview.js","webpack://exports/./node_modules/sketch-module-web-view/lib/index.js","webpack://exports/./node_modules/sketch-module-web-view/lib/inject-client-messaging.js","webpack://exports/./node_modules/sketch-module-web-view/lib/movable-area.js","webpack://exports/./node_modules/sketch-module-web-view/lib/parseWebArguments.js","webpack://exports/./node_modules/sketch-module-web-view/lib/set-delegates.js","webpack://exports/./node_modules/sketch-module-web-view/lib/webview-api.js","webpack://exports/./node_modules/sketch-module-web-view/remote.js","webpack://exports/./resources/webview.html","webpack://exports/./src/dynamicPalette.js","webpack://exports/external \"buffer\"","webpack://exports/external \"events\"","webpack://exports/external \"os\"","webpack://exports/external \"path\"","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"util\""],"names":["Mocha","sharedRuntime","loadFrameworkWithName","webviewIdentifier","cd","require","fs","os","path","desktopDir","join","homedir","sketch","Swatch","Style","doc","context","document","getSelectedDocument","firstSelectedLayer","selectedLayers","layers","artboard","Artboard","data","sketchObject","documentData","layerStyles","sharedLayerStyles","textStyles","sharedTextStyles","arrayLayerStyleIDs","map","sharedstyle","arrayLayerStyleNames","arrayLayerStyleStyles","layerStylesOrdered","sort","left","right","name","insertedLayerStyles","arrayTextStyleIDs","arrayTextStyleNames","arrayTextStyleStyles","textStylesOrdered","stylesString","JSON","stringify","textString","insertedTextStyles","options","identifier","width","height","show","browserWindow","BrowserWindow","once","createWebViewErr","console","log","webContents","on","parameters","theme","value","rgbHex","mainColor","themeFromSourceColor","argbFromHex","primary","hexFromArgb","schemes","light","secondary","tertiary","error","neutral","neutralVariant","shadow","scrim","surface","primaryPalette","colorPalette","paletteToColorVariables","secondaryPalette","tertiaryPalette","errorPalette","neutralPalette","neutralVariantPalette","shadowPalette","scrimPalette","surfacePalette","lightTheme_primary","lightTheme_onPrimary","onPrimary","lightTheme_primaryContainer","primaryContainer","lightTheme_onPrimaryContainer","onPrimaryContainer","lightTheme_secondary","lightTheme_onSecondary","onSecondary","lightTheme_secondaryContainer","secondaryContainer","lightTheme_onSecondaryContainer","onSecondaryContainer","lightTheme_tertiary","lightTheme_onTertiary","onTertiary","lightTheme_tertiaryContainer","tertiaryContainer","lightTheme_onTertiaryContainer","onTertiaryContainer","lightTheme_error","lightTheme_onError","onError","lightTheme_errorContainer","errorContainer","lightTheme_onErrorContainer","onErrorContainer","lightTheme_background","background","lightTheme_onbackground","onbackground","lightTheme_surface","lightTheme_onSurface","onSurface","lightTheme_outline","lightTheme_surfacevariant","surfaceVariant","lightTheme_onSurfaceVariant","onSurfaceVariant","lightTheme_shadow","lightTheme_scrim","lightTheme_inverseSurface","inverseSurface","lightTheme_inverseOnSurface","inverseOnSurface","lightTheme_inversePrimary","inversePrimary","lightTheme","darkTheme_primary","dark","darkTheme_onPrimary","darkTheme_primaryContainer","darkTheme_onPrimaryContainer","darkTheme_secondary","darkTheme_onSecondary","darkTheme_secondaryContainer","darkTheme_onSecondaryContainer","darkTheme_tertiary","darkTheme_onTertiary","darkTheme_tertiaryContainer","darkTheme_onTertiaryContainer","darkTheme_error","darkTheme_onError","darkTheme_errorContainer","darkTheme_onErrorContainer","darkTheme_background","darkTheme_onbackground","darkTheme_surface","darkTheme_onSurface","darkTheme_outline","darkTheme_surfacevariant","darkTheme_onSurfaceVariant","darkTheme_shadow","darkTheme_scrim","darkTheme_inverseSurface","darkTheme_inverseOnSurface","darkTheme_inversePrimary","darkTheme","forEach","style","createNewLayerStyle","createNewTextStyle","layerStyle","styleName","stylePalette","n","length","styleFillColor","fills","undefined","color","styleBorderColor","borders","message","colorVariable","matchColorVariables","referencingColor","updateLayerStyles","textStyle","styleTextColor","textColor","updateTextStyles","close","pluginErr","palette","arrayColorVarNames","swatches","colorName","newSwatch","from","indexOf","push","existingSwatch","updateWithColor","MSColor","colorWithHex_alpha","slice","swatchContainer","sharedSwatches","updateReferencesToSwatch","loadURL","tones","valueName","toString","TonalPalette","fromInt","tone","getLayerStyleNameFromID","id","i","getTextStyleNameFromID","getTextStylesStyleFromIDErr","getLayerStyleIDFromName","styleID","getTextStyleIDFromName","newColorVariable","toUpperCase","colorVariables","colorVariablesNames","variable","variableName","variableColor","variableColorHEX","colorcolor","colorHEX","colorMatch","compare","includes","checkSubString","str1","str2","styleDetails","folder","border","styleColor","fillType","FillType","Color","position","BorderPosition","Inside","sharedStyle","existingStyleID","localIndex","existingStyle","lengh","createLayerStyleErr","fontSize","fontFamily","sharedTitleStyle","createTextStyleErr","getPath","initialPath","panel","NSOpenPanel","openPanel","setCanChooseFiles","setCanChooseDirectories","setCanCreateDirectories","setAllowsMultipleSelection","setTitle","setPrompt","setDirectoryURL","NSURL","fileURLWithPath","result","runModal","NSFileHandlingPanelOKButton","URL","onShutdown","existingWebview","getWebview"],"mappings":";;;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA;;AAEA,iH;;;;;;;;;;;ACVA,uBAAuB,mBAAO,CAAC,wFAAuB;;AAEtD;AACA;AACA;;AAEA,kH;;;;;;;;;;;ACNA;AACA;AACA;;AAEA,gH;;;;;;;;;;;ACJA;AACA;AACA;;AAEA,kH;;;;;;;;;;;ACJA,wBAAwB,mBAAO,CAAC,0FAAwB;;AAExD,sBAAsB,mBAAO,CAAC,sFAAsB;;AAEpD,iCAAiC,mBAAO,CAAC,4GAAiC;;AAE1E,wBAAwB,mBAAO,CAAC,0FAAwB;;AAExD;AACA;AACA;;AAEA,kH;;;;;;;;;;;ACZA,uBAAuB,mBAAO,CAAC,wFAAuB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2H;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqC;AACJ;AACkB;AACF;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4CAAG;AAC3B,sBAAsB,4CAAG;AACzB,kCAAkC,mEAA2B;AAC7D;AACA,0BAA0B,uEAA+B;AACzD,8BAA8B,mEAA2B;AACzD,eAAe,4CAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,uBAAuB,gDAAK;AAC5B,wBAAwB,gDAAK;AAC7B,wBAAwB,4CAAG,kCAAkC,gEAAwB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,wBAAwB,gDAAK;AAC7B,sBAAsB,gDAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAK;AACpB;AACA;AACA,iC;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACF;AACa;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,gBAAgB,OAAO,MAAM,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qEAAiB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6DAAgB;AACrC,uBAAuB,6DAAgB;AACvC,sBAAsB,6DAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAW;AAC/B,oBAAoB,wDAAW;AAC/B,oBAAoB,wDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qEAAiB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,qEAAiB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qEAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAW;AAC9B;AACA;AACA,mBAAmB,wDAAW;AAC9B;AACA;AACA,mBAAmB,wDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAiB;AACtC;AACA;AACA;AACA,iC;;;;;;;;;;;;ACrQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACd;AACS;AACzC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oBAAoB,4CAAK;AACzB;AACA;AACA,4BAA4B,gEAAmB;AAC/C;AACA;AACA;AACA,uBAAuB,qDAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,8BAA8B,qDAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,8BAA8B,qDAAS;AACvC;AACA;AACA,oBAAoB,4CAAK;AACzB;AACA;AACA,4BAA4B,gEAAmB;AAC/C;AACA;AACA;AACA,+B;;;;;;;;;;;;AC3GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACmD;AACF;AACjB;AACyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gEAAwB;AACvuBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qEAAiB;AACnD;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gEAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iEAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,gEAAwB;AAC3C;AACA,qBAAqB,uEAA+B;AACpD;AACA,kBAAkB,6DAAqB;AACvC;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,eAAe,4CAAK;AACpsC;;;;;;;;;;;;AClgBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACF;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAmB,4CAA4C,6DAAgB;AAC5G;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAS;AACtC,YAAY,sDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6DAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;ACpe;AACD;AACC;AACG;AACH;AACI;AACL;AACR;AACQ;AACV;AACM;AACD;AACE;AACD;AACA;AACpC,iC;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiC;AACc;AAC/C;AACA;AACA;AACA;AACA;AACO;AACP;AACA,oBAAoB,4CAAG;AACvB;AACA;AACA;AACA,sBAAsB,2DAAY;AAClC,sBAAsB,2DAAY;AAClC,sBAAsB,2DAAY;AAClC,sBAAsB,2DAAY;AAClC,sBAAsB,2DAAY;AAClC;AACA;AACA,sBAAsB,2DAAY;AAClC,sBAAsB,2DAAY;AAClC,sBAAsB,2DAAY;AAClC,sBAAsB,2DAAY;AAClC,sBAAsB,2DAAY;AAClC;AACA,qBAAqB,2DAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4CAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAAG;AACtB;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACoB;AAC9C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuD;AACV;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yDAAW;AAClC;AACA,eAAe,mEAAgB;AAC/B;AACA;AACA,4C;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,0BAA0B,gEAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oEAAgB;AAClD;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA,+BAA+B,4BAA4B;AAC3D,2BAA2B,kBAAkB;AAC7C,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;ACjNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACC;AAC/C;AACA,uBAAuB;AACvB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD,oCAAoC,qBAAqB;AACzD,oCAAoC,qBAAqB;AACzD,oCAAoC,qBAAqB;AACzD,mCAAmC,qBAAqB;AACxD,6BAA6B,2DAAY;AACzC;AACA,wBAAwB,8DAAiB;AACzC,0BAA0B,gEAAmB;AAC7C,yBAAyB,+DAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,qCAAqC,sBAAsB;AAC3D,sCAAsC,sBAAsB;AAC5D,sCAAsC,sBAAsB;AAC5D,sCAAsC,sBAAsB;AAC5D,sCAAsC,sBAAsB;AAC5D,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C,2CAA2C,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACtXA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuD;AACvkEAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kEAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kEAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kEAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,kC;;;;;;;;;;;;ACxNA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuD;AACvD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kEAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kEAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kEAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kEAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,0C;;;;;;;;;;;;ACvMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqC;AACS;AACF;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gDAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,oCAAoC,oEAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mEAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,WAAW,0DAAwB;AACnoDAAkB;AAC7B;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;ACpQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+D;AACxB;AACK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAW;AAChC;AACA;AACA;AACA,mBAAmB,0EAAe;AAClC,mBAAmB,kDAAK;AACxB;AACA;AACA;AACA,uC;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACrIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,cAAc,wDAAsB;AACpC,cAAc,0DAAwB;AACtC,cAAc,yDAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuC;AACgB;AACb;AACW;AACR;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,kEAAW;AAC/B;AACA;AACA;AACA,mBAAmB,qDAAM;AACzB,kBAAkB,qDAAM;AACxB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,yBAAyB,yEAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,gBAAgB,kDAAK;AACrB;AACA,oBAAoB,kEAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,WAAW,GAAG,WAAW,EAAE,KAAK;AAClF,8BAA8B,iEAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAW;AACjC,mDAAmD,MAAM,EAAE,OAAO;AAClE;AACA;AACA,uC;;;;;;;;;;;AChIA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,YAAY,mBAAO,CAAC,iDAAS;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACpbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,mBAAO,CAAC,iDAAS;AACvC;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9JA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,kBAAkB;AAC/B;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9QA,8BAA8B,gBAAgB,EAAE;;AAEhD,eAAe,mBAAO,CAAC,wDAAa;AACpC;AACA,8BAA8B,mBAAO,CAAC,qGAA6B;AACnE,8BAA8B,mBAAO,CAAC,mGAA4B;AAClE;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;AC3BA;AACA,kBAAkB,mBAAO,CAAC,iEAAW;AACrC;AACA,4BAA4B,mBAAO,CAAC,qGAA6B;AACjE,4BAA4B,mBAAO,CAAC,mGAA4B;AAChE;AACA;;;;;;;;;;;;ACNA,8BAA8B,iBAAiB,EAAE;;AAEjD;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,IAAI;AACf,YAAY,OAAO;AACnB;AACA;AACA;AACA;;;;;;;;;;;;ACdA,8BAA8B,wBAAwB,EAAE;;AAExD;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,kBAAM,4BAA4B,mBAAO,CAAC,0EAAY,GAAG,yBAAyB,SAAwC;;AAElI;AACA,WAAW,IAAI;AACf,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AChCA,8BAA8B,0BAA0B,EAAE;;AAE1D;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,kBAAM,8BAA8B,mBAAO,CAAC,0EAAY,GAAG,yBAAyB,SAA0C;;AAEtI;AACA,WAAW,IAAI;AACf,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;AC/BA;AACA,oDAAoD;AACpD,CAAC;AACD,mBAAmB,mBAAO,CAAC,sDAAO;AAClC;;;;;;;;;;;;ACJA,8BAA8B,sBAAsB,EAAE;;AAEtD,SAAS,mBAAO,CAAC,gEAAa,EAAE;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA,iDAAiD,UAAU;AAC3D;AACA;AACA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,0DAA0D,UAAU;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC3FA,8BAA8B,kBAAkB,EAAE;;AAElD;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1DA,8BAA8B,eAAe,EAAE;;AAE/C,SAAS,mBAAO,CAAC,oDAAO,EAAE;;AAE1B;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,IAAI;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,kBAAM,mBAAmB,mBAAO,CAAC,oDAAO,GAAG,yBAAyB,SAA0B;;AAEtG;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;ACpEA,8BAA8B,YAAY,EAAE;;AAE5C,SAAS,mBAAO,CAAC,gEAAa,EAAE;AAChC,SAAS,mBAAO,CAAC,oDAAO,EAAE;;AAE1B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD;;AAEA,mBAAO,CAAC,kBAAM,gBAAgB,mBAAO,CAAC,0EAAkB,GAAG,yBAAyB,SAAiC;;AAErH;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;;;;;;;;;;;AC3GA;AACA,oBAAoB,mBAAO,CAAC,gEAAa;AACzC,oBAAoB,mBAAO,CAAC,0EAAkB;AAC9C,oBAAoB,mBAAO,CAAC,oDAAO;AACnC,oBAAoB,mBAAO,CAAC,oDAAO;AACnC,oBAAoB,mBAAO,CAAC,4DAAW;AACvC,oBAAoB,mBAAO,CAAC,oDAAO;AACnC,oBAAoB,mBAAO,CAAC,oDAAO;AACnC;;;;;;;;;;;;ACRA,8BAA8B,YAAY,EAAE;;AAE5C,SAAS,mBAAO,CAAC,gEAAa,EAAE;;AAEhC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D;;AAEA,mBAAO,CAAC,kBAAM,gBAAgB,mBAAO,CAAC,0EAAkB,GAAG,yBAAyB,SAAiC;;AAErH;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;AC7CA,8BAA8B,YAAY,EAAE;;AAE5C,SAAS,mBAAO,CAAC,gEAAa,EAAE;AAChC,SAAS,mBAAO,CAAC,oDAAO,EAAE;AAC1B,SAAS,mBAAO,CAAC,oDAAO,EAAE;;AAE1B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD,oDAAoD;AACpD;;AAEA,mBAAO,CAAC,kBAAM,gBAAgB,mBAAO,CAAC,0EAAkB,GAAG,yBAAyB,SAAiC;;AAErH;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA,eAAe,mBAAO,CAAC,4DAAW;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzJA,8BAA8B,YAAY,EAAE;;AAE5C,SAAS,mBAAO,CAAC,gEAAa,EAAE;AAChC,SAAS,mBAAO,CAAC,oDAAO,EAAE;AAC1B,SAAS,mBAAO,CAAC,oDAAO,EAAE;;AAE1B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,kDAAkD;AAClD,kDAAkD;AAClD,kDAAkD;AAClD;;AAEA,mBAAO,CAAC,kBAAM,gBAAgB,mBAAO,CAAC,0EAAkB,GAAG,yBAAyB,SAAiC;;AAErH;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;;;;;;;;;;;;ACpvJA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,sDAAY;AACtC;AACA;AACA;AACA;AACA,kBAAkB,IAAI,SAAS,IAAI,SAAS,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,IAAI,SAAS,IAAI,SAAS,IAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uBAAuB,EAAE,cAAc,EAAE,cAAc,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uBAAuB,EAAE,cAAc,EAAE,cAAc,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uBAAuB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uBAAuB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,kBAAkB,IAAI,SAAS,IAAI,UAAU,IAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,IAAI,SAAS,IAAI,UAAU,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,kBAAkB,IAAI,SAAS,IAAI,UAAU,IAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,kBAAkB,IAAI,SAAS,IAAI,UAAU,IAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD,0BAA0B,MAAM,GAAG,MAAM,IAAI,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD,2BAA2B,OAAO,GAAG,OAAO,IAAI,OAAO,IAAI,OAAO;AAClE;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD,0BAA0B,MAAM,GAAG,MAAM,IAAI,MAAM;AACnD;AACA;AACA,uBAAuB,yBAAyB;AAChD,0BAA0B,MAAM,GAAG,MAAM,IAAI,MAAM;AACnD;AACA;AACA,0BAA0B,EAAE,GAAG,EAAE,GAAG,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAC;AACR,OAAO,MAAC;AACR,OAAO,MAAC;AACR;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC;;;;;;;;;;;;;ACjWnC;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;;AAEA,oCAAoC,EAAE,UAAU,EAAE,qBAAqB,EAAE,UAAU,EAAE;AACrF;;;;;;;;;;;;;ACbA;AAAA;AAAA;AACA,2BAA2B,cAAc,EAAE,EAAE,GAAG,cAAc;AAC9D,2BAA2B,cAAc,EAAE,EAAE,IAAI,cAAc,EAAE,EAAE;AACnE,qCAAqC,cAAc;AACnD,oCAAoC,aAAa,KAAK,aAAa;;AAEpD,iCAAiC;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,iCAAiC;AAChF,gBAAgB,IAAI,GAAG,MAAM,GAAG,KAAK,EAAE,YAAY;AACnD;;AAEA,SAAS;AACT;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,oBAAoB,mBAAO,CAAC,gEAAiB;;AAE7C;AACA,wBAAwB,aAAa;AACrC;;;;;;;;;;;;ACbA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,wDAAwD,EAAE;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC/Fa;AACb;AACA;AACA;;AAEA;AACA,kDAAkD,IAAI;AACtD,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,gDAAgD,MAAM;AACtD;;AAEA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,+BAA+B;AACnE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,+BAA+B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,aAAa;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5lBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,yCAAyC;AACzC,uDAAuD;AACvD,6DAA6D;AAC7D,+BAA+B;AAC/B,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR,gBAAgB;AAChB,MAAM,eAAe;AACrB,0CAA0C,cAAc;AACxD,MAAM;AACN;AACA;;;;;;;;;;;;ACzBA,+DAAgB,mBAAO,CAAC,2EAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,YAAY;AACZ,gCAAgC;AAChC,wFAAwF;AACxF,qCAAqC;AACrC;AACA;AACA,mBAAmB;AACnB,YAAY;AACZ,kCAAkC;AAClC;AACA;AACA,kBAAkB;AAClB,YAAY;AACZ,UAAU,OAAO;AACjB;AACA;AACA,kBAAkB;AAClB,UAAU;AACV,QAAQ,cAAc;AACtB;AACA;AACA,kBAAkB;AAClB,QAAQ;AACR,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AACA;AACA,mBAAmB,mBAAO,CAAC,sBAAQ;AACnC,sBAAsB,mBAAO,CAAC,+EAAe;AAC7C,kBAAkB,mBAAO,CAAC,+EAAe;AACzC,uBAAuB,mBAAO,CAAC,6EAAc;AAC7C,yBAAyB,mBAAO,CAAC,iGAAwB;AACzD,4BAA4B,mBAAO,CAAC,uGAA2B;AAC/D,kBAAkB,mBAAO,CAAC,iFAAgB;AAC1C,wBAAwB,mBAAO,CAAC,6FAAsB;AACtD,mBAAmB,mBAAO,CAAC,mFAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACzWA,gBAAgB,mBAAO,CAAC,2EAAa;;AAErC;AACA;AACA,qDAAqD;AACrD,gDAAgD;AAChD,yBAAyB;AACzB;AACA,QAAQ;AACR,uDAAuD;AACvD,6CAA6C;AAC7C,0BAA0B;AAC1B,sDAAsD;AACtD;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,wCAAwC;AACxC,QAAQ,EAAE;AACV,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA,gBAAgB,mBAAO,CAAC,2EAAa;;AAErC;AACA;AACA,mBAAmB;AACnB,yDAAyD;AACzD;AACA,kCAAkC;AAClC,2CAA2C,4BAA4B,eAAe;AACtF,gCAAgC,yBAAyB,cAAc;AACvE;AACA,OAAO;AACP;AACA,8BAA8B;AAC9B,qDAAqD,SAAS;AAC9D;AACA;AACA,QAAQ;AACR,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AClBA,+DAAgB,mBAAO,CAAC,oEAAmB;AAC3C,wBAAwB,mBAAO,CAAC,2FAAqB;AACrD,gBAAgB,mBAAO,CAAC,2EAAa;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,2CAA2C;AAC3C,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,sBAAsB;;AAE7C;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;ACtZA,mBAAmB,mBAAO,CAAC,sBAAQ;AACnC,wBAAwB,mBAAO,CAAC,6FAAsB;;AAEtmDAAmD;AACnD;AACA,QAAQ,kCAAkC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC/NA;AACA;;AAEA;AACA,SAAS,mBAAO,CAAC,iEAAO;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AClCA,gM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAAA,KAAK,CAACC,aAAN,GAAsBC,qBAAtB,CAA4C,gBAA5C;AAEA;AACA;AAEA,IAAMC,iBAAiB,GAAG,wBAA1B,C,CAEA;;AACA;AASA;;AACA,IAAIC,EAAE,GAAGC,mBAAO,CAAC,sEAAD,CAAhB;;AACA;AACA;AAEA;AACA;;AACA,IAAMC,EAAE,GAAGD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","file":"__dynamicPalette.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/dynamicPalette.js\");\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport { Cam16 } from '../hct/cam16';\nimport { Hct } from '../hct/hct';\nimport * as colorUtils from '../utils/color_utils';\nimport * as mathUtils from '../utils/math_utils';\n// libmonet is designed to have a consistent API across platforms\n// and modular components that can be moved around easily. Using a class as a\n// namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * Functions for blending in HCT and CAM16.\n */\nexport class Blend {\n    /**\n     * Blend the design color's HCT hue towards the key color's HCT\n     * hue, in a way that leaves the original color recognizable and\n     * recognizably shifted towards the key color.\n     *\n     * @param designColor ARGB representation of an arbitrary color.\n     * @param sourceColor ARGB representation of the main theme color.\n     * @return The design color with a hue shifted towards the\n     * system's color, a slightly warmer/cooler variant of the design\n     * color's hue.\n     */\n    static harmonize(designColor, sourceColor) {\n        const fromHct = Hct.fromInt(designColor);\n        const toHct = Hct.fromInt(sourceColor);\n        const differenceDegrees = mathUtils.differenceDegrees(fromHct.hue, toHct.hue);\n        const rotationDegrees = Math.min(differenceDegrees * 0.5, 15.0);\n        const outputHue = mathUtils.sanitizeDegreesDouble(fromHct.hue +\n            rotationDegrees * mathUtils.rotationDirection(fromHct.hue, toHct.hue));\n        return Hct.from(outputHue, fromHct.chroma, fromHct.tone).toInt();\n    }\n    /**\n     * Blends hue from one color into another. The chroma and tone of\n     * the original color are maintained.\n     *\n     * @param from ARGB representation of color\n     * @param to ARGB representation of color\n     * @param amount how much blending to perform; 0.0 >= and <= 1.0\n     * @return from, with a hue blended towards to. Chroma and tone\n     * are constant.\n     */\n    static hctHue(from, to, amount) {\n        const ucs = Blend.cam16Ucs(from, to, amount);\n        const ucsCam = Cam16.fromInt(ucs);\n        const fromCam = Cam16.fromInt(from);\n        const blended = Hct.from(ucsCam.hue, fromCam.chroma, colorUtils.lstarFromArgb(from));\n        return blended.toInt();\n    }\n    /**\n     * Blend in CAM16-UCS space.\n     *\n     * @param from ARGB representation of color\n     * @param to ARGB representation of color\n     * @param amount how much blending to perform; 0.0 >= and <= 1.0\n     * @return from, blended towards to. Hue, chroma, and tone will\n     * change.\n     */\n    static cam16Ucs(from, to, amount) {\n        const fromCam = Cam16.fromInt(from);\n        const toCam = Cam16.fromInt(to);\n        const fromJ = fromCam.jstar;\n        const fromA = fromCam.astar;\n        const fromB = fromCam.bstar;\n        const toJ = toCam.jstar;\n        const toA = toCam.astar;\n        const toB = toCam.bstar;\n        const jstar = fromJ + (toJ - fromJ) * amount;\n        const astar = fromA + (toA - fromA) * amount;\n        const bstar = fromB + (toB - fromB) * amount;\n        return Cam16.fromUcs(jstar, astar, bstar).toInt();\n    }\n}\n//# sourceMappingURL=blend.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as utils from '../utils/color_utils';\nimport * as math from '../utils/math_utils';\nimport { ViewingConditions } from './viewing_conditions';\n/**\n * CAM16, a color appearance model. Colors are not just defined by their hex\n * code, but rather, a hex code and viewing conditions.\n *\n * CAM16 instances also have coordinates in the CAM16-UCS space, called J*, a*,\n * b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n * specification, and should be used when measuring distances between colors.\n *\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n */\nexport class Cam16 {\n    /**\n     * All of the CAM16 dimensions can be calculated from 3 of the dimensions, in\n     * the following combinations:\n     *      -  {j or q} and {c, m, or s} and hue\n     *      - jstar, astar, bstar\n     * Prefer using a static method that constructs from 3 of those dimensions.\n     * This constructor is intended for those methods to use to return all\n     * possible dimensions.\n     *\n     * @param hue\n     * @param chroma informally, colorfulness / color intensity. like saturation\n     *     in HSL, except perceptually accurate.\n     * @param j lightness\n     * @param q brightness; ratio of lightness to white point's lightness\n     * @param m colorfulness\n     * @param s saturation; ratio of chroma to white point's chroma\n     * @param jstar CAM16-UCS J coordinate\n     * @param astar CAM16-UCS a coordinate\n     * @param bstar CAM16-UCS b coordinate\n     */\n    constructor(hue, chroma, j, q, m, s, jstar, astar, bstar) {\n        this.hue = hue;\n        this.chroma = chroma;\n        this.j = j;\n        this.q = q;\n        this.m = m;\n        this.s = s;\n        this.jstar = jstar;\n        this.astar = astar;\n        this.bstar = bstar;\n    }\n    /**\n     * CAM16 instances also have coordinates in the CAM16-UCS space, called J*,\n     * a*, b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n     * specification, and is used to measure distances between colors.\n     */\n    distance(other) {\n        const dJ = this.jstar - other.jstar;\n        const dA = this.astar - other.astar;\n        const dB = this.bstar - other.bstar;\n        const dEPrime = Math.sqrt(dJ * dJ + dA * dA + dB * dB);\n        const dE = 1.41 * Math.pow(dEPrime, 0.63);\n        return dE;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return CAM16 color, assuming the color was viewed in default viewing\n     *     conditions.\n     */\n    static fromInt(argb) {\n        return Cam16.fromIntInViewingConditions(argb, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     * @return CAM16 color.\n     */\n    static fromIntInViewingConditions(argb, viewingConditions) {\n        const red = (argb & 0x00ff0000) >> 16;\n        const green = (argb & 0x0000ff00) >> 8;\n        const blue = (argb & 0x000000ff);\n        const redL = utils.linearized(red);\n        const greenL = utils.linearized(green);\n        const blueL = utils.linearized(blue);\n        const x = 0.41233895 * redL + 0.35762064 * greenL + 0.18051042 * blueL;\n        const y = 0.2126 * redL + 0.7152 * greenL + 0.0722 * blueL;\n        const z = 0.01932141 * redL + 0.11916382 * greenL + 0.95034478 * blueL;\n        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n        const rD = viewingConditions.rgbD[0] * rC;\n        const gD = viewingConditions.rgbD[1] * gC;\n        const bD = viewingConditions.rgbD[2] * bC;\n        const rAF = Math.pow((viewingConditions.fl * Math.abs(rD)) / 100.0, 0.42);\n        const gAF = Math.pow((viewingConditions.fl * Math.abs(gD)) / 100.0, 0.42);\n        const bAF = Math.pow((viewingConditions.fl * Math.abs(bD)) / 100.0, 0.42);\n        const rA = (math.signum(rD) * 400.0 * rAF) / (rAF + 27.13);\n        const gA = (math.signum(gD) * 400.0 * gAF) / (gAF + 27.13);\n        const bA = (math.signum(bD) * 400.0 * bAF) / (bAF + 27.13);\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n        const atan2 = Math.atan2(b, a);\n        const atanDegrees = (atan2 * 180.0) / Math.PI;\n        const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n            atanDegrees >= 360 ? atanDegrees - 360.0 :\n                atanDegrees;\n        const hueRadians = (hue * Math.PI) / 180.0;\n        const ac = p2 * viewingConditions.nbb;\n        const j = 100.0 *\n            Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);\n        const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n            (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n        const huePrime = hue < 20.14 ? hue + 360 : hue;\n        const eHue = 0.25 * (Math.cos((huePrime * Math.PI) / 180.0 + 2.0) + 3.8);\n        const p1 = (50000.0 / 13.0) * eHue * viewingConditions.nc * viewingConditions.ncb;\n        const t = (p1 * Math.sqrt(a * a + b * b)) / (u + 0.305);\n        const alpha = Math.pow(t, 0.9) *\n            Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        const c = alpha * Math.sqrt(j / 100.0);\n        const m = c * viewingConditions.fLRoot;\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n        const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(hue, c, j, q, m, s, jstar, astar, bstar);\n    }\n    /**\n     * @param j CAM16 lightness\n     * @param c CAM16 chroma\n     * @param h CAM16 hue\n     */\n    static fromJch(j, c, h) {\n        return Cam16.fromJchInViewingConditions(j, c, h, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param j CAM16 lightness\n     * @param c CAM16 chroma\n     * @param h CAM16 hue\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     */\n    static fromJchInViewingConditions(j, c, h, viewingConditions) {\n        const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n            (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n        const m = c * viewingConditions.fLRoot;\n        const alpha = c / Math.sqrt(j / 100.0);\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        const hueRadians = (h * Math.PI) / 180.0;\n        const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n        const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(h, c, j, q, m, s, jstar, astar, bstar);\n    }\n    /**\n     * @param jstar CAM16-UCS lightness.\n     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the Y axis.\n     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the X axis.\n     */\n    static fromUcs(jstar, astar, bstar) {\n        return Cam16.fromUcsInViewingConditions(jstar, astar, bstar, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param jstar CAM16-UCS lightness.\n     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the Y axis.\n     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the X axis.\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     */\n    static fromUcsInViewingConditions(jstar, astar, bstar, viewingConditions) {\n        const a = astar;\n        const b = bstar;\n        const m = Math.sqrt(a * a + b * b);\n        const M = (Math.exp(m * 0.0228) - 1.0) / 0.0228;\n        const c = M / viewingConditions.fLRoot;\n        let h = Math.atan2(b, a) * (180.0 / Math.PI);\n        if (h < 0.0) {\n            h += 360.0;\n        }\n        const j = jstar / (1 - (jstar - 100) * 0.007);\n        return Cam16.fromJchInViewingConditions(j, c, h, viewingConditions);\n    }\n    /**\n     *  @return ARGB representation of color, assuming the color was viewed in\n     *     default viewing conditions, which are near-identical to the default\n     *     viewing conditions for sRGB.\n     */\n    toInt() {\n        return this.viewed(ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param viewingConditions Information about the environment where the color\n     *     will be viewed.\n     * @return ARGB representation of color\n     */\n    viewed(viewingConditions) {\n        const alpha = this.chroma === 0.0 || this.j === 0.0 ?\n            0.0 :\n            this.chroma / Math.sqrt(this.j / 100.0);\n        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);\n        const hRad = (this.hue * Math.PI) / 180.0;\n        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n        const ac = viewingConditions.aw *\n            Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const p2 = ac / viewingConditions.nbb;\n        const hSin = Math.sin(hRad);\n        const hCos = Math.cos(hRad);\n        const gamma = (23.0 * (p2 + 0.305) * t) /\n            (23.0 * p1 + 11.0 * t * hCos + 108.0 * t * hSin);\n        const a = gamma * hCos;\n        const b = gamma * hSin;\n        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n        const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n        const rC = math.signum(rA) * (100.0 / viewingConditions.fl) *\n            Math.pow(rCBase, 1.0 / 0.42);\n        const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n        const gC = math.signum(gA) * (100.0 / viewingConditions.fl) *\n            Math.pow(gCBase, 1.0 / 0.42);\n        const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n        const bC = math.signum(bA) * (100.0 / viewingConditions.fl) *\n            Math.pow(bCBase, 1.0 / 0.42);\n        const rF = rC / viewingConditions.rgbD[0];\n        const gF = gC / viewingConditions.rgbD[1];\n        const bF = bC / viewingConditions.rgbD[2];\n        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n        const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n        const argb = utils.argbFromXyz(x, y, z);\n        return argb;\n    }\n}\n//# sourceMappingURL=cam16.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A color system built using CAM16 hue and chroma, and L* from\n * L*a*b*.\n *\n * Using L* creates a link between the color system, contrast, and thus\n * accessibility. Contrast ratio depends on relative luminance, or Y in the XYZ\n * color space. L*, or perceptual luminance can be calculated from Y.\n *\n * Unlike Y, L* is linear to human perception, allowing trivial creation of\n * accurate color tones.\n *\n * Unlike contrast ratio, measuring contrast in L* is linear, and simple to\n * calculate. A difference of 40 in HCT tone guarantees a contrast ratio >= 3.0,\n * and a difference of 50 guarantees a contrast ratio >= 4.5.\n */\nimport * as utils from '../utils/color_utils';\nimport { Cam16 } from './cam16';\nimport { HctSolver } from './hct_solver';\n/**\n * HCT, hue, chroma, and tone. A color system that provides a perceptually\n * accurate color measurement system that can also accurately render what colors\n * will appear as in different lighting environments.\n */\nexport class Hct {\n    constructor(argb) {\n        this.argb = argb;\n        const cam = Cam16.fromInt(argb);\n        this.internalHue = cam.hue;\n        this.internalChroma = cam.chroma;\n        this.internalTone = utils.lstarFromArgb(argb);\n        this.argb = argb;\n    }\n    static from(hue, chroma, tone) {\n        return new Hct(HctSolver.solveToInt(hue, chroma, tone));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return HCT representation of a color in default viewing conditions\n     */\n    static fromInt(argb) {\n        return new Hct(argb);\n    }\n    toInt() {\n        return this.argb;\n    }\n    /**\n     * A number, in degrees, representing ex. red, orange, yellow, etc.\n     * Ranges from 0 <= hue < 360.\n     */\n    get hue() {\n        return this.internalHue;\n    }\n    /**\n     * @param newHue 0 <= newHue < 360; invalid values are corrected.\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set hue(newHue) {\n        this.setInternalState(HctSolver.solveToInt(newHue, this.internalChroma, this.internalTone));\n    }\n    get chroma() {\n        return this.internalChroma;\n    }\n    /**\n     * @param newChroma 0 <= newChroma < ?\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set chroma(newChroma) {\n        this.setInternalState(HctSolver.solveToInt(this.internalHue, newChroma, this.internalTone));\n    }\n    /** Lightness. Ranges from 0 to 100. */\n    get tone() {\n        return this.internalTone;\n    }\n    /**\n     * @param newTone 0 <= newTone <= 100; invalid valids are corrected.\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set tone(newTone) {\n        this.setInternalState(HctSolver.solveToInt(this.internalHue, this.internalChroma, newTone));\n    }\n    setInternalState(argb) {\n        const cam = Cam16.fromInt(argb);\n        this.internalHue = cam.hue;\n        this.internalChroma = cam.chroma;\n        this.internalTone = utils.lstarFromArgb(argb);\n        this.argb = argb;\n    }\n}\n//# sourceMappingURL=hct.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport * as colorUtils from '../utils/color_utils';\nimport * as mathUtils from '../utils/math_utils';\nimport { Cam16 } from './cam16';\nimport { ViewingConditions } from './viewing_conditions';\n// libmonet is designed to have a consistent API across platforms\n// and modular components that can be moved around easily. Using a class as a\n// namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * A class that solves the HCT equation.\n */\nexport class HctSolver {\n    /**\n     * Sanitizes a small enough angle in radians.\n     *\n     * @param angle An angle in radians; must not deviate too much\n     * from 0.\n     * @return A coterminal angle between 0 and 2pi.\n     */\n    static sanitizeRadians(angle) {\n        return (angle + Math.PI * 8) % (Math.PI * 2);\n    }\n    /**\n     * Delinearizes an RGB component, returning a floating-point\n     * number.\n     *\n     * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n     * linear R/G/B channel\n     * @return 0.0 <= output <= 255.0, color channel converted to\n     * regular RGB space\n     */\n    static trueDelinearized(rgbComponent) {\n        const normalized = rgbComponent / 100.0;\n        let delinearized = 0.0;\n        if (normalized <= 0.0031308) {\n            delinearized = normalized * 12.92;\n        }\n        else {\n            delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n        }\n        return delinearized * 255.0;\n    }\n    static chromaticAdaptation(component) {\n        const af = Math.pow(Math.abs(component), 0.42);\n        return mathUtils.signum(component) * 400.0 * af / (af + 27.13);\n    }\n    /**\n     * Returns the hue of a linear RGB color in CAM16.\n     *\n     * @param linrgb The linear RGB coordinates of a color.\n     * @return The hue of the color in CAM16, in radians.\n     */\n    static hueOf(linrgb) {\n        const scaledDiscount = mathUtils.matrixMultiply(linrgb, HctSolver.SCALED_DISCOUNT_FROM_LINRGB);\n        const rA = HctSolver.chromaticAdaptation(scaledDiscount[0]);\n        const gA = HctSolver.chromaticAdaptation(scaledDiscount[1]);\n        const bA = HctSolver.chromaticAdaptation(scaledDiscount[2]);\n        // redness-greenness\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        // yellowness-blueness\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        return Math.atan2(b, a);\n    }\n    static areInCyclicOrder(a, b, c) {\n        const deltaAB = HctSolver.sanitizeRadians(b - a);\n        const deltaAC = HctSolver.sanitizeRadians(c - a);\n        return deltaAB < deltaAC;\n    }\n    /**\n     * Solves the lerp equation.\n     *\n     * @param source The starting number.\n     * @param mid The number in the middle.\n     * @param target The ending number.\n     * @return A number t such that lerp(source, target, t) = mid.\n     */\n    static intercept(source, mid, target) {\n        return (mid - source) / (target - source);\n    }\n    static lerpPoint(source, t, target) {\n        return [\n            source[0] + (target[0] - source[0]) * t,\n            source[1] + (target[1] - source[1]) * t,\n            source[2] + (target[2] - source[2]) * t,\n        ];\n    }\n    /**\n     * Intersects a segment with a plane.\n     *\n     * @param source The coordinates of point A.\n     * @param coordinate The R-, G-, or B-coordinate of the plane.\n     * @param target The coordinates of point B.\n     * @param axis The axis the plane is perpendicular with. (0: R, 1:\n     * G, 2: B)\n     * @return The intersection point of the segment AB with the plane\n     * R=coordinate, G=coordinate, or B=coordinate\n     */\n    static setCoordinate(source, coordinate, target, axis) {\n        const t = HctSolver.intercept(source[axis], coordinate, target[axis]);\n        return HctSolver.lerpPoint(source, t, target);\n    }\n    static isBounded(x) {\n        return 0.0 <= x && x <= 100.0;\n    }\n    /**\n     * Returns the nth possible vertex of the polygonal intersection.\n     *\n     * @param y The Y value of the plane.\n     * @param n The zero-based index of the point. 0 <= n <= 11.\n     * @return The nth possible vertex of the polygonal intersection\n     * of the y plane and the RGB cube, in linear RGB coordinates, if\n     * it exists. If this possible vertex lies outside of the cube,\n     * [-1.0, -1.0, -1.0] is returned.\n     */\n    static nthVertex(y, n) {\n        const kR = HctSolver.Y_FROM_LINRGB[0];\n        const kG = HctSolver.Y_FROM_LINRGB[1];\n        const kB = HctSolver.Y_FROM_LINRGB[2];\n        const coordA = n % 4 <= 1 ? 0.0 : 100.0;\n        const coordB = n % 2 === 0 ? 0.0 : 100.0;\n        if (n < 4) {\n            const g = coordA;\n            const b = coordB;\n            const r = (y - g * kG - b * kB) / kR;\n            if (HctSolver.isBounded(r)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n        else if (n < 8) {\n            const b = coordA;\n            const r = coordB;\n            const g = (y - r * kR - b * kB) / kG;\n            if (HctSolver.isBounded(g)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n        else {\n            const r = coordA;\n            const g = coordB;\n            const b = (y - r * kR - g * kG) / kB;\n            if (HctSolver.isBounded(b)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n    }\n    /**\n     * Finds the segment containing the desired color.\n     *\n     * @param y The Y value of the color.\n     * @param targetHue The hue of the color.\n     * @return A list of two sets of linear RGB coordinates, each\n     * corresponding to an endpoint of the segment containing the\n     * desired color.\n     */\n    static bisectToSegment(y, targetHue) {\n        let left = [-1.0, -1.0, -1.0];\n        let right = left;\n        let leftHue = 0.0;\n        let rightHue = 0.0;\n        let initialized = false;\n        let uncut = true;\n        for (let n = 0; n < 12; n++) {\n            const mid = HctSolver.nthVertex(y, n);\n            if (mid[0] < 0) {\n                continue;\n            }\n            const midHue = HctSolver.hueOf(mid);\n            if (!initialized) {\n                left = mid;\n                right = mid;\n                leftHue = midHue;\n                rightHue = midHue;\n                initialized = true;\n                continue;\n            }\n            if (uncut || HctSolver.areInCyclicOrder(leftHue, midHue, rightHue)) {\n                uncut = false;\n                if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n                    right = mid;\n                    rightHue = midHue;\n                }\n                else {\n                    left = mid;\n                    leftHue = midHue;\n                }\n            }\n        }\n        return [left, right];\n    }\n    static midpoint(a, b) {\n        return [\n            (a[0] + b[0]) / 2,\n            (a[1] + b[1]) / 2,\n            (a[2] + b[2]) / 2,\n        ];\n    }\n    static criticalPlaneBelow(x) {\n        return Math.floor(x - 0.5);\n    }\n    static criticalPlaneAbove(x) {\n        return Math.ceil(x - 0.5);\n    }\n    /**\n     * Finds a color with the given Y and hue on the boundary of the\n     * cube.\n     *\n     * @param y The Y value of the color.\n     * @param targetHue The hue of the color.\n     * @return The desired color, in linear RGB coordinates.\n     */\n    static bisectToLimit(y, targetHue) {\n        const segment = HctSolver.bisectToSegment(y, targetHue);\n        let left = segment[0];\n        let leftHue = HctSolver.hueOf(left);\n        let right = segment[1];\n        for (let axis = 0; axis < 3; axis++) {\n            if (left[axis] !== right[axis]) {\n                let lPlane = -1;\n                let rPlane = 255;\n                if (left[axis] < right[axis]) {\n                    lPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(left[axis]));\n                    rPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(right[axis]));\n                }\n                else {\n                    lPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(left[axis]));\n                    rPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(right[axis]));\n                }\n                for (let i = 0; i < 8; i++) {\n                    if (Math.abs(rPlane - lPlane) <= 1) {\n                        break;\n                    }\n                    else {\n                        const mPlane = Math.floor((lPlane + rPlane) / 2.0);\n                        const midPlaneCoordinate = HctSolver.CRITICAL_PLANES[mPlane];\n                        const mid = HctSolver.setCoordinate(left, midPlaneCoordinate, right, axis);\n                        const midHue = HctSolver.hueOf(mid);\n                        if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n                            right = mid;\n                            rPlane = mPlane;\n                        }\n                        else {\n                            left = mid;\n                            leftHue = midHue;\n                            lPlane = mPlane;\n                        }\n                    }\n                }\n            }\n        }\n        return HctSolver.midpoint(left, right);\n    }\n    static inverseChromaticAdaptation(adapted) {\n        const adaptedAbs = Math.abs(adapted);\n        const base = Math.max(0, 27.13 * adaptedAbs / (400.0 - adaptedAbs));\n        return mathUtils.signum(adapted) * Math.pow(base, 1.0 / 0.42);\n    }\n    /**\n     * Finds a color with the given hue, chroma, and Y.\n     *\n     * @param hueRadians The desired hue in radians.\n     * @param chroma The desired chroma.\n     * @param y The desired Y.\n     * @return The desired color as a hexadecimal integer, if found; 0\n     * otherwise.\n     */\n    static findResultByJ(hueRadians, chroma, y) {\n        // Initial estimate of j.\n        let j = Math.sqrt(y) * 11.0;\n        // ===========================================================\n        // Operations inlined from Cam16 to avoid repeated calculation\n        // ===========================================================\n        const viewingConditions = ViewingConditions.DEFAULT;\n        const tInnerCoeff = 1 / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        const eHue = 0.25 * (Math.cos(hueRadians + 2.0) + 3.8);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const hSin = Math.sin(hueRadians);\n        const hCos = Math.cos(hueRadians);\n        for (let iterationRound = 0; iterationRound < 5; iterationRound++) {\n            // ===========================================================\n            // Operations inlined from Cam16 to avoid repeated calculation\n            // ===========================================================\n            const jNormalized = j / 100.0;\n            const alpha = chroma === 0.0 || j === 0.0 ? 0.0 : chroma / Math.sqrt(jNormalized);\n            const t = Math.pow(alpha * tInnerCoeff, 1.0 / 0.9);\n            const ac = viewingConditions.aw *\n                Math.pow(jNormalized, 1.0 / viewingConditions.c / viewingConditions.z);\n            const p2 = ac / viewingConditions.nbb;\n            const gamma = 23.0 * (p2 + 0.305) * t /\n                (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n            const a = gamma * hCos;\n            const b = gamma * hSin;\n            const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n            const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n            const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n            const rCScaled = HctSolver.inverseChromaticAdaptation(rA);\n            const gCScaled = HctSolver.inverseChromaticAdaptation(gA);\n            const bCScaled = HctSolver.inverseChromaticAdaptation(bA);\n            const linrgb = mathUtils.matrixMultiply([rCScaled, gCScaled, bCScaled], HctSolver.LINRGB_FROM_SCALED_DISCOUNT);\n            // ===========================================================\n            // Operations inlined from Cam16 to avoid repeated calculation\n            // ===========================================================\n            if (linrgb[0] < 0 || linrgb[1] < 0 || linrgb[2] < 0) {\n                return 0;\n            }\n            const kR = HctSolver.Y_FROM_LINRGB[0];\n            const kG = HctSolver.Y_FROM_LINRGB[1];\n            const kB = HctSolver.Y_FROM_LINRGB[2];\n            const fnj = kR * linrgb[0] + kG * linrgb[1] + kB * linrgb[2];\n            if (fnj <= 0) {\n                return 0;\n            }\n            if (iterationRound === 4 || Math.abs(fnj - y) < 0.002) {\n                if (linrgb[0] > 100.01 || linrgb[1] > 100.01 || linrgb[2] > 100.01) {\n                    return 0;\n                }\n                return colorUtils.argbFromLinrgb(linrgb);\n            }\n            // Iterates with Newton method,\n            // Using 2 * fn(j) / j as the approximation of fn'(j)\n            j = j - (fnj - y) * j / (2 * fnj);\n        }\n        return 0;\n    }\n    /**\n     * Finds an sRGB color with the given hue, chroma, and L*, if\n     * possible.\n     *\n     * @param hueDegrees The desired hue, in degrees.\n     * @param chroma The desired chroma.\n     * @param lstar The desired L*.\n     * @return A hexadecimal representing the sRGB color. The color\n     * has sufficiently close hue, chroma, and L* to the desired\n     * values, if possible; otherwise, the hue and L* will be\n     * sufficiently close, and chroma will be maximized.\n     */\n    static solveToInt(hueDegrees, chroma, lstar) {\n        if (chroma < 0.0001 || lstar < 0.0001 || lstar > 99.9999) {\n            return colorUtils.argbFromLstar(lstar);\n        }\n        hueDegrees = mathUtils.sanitizeDegreesDouble(hueDegrees);\n        const hueRadians = hueDegrees / 180 * Math.PI;\n        const y = colorUtils.yFromLstar(lstar);\n        const exactAnswer = HctSolver.findResultByJ(hueRadians, chroma, y);\n        if (exactAnswer !== 0) {\n            return exactAnswer;\n        }\n        const linrgb = HctSolver.bisectToLimit(y, hueRadians);\n        return colorUtils.argbFromLinrgb(linrgb);\n    }\n    /**\n     * Finds an sRGB color with the given hue, chroma, and L*, if\n     * possible.\n     *\n     * @param hueDegrees The desired hue, in degrees.\n     * @param chroma The desired chroma.\n     * @param lstar The desired L*.\n     * @return An CAM16 object representing the sRGB color. The color\n     * has sufficiently close hue, chroma, and L* to the desired\n     * values, if possible; otherwise, the hue and L* will be\n     * sufficiently close, and chroma will be maximized.\n     */\n    static solveToCam(hueDegrees, chroma, lstar) {\n        return Cam16.fromInt(HctSolver.solveToInt(hueDegrees, chroma, lstar));\n    }\n}\nHctSolver.SCALED_DISCOUNT_FROM_LINRGB = [\n    [\n        0.001200833568784504,\n        0.002389694492170889,\n        0.0002795742885861124,\n    ],\n    [\n        0.0005891086651375999,\n        0.0029785502573438758,\n        0.0003270666104008398,\n    ],\n    [\n        0.00010146692491640572,\n        0.0005364214359186694,\n        0.0032979401770712076,\n    ],\n];\nHctSolver.LINRGB_FROM_SCALED_DISCOUNT = [\n    [\n        1373.2198709594231,\n        -1100.4251190754821,\n        -7.278681089101213,\n    ],\n    [\n        -271.815969077903,\n        559.6580465940733,\n        -32.46047482791194,\n    ],\n    [\n        1.9622899599665666,\n        -57.173814538844006,\n        308.7233197812385,\n    ],\n];\nHctSolver.Y_FROM_LINRGB = [0.2126, 0.7152, 0.0722];\nHctSolver.CRITICAL_PLANES = [\n    0.015176349177441876, 0.045529047532325624, 0.07588174588720938,\n    0.10623444424209313, 0.13658714259697685, 0.16693984095186062,\n    0.19729253930674434, 0.2276452376616281, 0.2579979360165119,\n    0.28835063437139563, 0.3188300904430532, 0.350925934958123,\n    0.3848314933096426, 0.42057480301049466, 0.458183274052838,\n    0.4976837250274023, 0.5391024159806381, 0.5824650784040898,\n    0.6277969426914107, 0.6751227633498623, 0.7244668422128921,\n    0.775853049866786, 0.829304845476233, 0.8848452951698498,\n    0.942497089126609, 1.0022825574869039, 1.0642236851973577,\n    1.1283421258858297, 1.1946592148522128, 1.2631959812511864,\n    1.3339731595349034, 1.407011200216447, 1.4823302800086415,\n    1.5599503113873272, 1.6398909516233677, 1.7221716113234105,\n    1.8068114625156377, 1.8938294463134073, 1.9832442801866852,\n    2.075074464868551, 2.1693382909216234, 2.2660538449872063,\n    2.36523901573795, 2.4669114995532007, 2.5710888059345764,\n    2.6777882626779785, 2.7870270208169257, 2.898822059350997,\n    3.0131901897720907, 3.1301480604002863, 3.2497121605402226,\n    3.3718988244681087, 3.4967242352587946, 3.624204428461639,\n    3.754355295633311, 3.887192587735158, 4.022731918402185,\n    4.160988767090289, 4.301978482107941, 4.445716283538092,\n    4.592217266055746, 4.741496401646282, 4.893568542229298,\n    5.048448422192488, 5.20615066083972, 5.3666897647573375,\n    5.5300801301023865, 5.696336044816294, 5.865471690767354,\n    6.037501145825082, 6.212438385869475, 6.390297286737924,\n    6.571091626112461, 6.7548350853498045, 6.941541251256611,\n    7.131223617812143, 7.323895587840543, 7.5195704746346665,\n    7.7182615035334345, 7.919981813454504, 8.124744458384042,\n    8.332562408825165, 8.543448553206703, 8.757415699253682,\n    8.974476575321063, 9.194643831691977, 9.417930041841839,\n    9.644347703669503, 9.873909240696694, 10.106627003236781,\n    10.342513269534024, 10.58158024687427, 10.8238400726681,\n    11.069304815507364, 11.317986476196008, 11.569896988756009,\n    11.825048221409341, 12.083451977536606, 12.345119996613247,\n    12.610063955123938, 12.878295467455942, 13.149826086772048,\n    13.42466730586372, 13.702830557985108, 13.984327217668513,\n    14.269168601521828, 14.55736596900856, 14.848930523210871,\n    15.143873411576273, 15.44220572664832, 15.743938506781891,\n    16.04908273684337, 16.35764934889634, 16.66964922287304,\n    16.985093187232053, 17.30399201960269, 17.62635644741625,\n    17.95219714852476, 18.281524751807332, 18.614349837764564,\n    18.95068293910138, 19.290534541298456, 19.633915083172692,\n    19.98083495742689, 20.331304511189067, 20.685334046541502,\n    21.042933821039977, 21.404114048223256, 21.76888489811322,\n    22.137256497705877, 22.50923893145328, 22.884842241736916,\n    23.264076429332462, 23.6469514538663, 24.033477234264016,\n    24.42366364919083, 24.817520537484558, 25.21505769858089,\n    25.61628489293138, 26.021211842414342, 26.429848230738664,\n    26.842203703840827, 27.258287870275353, 27.678110301598522,\n    28.10168053274597, 28.529008062403893, 28.96010235337422,\n    29.39497283293396, 29.83362889318845, 30.276079891419332,\n    30.722335150426627, 31.172403958865512, 31.62629557157785,\n    32.08401920991837, 32.54558406207592, 33.010999283389665,\n    33.4802739966603, 33.953417292456834, 34.430438229418264,\n    34.911345834551085, 35.39614910352207, 35.88485700094671,\n    36.37747846067349, 36.87402238606382, 37.37449765026789,\n    37.87891309649659, 38.38727753828926, 38.89959975977785,\n    39.41588851594697, 39.93615253289054, 40.460400508064545,\n    40.98864111053629, 41.520882981230194, 42.05713473317016,\n    42.597404951718396, 43.141702194811224, 43.6900349931913,\n    44.24241185063697, 44.798841244188324, 45.35933162437017,\n    45.92389141541209, 46.49252901546552, 47.065252796817916,\n    47.64207110610409, 48.22299226451468, 48.808024568002054,\n    49.3971762874833, 49.9904556690408, 50.587870934119984,\n    51.189430279724725, 51.79514187861014, 52.40501387947288,\n    53.0190544071392, 53.637271562750364, 54.259673423945976,\n    54.88626804504493, 55.517063457223934, 56.15206766869424,\n    56.79128866487574, 57.43473440856916, 58.08241284012621,\n    58.734331877617365, 59.39049941699807, 60.05092333227251,\n    60.715611475655585, 61.38457167773311, 62.057811747619894,\n    62.7353394731159, 63.417162620860914, 64.10328893648692,\n    64.79372614476921, 65.48848194977529, 66.18756403501224,\n    66.89098006357258, 67.59873767827808, 68.31084450182222,\n    69.02730813691093, 69.74813616640164, 70.47333615344107,\n    71.20291564160104, 71.93688215501312, 72.67524319850172,\n    73.41800625771542, 74.16517879925733, 74.9167682708136,\n    75.67278210128072, 76.43322770089146, 77.1981124613393,\n    77.96744375590167, 78.74122893956174, 79.51947534912904,\n    80.30219030335869, 81.08938110306934, 81.88105503125999,\n    82.67721935322541, 83.4778813166706, 84.28304815182372,\n    85.09272707154808, 85.90692527145302, 86.72564993000343,\n    87.54890820862819, 88.3767072518277, 89.2090541872801,\n    90.04595612594655, 90.88742016217518, 91.73345337380438,\n    92.58406282226491, 93.43925555268066, 94.29903859396902,\n    95.16341895893969, 96.03240364439274, 96.9059996312159,\n    97.78421388448044, 98.6670533535366, 99.55452497210776,\n];\n//# sourceMappingURL=hct_solver.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as utils from '../utils/color_utils';\nimport * as math from '../utils/math_utils';\n/**\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n *\n * This class caches intermediate values of the CAM16 conversion process that\n * depend only on viewing conditions, enabling speed ups.\n */\nexport class ViewingConditions {\n    /**\n     * Parameters are intermediate values of the CAM16 conversion process. Their\n     * names are shorthand for technical color science terminology, this class\n     * would not benefit from documenting them individually. A brief overview\n     * is available in the CAM16 specification, and a complete overview requires\n     * a color science textbook, such as Fairchild's Color Appearance Models.\n     */\n    constructor(n, aw, nbb, ncb, c, nc, rgbD, fl, fLRoot, z) {\n        this.n = n;\n        this.aw = aw;\n        this.nbb = nbb;\n        this.ncb = ncb;\n        this.c = c;\n        this.nc = nc;\n        this.rgbD = rgbD;\n        this.fl = fl;\n        this.fLRoot = fLRoot;\n        this.z = z;\n    }\n    /**\n     * Create ViewingConditions from a simple, physically relevant, set of\n     * parameters.\n     *\n     * @param whitePoint White point, measured in the XYZ color space.\n     *     default = D65, or sunny day afternoon\n     * @param adaptingLuminance The luminance of the adapting field. Informally,\n     *     how bright it is in the room where the color is viewed. Can be\n     *     calculated from lux by multiplying lux by 0.0586. default = 11.72,\n     *     or 200 lux.\n     * @param backgroundLstar The lightness of the area surrounding the color.\n     *     measured by L* in L*a*b*. default = 50.0\n     * @param surround A general description of the lighting surrounding the\n     *     color. 0 is pitch dark, like watching a movie in a theater. 1.0 is a\n     *     dimly light room, like watching TV at home at night. 2.0 means there\n     *     is no difference between the lighting on the color and around it.\n     *     default = 2.0\n     * @param discountingIlluminant Whether the eye accounts for the tint of the\n     *     ambient lighting, such as knowing an apple is still red in green light.\n     *     default = false, the eye does not perform this process on\n     *       self-luminous objects like displays.\n     */\n    static make(whitePoint = utils.whitePointD65(), adaptingLuminance = (200.0 / Math.PI) * utils.yFromLstar(50.0) / 100.0, backgroundLstar = 50.0, surround = 2.0, discountingIlluminant = false) {\n        const xyz = whitePoint;\n        const rW = xyz[0] * 0.401288 + xyz[1] * 0.650173 + xyz[2] * -0.051461;\n        const gW = xyz[0] * -0.250268 + xyz[1] * 1.204414 + xyz[2] * 0.045854;\n        const bW = xyz[0] * -0.002079 + xyz[1] * 0.048952 + xyz[2] * 0.953127;\n        const f = 0.8 + surround / 10.0;\n        const c = f >= 0.9 ? math.lerp(0.59, 0.69, (f - 0.9) * 10.0) :\n            math.lerp(0.525, 0.59, (f - 0.8) * 10.0);\n        let d = discountingIlluminant ?\n            1.0 :\n            f * (1.0 - (1.0 / 3.6) * Math.exp((-adaptingLuminance - 42.0) / 92.0));\n        d = d > 1.0 ? 1.0 : d < 0.0 ? 0.0 : d;\n        const nc = f;\n        const rgbD = [\n            d * (100.0 / rW) + 1.0 - d,\n            d * (100.0 / gW) + 1.0 - d,\n            d * (100.0 / bW) + 1.0 - d,\n        ];\n        const k = 1.0 / (5.0 * adaptingLuminance + 1.0);\n        const k4 = k * k * k * k;\n        const k4F = 1.0 - k4;\n        const fl = k4 * adaptingLuminance +\n            0.1 * k4F * k4F * Math.cbrt(5.0 * adaptingLuminance);\n        const n = utils.yFromLstar(backgroundLstar) / whitePoint[1];\n        const z = 1.48 + Math.sqrt(n);\n        const nbb = 0.725 / Math.pow(n, 0.2);\n        const ncb = nbb;\n        const rgbAFactors = [\n            Math.pow((fl * rgbD[0] * rW) / 100.0, 0.42),\n            Math.pow((fl * rgbD[1] * gW) / 100.0, 0.42),\n            Math.pow((fl * rgbD[2] * bW) / 100.0, 0.42),\n        ];\n        const rgbA = [\n            (400.0 * rgbAFactors[0]) / (rgbAFactors[0] + 27.13),\n            (400.0 * rgbAFactors[1]) / (rgbAFactors[1] + 27.13),\n            (400.0 * rgbAFactors[2]) / (rgbAFactors[2] + 27.13),\n        ];\n        const aw = (2.0 * rgbA[0] + rgbA[1] + 0.05 * rgbA[2]) * nbb;\n        return new ViewingConditions(n, aw, nbb, ncb, c, nc, rgbD, fl, Math.pow(fl, 0.25), z);\n    }\n}\n/** sRGB-like viewing conditions.  */\nViewingConditions.DEFAULT = ViewingConditions.make();\n//# sourceMappingURL=viewing_conditions.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './blend/blend';\nexport * from './hct/cam16';\nexport * from './hct/hct';\nexport * from './hct/viewing_conditions';\nexport * from './palettes/core_palette';\nexport * from './palettes/tonal_palette';\nexport * from './quantize/quantizer_celebi';\nexport * from './quantize/quantizer_map';\nexport * from './quantize/quantizer_wsmeans';\nexport * from './quantize/quantizer_wu';\nexport * from './scheme/scheme';\nexport * from './scheme/scheme_android';\nexport * from './score/score';\nexport * from './utils/color_utils';\nexport * from './utils/math_utils';\nexport * from './utils/string_utils';\nexport * from './utils/image_utils';\nexport * from './utils/theme_utils';\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Hct } from '../hct/hct';\nimport { TonalPalette } from './tonal_palette';\n/**\n * An intermediate concept between the key color for a UI theme, and a full\n * color scheme. 5 sets of tones are generated, all except one use the same hue\n * as the key color, and all vary in chroma.\n */\nexport class CorePalette {\n    constructor(argb, isContent) {\n        const hct = Hct.fromInt(argb);\n        const hue = hct.hue;\n        const chroma = hct.chroma;\n        if (isContent) {\n            this.a1 = TonalPalette.fromHueAndChroma(hue, chroma);\n            this.a2 = TonalPalette.fromHueAndChroma(hue, chroma / 3);\n            this.a3 = TonalPalette.fromHueAndChroma(hue + 60, chroma / 2);\n            this.n1 = TonalPalette.fromHueAndChroma(hue, Math.min(chroma / 12, 4));\n            this.n2 = TonalPalette.fromHueAndChroma(hue, Math.min(chroma / 6, 8));\n        }\n        else {\n            this.a1 = TonalPalette.fromHueAndChroma(hue, Math.max(48, chroma));\n            this.a2 = TonalPalette.fromHueAndChroma(hue, 16);\n            this.a3 = TonalPalette.fromHueAndChroma(hue + 60, 24);\n            this.n1 = TonalPalette.fromHueAndChroma(hue, 4);\n            this.n2 = TonalPalette.fromHueAndChroma(hue, 8);\n        }\n        this.error = TonalPalette.fromHueAndChroma(25, 84);\n    }\n    /**\n     * @param argb ARGB representation of a color\n     */\n    static of(argb) {\n        return new CorePalette(argb, false);\n    }\n    /**\n     * @param argb ARGB representation of a color\n     */\n    static contentOf(argb) {\n        return new CorePalette(argb, true);\n    }\n}\n//# sourceMappingURL=core_palette.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Hct } from '../hct/hct';\n/**\n *  A convenience class for retrieving colors that are constant in hue and\n *  chroma, but vary in tone.\n */\nexport class TonalPalette {\n    constructor(hue, chroma) {\n        this.hue = hue;\n        this.chroma = chroma;\n        this.cache = new Map();\n    }\n    /**\n     * @param argb ARGB representation of a color\n     * @return Tones matching that color's hue and chroma.\n     */\n    static fromInt(argb) {\n        const hct = Hct.fromInt(argb);\n        return TonalPalette.fromHueAndChroma(hct.hue, hct.chroma);\n    }\n    /**\n     * @param hue HCT hue\n     * @param chroma HCT chroma\n     * @return Tones matching hue and chroma.\n     */\n    static fromHueAndChroma(hue, chroma) {\n        return new TonalPalette(hue, chroma);\n    }\n    /**\n     * @param tone HCT tone, measured from 0 to 100.\n     * @return ARGB representation of a color with that tone.\n     */\n    tone(tone) {\n        let argb = this.cache.get(tone);\n        if (argb === undefined) {\n            argb = Hct.from(this.hue, this.chroma, tone).toInt();\n            this.cache.set(tone, argb);\n        }\n        return argb;\n    }\n}\n//# sourceMappingURL=tonal_palette.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport './point_provider';\nimport * as utils from '../utils/color_utils';\n/**\n * Provides conversions needed for K-Means quantization. Converting input to\n * points, and converting the final state of the K-Means algorithm to colors.\n */\nexport class LabPointProvider {\n    /**\n     * Convert a color represented in ARGB to a 3-element array of L*a*b*\n     * coordinates of the color.\n     */\n    fromInt(argb) {\n        return utils.labFromArgb(argb);\n    }\n    /**\n     * Convert a 3-element array to a color represented in ARGB.\n     */\n    toInt(point) {\n        return utils.argbFromLab(point[0], point[1], point[2]);\n    }\n    /**\n     * Standard CIE 1976 delta E formula also takes the square root, unneeded\n     * here. This method is used by quantization algorithms to compare distance,\n     * and the relative ordering is the same, with or without a square root.\n     *\n     * This relatively minor optimization is helpful because this method is\n     * called at least once for each pixel in an image.\n     */\n    distance(from, to) {\n        const dL = from[0] - to[0];\n        const dA = from[1] - to[1];\n        const dB = from[2] - to[2];\n        return dL * dL + dA * dA + dB * dB;\n    }\n}\n//# sourceMappingURL=lab_point_provider.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//# sourceMappingURL=point_provider.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { QuantizerWsmeans } from './quantizer_wsmeans';\nimport { QuantizerWu } from './quantizer_wu';\n/**\n * An image quantizer that improves on the quality of a standard K-Means\n * algorithm by setting the K-Means initial state to the output of a Wu\n * quantizer, instead of random centroids. Improves on speed by several\n * optimizations, as implemented in Wsmeans, or Weighted Square Means, K-Means\n * with those optimizations.\n *\n * This algorithm was designed by M. Emre Celebi, and was found in their 2011\n * paper, Improving the Performance of K-Means for Color Quantization.\n * https://arxiv.org/abs/1101.0395\n */\n// libmonet is designed to have a consistent API across platforms\n// and modular components that can be moved around easily. Using a class as a\n// namespace facilitates this.\n//\n// tslint:disable-next-line:class-as-namespace\nexport class QuantizerCelebi {\n    /**\n     * @param pixels Colors in ARGB format.\n     * @param maxColors The number of colors to divide the image into. A lower\n     *     number of colors may be returned.\n     * @return Map with keys of colors in ARGB format, and values of number of\n     *     pixels in the original image that correspond to the color in the\n     *     quantized image.\n     */\n    static quantize(pixels, maxColors) {\n        const wu = new QuantizerWu();\n        const wuResult = wu.quantize(pixels, maxColors);\n        return QuantizerWsmeans.quantize(pixels, wuResult, maxColors);\n    }\n}\n//# sourceMappingURL=quantizer_celebi.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as utils from '../utils/color_utils';\n/**\n * Quantizes an image into a map, with keys of ARGB colors, and values of the\n * number of times that color appears in the image.\n */\n// libmonet is designed to have a consistent API across platforms\n// and modular components that can be moved around easily. Using a class as a\n// namespace facilitates this.\n//\n// tslint:disable-next-line:class-as-namespace\nexport class QuantizerMap {\n    /**\n     * @param pixels Colors in ARGB format.\n     * @return A Map with keys of ARGB colors, and values of the number of times\n     *     the color appears in the image.\n     */\n    static quantize(pixels) {\n        var _a;\n        const countByColor = new Map();\n        for (let i = 0; i < pixels.length; i++) {\n            const pixel = pixels[i];\n            const alpha = utils.alphaFromArgb(pixel);\n            if (alpha < 255) {\n                continue;\n            }\n            countByColor.set(pixel, ((_a = countByColor.get(pixel)) !== null && _a !== void 0 ? _a : 0) + 1);\n        }\n        return countByColor;\n    }\n}\n//# sourceMappingURL=quantizer_map.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { LabPointProvider } from './lab_point_provider';\nconst MAX_ITERATIONS = 10;\nconst MIN_MOVEMENT_DISTANCE = 3.0;\n/**\n * An image quantizer that improves on the speed of a standard K-Means algorithm\n * by implementing several optimizations, including deduping identical pixels\n * and a triangle inequality rule that reduces the number of comparisons needed\n * to identify which cluster a point should be moved to.\n *\n * Wsmeans stands for Weighted Square Means.\n *\n * This algorithm was designed by M. Emre Celebi, and was found in their 2011\n * paper, Improving the Performance of K-Means for Color Quantization.\n * https://arxiv.org/abs/1101.0395\n */\n// libmonet is designed to have a consistent API across platforms\n// and modular components that can be moved around easily. Using a class as a\n// namespace facilitates this.\n//\n// tslint:disable-next-line:class-as-namespace\nexport class QuantizerWsmeans {\n    /**\n     * @param inputPixels Colors in ARGB format.\n     * @param startingClusters Defines the initial state of the quantizer. Passing\n     *     an empty array is fine, the implementation will create its own initial\n     *     state that leads to reproducible results for the same inputs.\n     *     Passing an array that is the result of Wu quantization leads to higher\n     *     quality results.\n     * @param maxColors The number of colors to divide the image into. A lower\n     *     number of colors may be returned.\n     * @return Colors in ARGB format.\n     */\n    static quantize(inputPixels, startingClusters, maxColors) {\n        const pixelToCount = new Map();\n        const points = new Array();\n        const pixels = new Array();\n        const pointProvider = new LabPointProvider();\n        let pointCount = 0;\n        for (let i = 0; i < inputPixels.length; i++) {\n            const inputPixel = inputPixels[i];\n            const pixelCount = pixelToCount.get(inputPixel);\n            if (pixelCount === undefined) {\n                pointCount++;\n                points.push(pointProvider.fromInt(inputPixel));\n                pixels.push(inputPixel);\n                pixelToCount.set(inputPixel, 1);\n            }\n            else {\n                pixelToCount.set(inputPixel, pixelCount + 1);\n            }\n        }\n        const counts = new Array();\n        for (let i = 0; i < pointCount; i++) {\n            const pixel = pixels[i];\n            const count = pixelToCount.get(pixel);\n            if (count !== undefined) {\n                counts[i] = count;\n            }\n        }\n        let clusterCount = Math.min(maxColors, pointCount);\n        if (startingClusters.length > 0) {\n            clusterCount = Math.min(clusterCount, startingClusters.length);\n        }\n        const clusters = new Array();\n        for (let i = 0; i < startingClusters.length; i++) {\n            clusters.push(pointProvider.fromInt(startingClusters[i]));\n        }\n        const additionalClustersNeeded = clusterCount - clusters.length;\n        if (startingClusters.length === 0 && additionalClustersNeeded > 0) {\n            for (let i = 0; i < additionalClustersNeeded; i++) {\n                const l = Math.random() * 100.0;\n                const a = Math.random() * (100.0 - (-100.0) + 1) + -100;\n                const b = Math.random() * (100.0 - (-100.0) + 1) + -100;\n                clusters.push(new Array(l, a, b));\n            }\n        }\n        const clusterIndices = new Array();\n        for (let i = 0; i < pointCount; i++) {\n            clusterIndices.push(Math.floor(Math.random() * clusterCount));\n        }\n        const indexMatrix = new Array();\n        for (let i = 0; i < clusterCount; i++) {\n            indexMatrix.push(new Array());\n            for (let j = 0; j < clusterCount; j++) {\n                indexMatrix[i].push(0);\n            }\n        }\n        const distanceToIndexMatrix = new Array();\n        for (let i = 0; i < clusterCount; i++) {\n            distanceToIndexMatrix.push(new Array());\n            for (let j = 0; j < clusterCount; j++) {\n                distanceToIndexMatrix[i].push(new DistanceAndIndex());\n            }\n        }\n        const pixelCountSums = new Array();\n        for (let i = 0; i < clusterCount; i++) {\n            pixelCountSums.push(0);\n        }\n        for (let iteration = 0; iteration < MAX_ITERATIONS; iteration++) {\n            for (let i = 0; i < clusterCount; i++) {\n                for (let j = i + 1; j < clusterCount; j++) {\n                    const distance = pointProvider.distance(clusters[i], clusters[j]);\n                    distanceToIndexMatrix[j][i].distance = distance;\n                    distanceToIndexMatrix[j][i].index = i;\n                    distanceToIndexMatrix[i][j].distance = distance;\n                    distanceToIndexMatrix[i][j].index = j;\n                }\n                distanceToIndexMatrix[i].sort();\n                for (let j = 0; j < clusterCount; j++) {\n                    indexMatrix[i][j] = distanceToIndexMatrix[i][j].index;\n                }\n            }\n            let pointsMoved = 0;\n            for (let i = 0; i < pointCount; i++) {\n                const point = points[i];\n                const previousClusterIndex = clusterIndices[i];\n                const previousCluster = clusters[previousClusterIndex];\n                const previousDistance = pointProvider.distance(point, previousCluster);\n                let minimumDistance = previousDistance;\n                let newClusterIndex = -1;\n                for (let j = 0; j < clusterCount; j++) {\n                    if (distanceToIndexMatrix[previousClusterIndex][j].distance >=\n                        4 * previousDistance) {\n                        continue;\n                    }\n                    const distance = pointProvider.distance(point, clusters[j]);\n                    if (distance < minimumDistance) {\n                        minimumDistance = distance;\n                        newClusterIndex = j;\n                    }\n                }\n                if (newClusterIndex !== -1) {\n                    const distanceChange = Math.abs((Math.sqrt(minimumDistance) - Math.sqrt(previousDistance)));\n                    if (distanceChange > MIN_MOVEMENT_DISTANCE) {\n                        pointsMoved++;\n                        clusterIndices[i] = newClusterIndex;\n                    }\n                }\n            }\n            if (pointsMoved === 0 && iteration !== 0) {\n                break;\n            }\n            const componentASums = new Array(clusterCount).fill(0);\n            const componentBSums = new Array(clusterCount).fill(0);\n            const componentCSums = new Array(clusterCount).fill(0);\n            for (let i = 0; i < clusterCount; i++) {\n                pixelCountSums[i] = 0;\n            }\n            for (let i = 0; i < pointCount; i++) {\n                const clusterIndex = clusterIndices[i];\n                const point = points[i];\n                const count = counts[i];\n                pixelCountSums[clusterIndex] += count;\n                componentASums[clusterIndex] += (point[0] * count);\n                componentBSums[clusterIndex] += (point[1] * count);\n                componentCSums[clusterIndex] += (point[2] * count);\n            }\n            for (let i = 0; i < clusterCount; i++) {\n                const count = pixelCountSums[i];\n                if (count === 0) {\n                    clusters[i] = [0.0, 0.0, 0.0];\n                    continue;\n                }\n                const a = componentASums[i] / count;\n                const b = componentBSums[i] / count;\n                const c = componentCSums[i] / count;\n                clusters[i] = [a, b, c];\n            }\n        }\n        const argbToPopulation = new Map();\n        for (let i = 0; i < clusterCount; i++) {\n            const count = pixelCountSums[i];\n            if (count === 0) {\n                continue;\n            }\n            const possibleNewCluster = pointProvider.toInt(clusters[i]);\n            if (argbToPopulation.has(possibleNewCluster)) {\n                continue;\n            }\n            argbToPopulation.set(possibleNewCluster, count);\n        }\n        return argbToPopulation;\n    }\n}\n/**\n *  A wrapper for maintaining a table of distances between K-Means clusters.\n */\nclass DistanceAndIndex {\n    constructor() {\n        this.distance = -1;\n        this.index = -1;\n    }\n}\n//# sourceMappingURL=quantizer_wsmeans.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as utils from '../utils/color_utils';\nimport { QuantizerMap } from './quantizer_map';\nconst INDEX_BITS = 5;\nconst SIDE_LENGTH = 33; // ((1 << INDEX_INDEX_BITS) + 1)\nconst TOTAL_SIZE = 35937; // SIDE_LENGTH * SIDE_LENGTH * SIDE_LENGTH\nconst directions = {\n    RED: 'red',\n    GREEN: 'green',\n    BLUE: 'blue',\n};\n/**\n * An image quantizer that divides the image's pixels into clusters by\n * recursively cutting an RGB cube, based on the weight of pixels in each area\n * of the cube.\n *\n * The algorithm was described by Xiaolin Wu in Graphic Gems II, published in\n * 1991.\n */\nexport class QuantizerWu {\n    constructor(weights = [], momentsR = [], momentsG = [], momentsB = [], moments = [], cubes = []) {\n        this.weights = weights;\n        this.momentsR = momentsR;\n        this.momentsG = momentsG;\n        this.momentsB = momentsB;\n        this.moments = moments;\n        this.cubes = cubes;\n    }\n    /**\n     * @param pixels Colors in ARGB format.\n     * @param maxColors The number of colors to divide the image into. A lower\n     *     number of colors may be returned.\n     * @return Colors in ARGB format.\n     */\n    quantize(pixels, maxColors) {\n        this.constructHistogram(pixels);\n        this.computeMoments();\n        const createBoxesResult = this.createBoxes(maxColors);\n        const results = this.createResult(createBoxesResult.resultCount);\n        return results;\n    }\n    constructHistogram(pixels) {\n        var _a;\n        this.weights = Array.from({ length: TOTAL_SIZE }).fill(0);\n        this.momentsR = Array.from({ length: TOTAL_SIZE }).fill(0);\n        this.momentsG = Array.from({ length: TOTAL_SIZE }).fill(0);\n        this.momentsB = Array.from({ length: TOTAL_SIZE }).fill(0);\n        this.moments = Array.from({ length: TOTAL_SIZE }).fill(0);\n        const countByColor = QuantizerMap.quantize(pixels);\n        for (const [pixel, count] of countByColor.entries()) {\n            const red = utils.redFromArgb(pixel);\n            const green = utils.greenFromArgb(pixel);\n            const blue = utils.blueFromArgb(pixel);\n            const bitsToRemove = 8 - INDEX_BITS;\n            const iR = (red >> bitsToRemove) + 1;\n            const iG = (green >> bitsToRemove) + 1;\n            const iB = (blue >> bitsToRemove) + 1;\n            const index = this.getIndex(iR, iG, iB);\n            this.weights[index] = ((_a = this.weights[index]) !== null && _a !== void 0 ? _a : 0) + count;\n            this.momentsR[index] += count * red;\n            this.momentsG[index] += count * green;\n            this.momentsB[index] += count * blue;\n            this.moments[index] += count * (red * red + green * green + blue * blue);\n        }\n    }\n    computeMoments() {\n        for (let r = 1; r < SIDE_LENGTH; r++) {\n            const area = Array.from({ length: SIDE_LENGTH }).fill(0);\n            const areaR = Array.from({ length: SIDE_LENGTH }).fill(0);\n            const areaG = Array.from({ length: SIDE_LENGTH }).fill(0);\n            const areaB = Array.from({ length: SIDE_LENGTH }).fill(0);\n            const area2 = Array.from({ length: SIDE_LENGTH }).fill(0.0);\n            for (let g = 1; g < SIDE_LENGTH; g++) {\n                let line = 0;\n                let lineR = 0;\n                let lineG = 0;\n                let lineB = 0;\n                let line2 = 0.0;\n                for (let b = 1; b < SIDE_LENGTH; b++) {\n                    const index = this.getIndex(r, g, b);\n                    line += this.weights[index];\n                    lineR += this.momentsR[index];\n                    lineG += this.momentsG[index];\n                    lineB += this.momentsB[index];\n                    line2 += this.moments[index];\n                    area[b] += line;\n                    areaR[b] += lineR;\n                    areaG[b] += lineG;\n                    areaB[b] += lineB;\n                    area2[b] += line2;\n                    const previousIndex = this.getIndex(r - 1, g, b);\n                    this.weights[index] = this.weights[previousIndex] + area[b];\n                    this.momentsR[index] = this.momentsR[previousIndex] + areaR[b];\n                    this.momentsG[index] = this.momentsG[previousIndex] + areaG[b];\n                    this.momentsB[index] = this.momentsB[previousIndex] + areaB[b];\n                    this.moments[index] = this.moments[previousIndex] + area2[b];\n                }\n            }\n        }\n    }\n    createBoxes(maxColors) {\n        this.cubes =\n            Array.from({ length: maxColors }).fill(0).map(() => new Box());\n        const volumeVariance = Array.from({ length: maxColors }).fill(0.0);\n        this.cubes[0].r0 = 0;\n        this.cubes[0].g0 = 0;\n        this.cubes[0].b0 = 0;\n        this.cubes[0].r1 = SIDE_LENGTH - 1;\n        this.cubes[0].g1 = SIDE_LENGTH - 1;\n        this.cubes[0].b1 = SIDE_LENGTH - 1;\n        let generatedColorCount = maxColors;\n        let next = 0;\n        for (let i = 1; i < maxColors; i++) {\n            if (this.cut(this.cubes[next], this.cubes[i])) {\n                volumeVariance[next] =\n                    this.cubes[next].vol > 1 ? this.variance(this.cubes[next]) : 0.0;\n                volumeVariance[i] =\n                    this.cubes[i].vol > 1 ? this.variance(this.cubes[i]) : 0.0;\n            }\n            else {\n                volumeVariance[next] = 0.0;\n                i--;\n            }\n            next = 0;\n            let temp = volumeVariance[0];\n            for (let j = 1; j <= i; j++) {\n                if (volumeVariance[j] > temp) {\n                    temp = volumeVariance[j];\n                    next = j;\n                }\n            }\n            if (temp <= 0.0) {\n                generatedColorCount = i + 1;\n                break;\n            }\n        }\n        return new CreateBoxesResult(maxColors, generatedColorCount);\n    }\n    createResult(colorCount) {\n        const colors = [];\n        for (let i = 0; i < colorCount; ++i) {\n            const cube = this.cubes[i];\n            const weight = this.volume(cube, this.weights);\n            if (weight > 0) {\n                const r = Math.round(this.volume(cube, this.momentsR) / weight);\n                const g = Math.round(this.volume(cube, this.momentsG) / weight);\n                const b = Math.round(this.volume(cube, this.momentsB) / weight);\n                const color = (255 << 24) | ((r & 0x0ff) << 16) | ((g & 0x0ff) << 8) |\n                    (b & 0x0ff);\n                colors.push(color);\n            }\n        }\n        return colors;\n    }\n    variance(cube) {\n        const dr = this.volume(cube, this.momentsR);\n        const dg = this.volume(cube, this.momentsG);\n        const db = this.volume(cube, this.momentsB);\n        const xx = this.moments[this.getIndex(cube.r1, cube.g1, cube.b1)] -\n            this.moments[this.getIndex(cube.r1, cube.g1, cube.b0)] -\n            this.moments[this.getIndex(cube.r1, cube.g0, cube.b1)] +\n            this.moments[this.getIndex(cube.r1, cube.g0, cube.b0)] -\n            this.moments[this.getIndex(cube.r0, cube.g1, cube.b1)] +\n            this.moments[this.getIndex(cube.r0, cube.g1, cube.b0)] +\n            this.moments[this.getIndex(cube.r0, cube.g0, cube.b1)] -\n            this.moments[this.getIndex(cube.r0, cube.g0, cube.b0)];\n        const hypotenuse = dr * dr + dg * dg + db * db;\n        const volume = this.volume(cube, this.weights);\n        return xx - hypotenuse / volume;\n    }\n    cut(one, two) {\n        const wholeR = this.volume(one, this.momentsR);\n        const wholeG = this.volume(one, this.momentsG);\n        const wholeB = this.volume(one, this.momentsB);\n        const wholeW = this.volume(one, this.weights);\n        const maxRResult = this.maximize(one, directions.RED, one.r0 + 1, one.r1, wholeR, wholeG, wholeB, wholeW);\n        const maxGResult = this.maximize(one, directions.GREEN, one.g0 + 1, one.g1, wholeR, wholeG, wholeB, wholeW);\n        const maxBResult = this.maximize(one, directions.BLUE, one.b0 + 1, one.b1, wholeR, wholeG, wholeB, wholeW);\n        let direction;\n        const maxR = maxRResult.maximum;\n        const maxG = maxGResult.maximum;\n        const maxB = maxBResult.maximum;\n        if (maxR >= maxG && maxR >= maxB) {\n            if (maxRResult.cutLocation < 0) {\n                return false;\n            }\n            direction = directions.RED;\n        }\n        else if (maxG >= maxR && maxG >= maxB) {\n            direction = directions.GREEN;\n        }\n        else {\n            direction = directions.BLUE;\n        }\n        two.r1 = one.r1;\n        two.g1 = one.g1;\n        two.b1 = one.b1;\n        switch (direction) {\n            case directions.RED:\n                one.r1 = maxRResult.cutLocation;\n                two.r0 = one.r1;\n                two.g0 = one.g0;\n                two.b0 = one.b0;\n                break;\n            case directions.GREEN:\n                one.g1 = maxGResult.cutLocation;\n                two.r0 = one.r0;\n                two.g0 = one.g1;\n                two.b0 = one.b0;\n                break;\n            case directions.BLUE:\n                one.b1 = maxBResult.cutLocation;\n                two.r0 = one.r0;\n                two.g0 = one.g0;\n                two.b0 = one.b1;\n                break;\n            default:\n                throw new Error('unexpected direction ' + direction);\n        }\n        one.vol = (one.r1 - one.r0) * (one.g1 - one.g0) * (one.b1 - one.b0);\n        two.vol = (two.r1 - two.r0) * (two.g1 - two.g0) * (two.b1 - two.b0);\n        return true;\n    }\n    maximize(cube, direction, first, last, wholeR, wholeG, wholeB, wholeW) {\n        const bottomR = this.bottom(cube, direction, this.momentsR);\n        const bottomG = this.bottom(cube, direction, this.momentsG);\n        const bottomB = this.bottom(cube, direction, this.momentsB);\n        const bottomW = this.bottom(cube, direction, this.weights);\n        let max = 0.0;\n        let cut = -1;\n        let halfR = 0;\n        let halfG = 0;\n        let halfB = 0;\n        let halfW = 0;\n        for (let i = first; i < last; i++) {\n            halfR = bottomR + this.top(cube, direction, i, this.momentsR);\n            halfG = bottomG + this.top(cube, direction, i, this.momentsG);\n            halfB = bottomB + this.top(cube, direction, i, this.momentsB);\n            halfW = bottomW + this.top(cube, direction, i, this.weights);\n            if (halfW === 0) {\n                continue;\n            }\n            let tempNumerator = (halfR * halfR + halfG * halfG + halfB * halfB) * 1.0;\n            let tempDenominator = halfW * 1.0;\n            let temp = tempNumerator / tempDenominator;\n            halfR = wholeR - halfR;\n            halfG = wholeG - halfG;\n            halfB = wholeB - halfB;\n            halfW = wholeW - halfW;\n            if (halfW === 0) {\n                continue;\n            }\n            tempNumerator = (halfR * halfR + halfG * halfG + halfB * halfB) * 1.0;\n            tempDenominator = halfW * 1.0;\n            temp += tempNumerator / tempDenominator;\n            if (temp > max) {\n                max = temp;\n                cut = i;\n            }\n        }\n        return new MaximizeResult(cut, max);\n    }\n    volume(cube, moment) {\n        return (moment[this.getIndex(cube.r1, cube.g1, cube.b1)] -\n            moment[this.getIndex(cube.r1, cube.g1, cube.b0)] -\n            moment[this.getIndex(cube.r1, cube.g0, cube.b1)] +\n            moment[this.getIndex(cube.r1, cube.g0, cube.b0)] -\n            moment[this.getIndex(cube.r0, cube.g1, cube.b1)] +\n            moment[this.getIndex(cube.r0, cube.g1, cube.b0)] +\n            moment[this.getIndex(cube.r0, cube.g0, cube.b1)] -\n            moment[this.getIndex(cube.r0, cube.g0, cube.b0)]);\n    }\n    bottom(cube, direction, moment) {\n        switch (direction) {\n            case directions.RED:\n                return (-moment[this.getIndex(cube.r0, cube.g1, cube.b1)] +\n                    moment[this.getIndex(cube.r0, cube.g1, cube.b0)] +\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b1)] -\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b0)]);\n            case directions.GREEN:\n                return (-moment[this.getIndex(cube.r1, cube.g0, cube.b1)] +\n                    moment[this.getIndex(cube.r1, cube.g0, cube.b0)] +\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b1)] -\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b0)]);\n            case directions.BLUE:\n                return (-moment[this.getIndex(cube.r1, cube.g1, cube.b0)] +\n                    moment[this.getIndex(cube.r1, cube.g0, cube.b0)] +\n                    moment[this.getIndex(cube.r0, cube.g1, cube.b0)] -\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b0)]);\n            default:\n                throw new Error('unexpected direction $direction');\n        }\n    }\n    top(cube, direction, position, moment) {\n        switch (direction) {\n            case directions.RED:\n                return (moment[this.getIndex(position, cube.g1, cube.b1)] -\n                    moment[this.getIndex(position, cube.g1, cube.b0)] -\n                    moment[this.getIndex(position, cube.g0, cube.b1)] +\n                    moment[this.getIndex(position, cube.g0, cube.b0)]);\n            case directions.GREEN:\n                return (moment[this.getIndex(cube.r1, position, cube.b1)] -\n                    moment[this.getIndex(cube.r1, position, cube.b0)] -\n                    moment[this.getIndex(cube.r0, position, cube.b1)] +\n                    moment[this.getIndex(cube.r0, position, cube.b0)]);\n            case directions.BLUE:\n                return (moment[this.getIndex(cube.r1, cube.g1, position)] -\n                    moment[this.getIndex(cube.r1, cube.g0, position)] -\n                    moment[this.getIndex(cube.r0, cube.g1, position)] +\n                    moment[this.getIndex(cube.r0, cube.g0, position)]);\n            default:\n                throw new Error('unexpected direction $direction');\n        }\n    }\n    getIndex(r, g, b) {\n        return (r << (INDEX_BITS * 2)) + (r << (INDEX_BITS + 1)) + r +\n            (g << INDEX_BITS) + g + b;\n    }\n}\n/**\n * Keeps track of the state of each box created as the Wu  quantization\n * algorithm progresses through dividing the image's pixels as plotted in RGB.\n */\nclass Box {\n    constructor(r0 = 0, r1 = 0, g0 = 0, g1 = 0, b0 = 0, b1 = 0, vol = 0) {\n        this.r0 = r0;\n        this.r1 = r1;\n        this.g0 = g0;\n        this.g1 = g1;\n        this.b0 = b0;\n        this.b1 = b1;\n        this.vol = vol;\n    }\n}\n/**\n * Represents final result of Wu algorithm.\n */\nclass CreateBoxesResult {\n    /**\n     * @param requestedCount how many colors the caller asked to be returned from\n     *     quantization.\n     * @param resultCount the actual number of colors achieved from quantization.\n     *     May be lower than the requested count.\n     */\n    constructor(requestedCount, resultCount) {\n        this.requestedCount = requestedCount;\n        this.resultCount = resultCount;\n    }\n}\n/**\n * Represents the result of calculating where to cut an existing box in such\n * a way to maximize variance between the two new boxes created by a cut.\n */\nclass MaximizeResult {\n    constructor(cutLocation, maximum) {\n        this.cutLocation = cutLocation;\n        this.maximum = maximum;\n    }\n}\n//# sourceMappingURL=quantizer_wu.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport { CorePalette } from '../palettes/core_palette';\n/**\n * Represents a Material color scheme, a mapping of color roles to colors.\n */\nexport class Scheme {\n    constructor(props) {\n        this.props = props;\n    }\n    get primary() {\n        return this.props.primary;\n    }\n    get onPrimary() {\n        return this.props.onPrimary;\n    }\n    get primaryContainer() {\n        return this.props.primaryContainer;\n    }\n    get onPrimaryContainer() {\n        return this.props.onPrimaryContainer;\n    }\n    get secondary() {\n        return this.props.secondary;\n    }\n    get onSecondary() {\n        return this.props.onSecondary;\n    }\n    get secondaryContainer() {\n        return this.props.secondaryContainer;\n    }\n    get onSecondaryContainer() {\n        return this.props.onSecondaryContainer;\n    }\n    get tertiary() {\n        return this.props.tertiary;\n    }\n    get onTertiary() {\n        return this.props.onTertiary;\n    }\n    get tertiaryContainer() {\n        return this.props.tertiaryContainer;\n    }\n    get onTertiaryContainer() {\n        return this.props.onTertiaryContainer;\n    }\n    get error() {\n        return this.props.error;\n    }\n    get onError() {\n        return this.props.onError;\n    }\n    get errorContainer() {\n        return this.props.errorContainer;\n    }\n    get onErrorContainer() {\n        return this.props.onErrorContainer;\n    }\n    get background() {\n        return this.props.background;\n    }\n    get onBackground() {\n        return this.props.onBackground;\n    }\n    get surface() {\n        return this.props.surface;\n    }\n    get onSurface() {\n        return this.props.onSurface;\n    }\n    get surfaceVariant() {\n        return this.props.surfaceVariant;\n    }\n    get onSurfaceVariant() {\n        return this.props.onSurfaceVariant;\n    }\n    get outline() {\n        return this.props.outline;\n    }\n    get outlineVariant() {\n        return this.props.outlineVariant;\n    }\n    get shadow() {\n        return this.props.shadow;\n    }\n    get scrim() {\n        return this.props.scrim;\n    }\n    get inverseSurface() {\n        return this.props.inverseSurface;\n    }\n    get inverseOnSurface() {\n        return this.props.inverseOnSurface;\n    }\n    get inversePrimary() {\n        return this.props.inversePrimary;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material color scheme, based on the color's hue.\n     */\n    static light(argb) {\n        return Scheme.lightFromCorePalette(CorePalette.of(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material color scheme, based on the color's hue.\n     */\n    static dark(argb) {\n        return Scheme.darkFromCorePalette(CorePalette.of(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material content color scheme, based on the color's hue.\n     */\n    static lightContent(argb) {\n        return Scheme.lightFromCorePalette(CorePalette.contentOf(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material content color scheme, based on the color's hue.\n     */\n    static darkContent(argb) {\n        return Scheme.darkFromCorePalette(CorePalette.contentOf(argb));\n    }\n    /**\n     * Light scheme from core palette\n     */\n    static lightFromCorePalette(core) {\n        return new Scheme({\n            primary: core.a1.tone(40),\n            onPrimary: core.a1.tone(100),\n            primaryContainer: core.a1.tone(90),\n            onPrimaryContainer: core.a1.tone(10),\n            secondary: core.a2.tone(40),\n            onSecondary: core.a2.tone(100),\n            secondaryContainer: core.a2.tone(90),\n            onSecondaryContainer: core.a2.tone(10),\n            tertiary: core.a3.tone(40),\n            onTertiary: core.a3.tone(100),\n            tertiaryContainer: core.a3.tone(90),\n            onTertiaryContainer: core.a3.tone(10),\n            error: core.error.tone(40),\n            onError: core.error.tone(100),\n            errorContainer: core.error.tone(90),\n            onErrorContainer: core.error.tone(10),\n            background: core.n1.tone(99),\n            onBackground: core.n1.tone(10),\n            surface: core.n1.tone(99),\n            onSurface: core.n1.tone(10),\n            surfaceVariant: core.n2.tone(90),\n            onSurfaceVariant: core.n2.tone(30),\n            outline: core.n2.tone(50),\n            outlineVariant: core.n2.tone(80),\n            shadow: core.n1.tone(0),\n            scrim: core.n1.tone(0),\n            inverseSurface: core.n1.tone(20),\n            inverseOnSurface: core.n1.tone(95),\n            inversePrimary: core.a1.tone(80)\n        });\n    }\n    /**\n     * Dark scheme from core palette\n     */\n    static darkFromCorePalette(core) {\n        return new Scheme({\n            primary: core.a1.tone(80),\n            onPrimary: core.a1.tone(20),\n            primaryContainer: core.a1.tone(30),\n            onPrimaryContainer: core.a1.tone(90),\n            secondary: core.a2.tone(80),\n            onSecondary: core.a2.tone(20),\n            secondaryContainer: core.a2.tone(30),\n            onSecondaryContainer: core.a2.tone(90),\n            tertiary: core.a3.tone(80),\n            onTertiary: core.a3.tone(20),\n            tertiaryContainer: core.a3.tone(30),\n            onTertiaryContainer: core.a3.tone(90),\n            error: core.error.tone(80),\n            onError: core.error.tone(20),\n            errorContainer: core.error.tone(30),\n            onErrorContainer: core.error.tone(80),\n            background: core.n1.tone(10),\n            onBackground: core.n1.tone(90),\n            surface: core.n1.tone(10),\n            onSurface: core.n1.tone(90),\n            surfaceVariant: core.n2.tone(30),\n            onSurfaceVariant: core.n2.tone(80),\n            outline: core.n2.tone(60),\n            outlineVariant: core.n2.tone(30),\n            shadow: core.n1.tone(0),\n            scrim: core.n1.tone(0),\n            inverseSurface: core.n1.tone(90),\n            inverseOnSurface: core.n1.tone(20),\n            inversePrimary: core.a1.tone(40)\n        });\n    }\n    toJSON() {\n        return Object.assign({}, this.props);\n    }\n}\n//# sourceMappingURL=scheme.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CorePalette } from '../palettes/core_palette';\n/**\n * Represents an Android 12 color scheme, a mapping of color roles to colors.\n */\nexport class SchemeAndroid {\n    constructor(props) {\n        this.props = props;\n    }\n    get colorAccentPrimary() {\n        return this.props.colorAccentPrimary;\n    }\n    get colorAccentPrimaryVariant() {\n        return this.props.colorAccentPrimaryVariant;\n    }\n    get colorAccentSecondary() {\n        return this.props.colorAccentSecondary;\n    }\n    get colorAccentSecondaryVariant() {\n        return this.props.colorAccentSecondaryVariant;\n    }\n    get colorAccentTertiary() {\n        return this.props.colorAccentTertiary;\n    }\n    get colorAccentTertiaryVariant() {\n        return this.props.colorAccentTertiaryVariant;\n    }\n    get textColorPrimary() {\n        return this.props.textColorPrimary;\n    }\n    get textColorSecondary() {\n        return this.props.textColorSecondary;\n    }\n    get textColorTertiary() {\n        return this.props.textColorTertiary;\n    }\n    get textColorPrimaryInverse() {\n        return this.props.textColorPrimaryInverse;\n    }\n    get textColorSecondaryInverse() {\n        return this.props.textColorSecondaryInverse;\n    }\n    get textColorTertiaryInverse() {\n        return this.props.textColorTertiaryInverse;\n    }\n    get colorBackground() {\n        return this.props.colorBackground;\n    }\n    get colorBackgroundFloating() {\n        return this.props.colorBackgroundFloating;\n    }\n    get colorSurface() {\n        return this.props.colorSurface;\n    }\n    get colorSurfaceVariant() {\n        return this.props.colorSurfaceVariant;\n    }\n    get colorSurfaceHighlight() {\n        return this.props.colorSurfaceHighlight;\n    }\n    get surfaceHeader() {\n        return this.props.surfaceHeader;\n    }\n    get underSurface() {\n        return this.props.underSurface;\n    }\n    get offState() {\n        return this.props.offState;\n    }\n    get accentSurface() {\n        return this.props.accentSurface;\n    }\n    get textPrimaryOnAccent() {\n        return this.props.textPrimaryOnAccent;\n    }\n    get textSecondaryOnAccent() {\n        return this.props.textSecondaryOnAccent;\n    }\n    get volumeBackground() {\n        return this.props.volumeBackground;\n    }\n    get scrim() {\n        return this.props.scrim;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material color scheme, based on the color's hue.\n     */\n    static light(argb) {\n        const core = CorePalette.of(argb);\n        return SchemeAndroid.lightFromCorePalette(core);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material color scheme, based on the color's hue.\n     */\n    static dark(argb) {\n        const core = CorePalette.of(argb);\n        return SchemeAndroid.darkFromCorePalette(core);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Android color scheme, based on the color's hue.\n     */\n    static lightContent(argb) {\n        const core = CorePalette.contentOf(argb);\n        return SchemeAndroid.lightFromCorePalette(core);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Android color scheme, based on the color's hue.\n     */\n    static darkContent(argb) {\n        const core = CorePalette.contentOf(argb);\n        return SchemeAndroid.darkFromCorePalette(core);\n    }\n    /**\n     * Light scheme from core palette\n     */\n    static lightFromCorePalette(core) {\n        return new SchemeAndroid({\n            colorAccentPrimary: core.a1.tone(90),\n            colorAccentPrimaryVariant: core.a1.tone(40),\n            colorAccentSecondary: core.a2.tone(90),\n            colorAccentSecondaryVariant: core.a2.tone(40),\n            colorAccentTertiary: core.a3.tone(90),\n            colorAccentTertiaryVariant: core.a3.tone(40),\n            textColorPrimary: core.n1.tone(10),\n            textColorSecondary: core.n2.tone(30),\n            textColorTertiary: core.n2.tone(50),\n            textColorPrimaryInverse: core.n1.tone(95),\n            textColorSecondaryInverse: core.n1.tone(80),\n            textColorTertiaryInverse: core.n1.tone(60),\n            colorBackground: core.n1.tone(95),\n            colorBackgroundFloating: core.n1.tone(98),\n            colorSurface: core.n1.tone(98),\n            colorSurfaceVariant: core.n1.tone(90),\n            colorSurfaceHighlight: core.n1.tone(100),\n            surfaceHeader: core.n1.tone(90),\n            underSurface: core.n1.tone(0),\n            offState: core.n1.tone(20),\n            accentSurface: core.a2.tone(95),\n            textPrimaryOnAccent: core.n1.tone(10),\n            textSecondaryOnAccent: core.n2.tone(30),\n            volumeBackground: core.n1.tone(25),\n            scrim: core.n1.tone(80),\n        });\n    }\n    /**\n     * Dark scheme from core palette\n     */\n    static darkFromCorePalette(core) {\n        return new SchemeAndroid({\n            colorAccentPrimary: core.a1.tone(90),\n            colorAccentPrimaryVariant: core.a1.tone(70),\n            colorAccentSecondary: core.a2.tone(90),\n            colorAccentSecondaryVariant: core.a2.tone(70),\n            colorAccentTertiary: core.a3.tone(90),\n            colorAccentTertiaryVariant: core.a3.tone(70),\n            textColorPrimary: core.n1.tone(95),\n            textColorSecondary: core.n2.tone(80),\n            textColorTertiary: core.n2.tone(60),\n            textColorPrimaryInverse: core.n1.tone(10),\n            textColorSecondaryInverse: core.n1.tone(30),\n            textColorTertiaryInverse: core.n1.tone(50),\n            colorBackground: core.n1.tone(10),\n            colorBackgroundFloating: core.n1.tone(10),\n            colorSurface: core.n1.tone(20),\n            colorSurfaceVariant: core.n1.tone(30),\n            colorSurfaceHighlight: core.n1.tone(35),\n            surfaceHeader: core.n1.tone(30),\n            underSurface: core.n1.tone(0),\n            offState: core.n1.tone(20),\n            accentSurface: core.a2.tone(95),\n            textPrimaryOnAccent: core.n1.tone(10),\n            textSecondaryOnAccent: core.n2.tone(30),\n            volumeBackground: core.n1.tone(25),\n            scrim: core.n1.tone(80),\n        });\n    }\n    toJSON() {\n        return Object.assign({}, this.props);\n    }\n}\n//# sourceMappingURL=scheme_android.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Cam16 } from '../hct/cam16';\nimport * as utils from '../utils/color_utils';\nimport * as math from '../utils/math_utils';\n/**\n *  Given a large set of colors, remove colors that are unsuitable for a UI\n *  theme, and rank the rest based on suitability.\n *\n *  Enables use of a high cluster count for image quantization, thus ensuring\n *  colors aren't muddied, while curating the high cluster count to a much\n *  smaller number of appropriate choices.\n */\nexport class Score {\n    constructor() { }\n    /**\n     * Given a map with keys of colors and values of how often the color appears,\n     * rank the colors based on suitability for being used for a UI theme.\n     *\n     * @param colorsToPopulation map with keys of colors and values of how often\n     *     the color appears, usually from a source image.\n     * @return Colors sorted by suitability for a UI theme. The most suitable\n     *     color is the first item, the least suitable is the last. There will\n     *     always be at least one color returned. If all the input colors\n     *     were not suitable for a theme, a default fallback color will be\n     *     provided, Google Blue.\n     */\n    static score(colorsToPopulation, contentColor = false) {\n        // Determine the total count of all colors.\n        let populationSum = 0;\n        for (const population of colorsToPopulation.values()) {\n            populationSum += population;\n        }\n        // Turn the count of each color into a proportion by dividing by the total\n        // count. Also, fill a cache of CAM16 colors representing each color, and\n        // record the proportion of colors for each CAM16 hue.\n        const colorsToProportion = new Map();\n        const colorsToCam = new Map();\n        const hueProportions = new Array(360).fill(0);\n        for (const [color, population] of colorsToPopulation.entries()) {\n            const proportion = population / populationSum;\n            colorsToProportion.set(color, proportion);\n            const cam = Cam16.fromInt(color);\n            colorsToCam.set(color, cam);\n            const hue = Math.round(cam.hue);\n            hueProportions[hue] += proportion;\n        }\n        // Determine the proportion of the colors around each color, by summing the\n        // proportions around each color's hue.\n        const colorsToExcitedProportion = new Map();\n        for (const [color, cam] of colorsToCam.entries()) {\n            const hue = Math.round(cam.hue);\n            let excitedProportion = 0;\n            for (let i = (hue - 15); i < (hue + 15); i++) {\n                const neighborHue = math.sanitizeDegreesInt(i);\n                excitedProportion += hueProportions[neighborHue];\n            }\n            colorsToExcitedProportion.set(color, excitedProportion);\n        }\n        // Score the colors by their proportion, as well as how chromatic they are.\n        const colorsToScore = new Map();\n        for (const [color, cam] of colorsToCam.entries()) {\n            const proportion = colorsToExcitedProportion.get(color);\n            const proportionScore = proportion * 100.0 * Score.WEIGHT_PROPORTION;\n            const chromaWeight = cam.chroma < Score.TARGET_CHROMA ?\n                Score.WEIGHT_CHROMA_BELOW :\n                Score.WEIGHT_CHROMA_ABOVE;\n            const chromaScore = (cam.chroma - Score.TARGET_CHROMA) * chromaWeight;\n            const score = proportionScore + chromaScore;\n            colorsToScore.set(color, score);\n        }\n        // Remove colors that are unsuitable, ex. very dark or unchromatic colors.\n        // Also, remove colors that are very similar in hue.\n        const filteredColors = contentColor ?\n            Score.filterContent(colorsToCam) :\n            Score.filter(colorsToExcitedProportion, colorsToCam);\n        const dedupedColorsToScore = new Map();\n        for (const color of filteredColors) {\n            let duplicateHue = false;\n            const hue = colorsToCam.get(color).hue;\n            for (const [alreadyChosenColor,] of dedupedColorsToScore) {\n                const alreadyChosenHue = colorsToCam.get(alreadyChosenColor).hue;\n                if (math.differenceDegrees(hue, alreadyChosenHue) < 15) {\n                    duplicateHue = true;\n                    break;\n                }\n            }\n            if (duplicateHue) {\n                continue;\n            }\n            dedupedColorsToScore.set(color, colorsToScore.get(color));\n        }\n        // Ensure the list of colors returned is sorted such that the first in the\n        // list is the most suitable, and the last is the least suitable.\n        const colorsByScoreDescending = Array.from(dedupedColorsToScore.entries());\n        colorsByScoreDescending.sort((first, second) => {\n            return second[1] - first[1];\n        });\n        const answer = colorsByScoreDescending.map((entry) => {\n            return entry[0];\n        });\n        // Ensure that at least one color is returned.\n        if (answer.length === 0) {\n            answer.push(0xff4285F4); // Google Blue\n        }\n        return answer;\n    }\n    static filter(colorsToExcitedProportion, colorsToCam) {\n        const filtered = new Array();\n        for (const [color, cam] of colorsToCam.entries()) {\n            const proportion = colorsToExcitedProportion.get(color);\n            if (cam.chroma >= Score.CUTOFF_CHROMA &&\n                utils.lstarFromArgb(color) >= Score.CUTOFF_TONE &&\n                proportion >= Score.CUTOFF_EXCITED_PROPORTION) {\n                filtered.push(color);\n            }\n        }\n        return filtered;\n    }\n    static filterContent(colorsToCam) {\n        return Array.from(colorsToCam.keys());\n    }\n}\nScore.TARGET_CHROMA = 48.0;\nScore.WEIGHT_PROPORTION = 0.7;\nScore.WEIGHT_CHROMA_ABOVE = 0.3;\nScore.WEIGHT_CHROMA_BELOW = 0.1;\nScore.CUTOFF_CHROMA = 15.0;\nScore.CUTOFF_TONE = 10.0;\nScore.CUTOFF_EXCITED_PROPORTION = 0.01;\n//# sourceMappingURL=score.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport * as mathUtils from './math_utils';\n/**\n * Color science utilities.\n *\n * Utility methods for color science constants and color space\n * conversions that aren't HCT or CAM16.\n */\nconst SRGB_TO_XYZ = [\n    [0.41233895, 0.35762064, 0.18051042],\n    [0.2126, 0.7152, 0.0722],\n    [0.01932141, 0.11916382, 0.95034478],\n];\nconst XYZ_TO_SRGB = [\n    [\n        3.2413774792388685,\n        -1.5376652402851851,\n        -0.49885366846268053,\n    ],\n    [\n        -0.9691452513005321,\n        1.8758853451067872,\n        0.04156585616912061,\n    ],\n    [\n        0.05562093689691305,\n        -0.20395524564742123,\n        1.0571799111220335,\n    ],\n];\nconst WHITE_POINT_D65 = [95.047, 100.0, 108.883];\n/**\n * Converts a color from RGB components to ARGB format.\n */\nexport function argbFromRgb(red, green, blue) {\n    return (255 << 24 | (red & 255) << 16 | (green & 255) << 8 | blue & 255) >>>\n        0;\n}\n/**\n * Converts a color from linear RGB components to ARGB format.\n */\nexport function argbFromLinrgb(linrgb) {\n    const r = delinearized(linrgb[0]);\n    const g = delinearized(linrgb[1]);\n    const b = delinearized(linrgb[2]);\n    return argbFromRgb(r, g, b);\n}\n/**\n * Returns the alpha component of a color in ARGB format.\n */\nexport function alphaFromArgb(argb) {\n    return argb >> 24 & 255;\n}\n/**\n * Returns the red component of a color in ARGB format.\n */\nexport function redFromArgb(argb) {\n    return argb >> 16 & 255;\n}\n/**\n * Returns the green component of a color in ARGB format.\n */\nexport function greenFromArgb(argb) {\n    return argb >> 8 & 255;\n}\n/**\n * Returns the blue component of a color in ARGB format.\n */\nexport function blueFromArgb(argb) {\n    return argb & 255;\n}\n/**\n * Returns whether a color in ARGB format is opaque.\n */\nexport function isOpaque(argb) {\n    return alphaFromArgb(argb) >= 255;\n}\n/**\n * Converts a color from ARGB to XYZ.\n */\nexport function argbFromXyz(x, y, z) {\n    const matrix = XYZ_TO_SRGB;\n    const linearR = matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z;\n    const linearG = matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z;\n    const linearB = matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z;\n    const r = delinearized(linearR);\n    const g = delinearized(linearG);\n    const b = delinearized(linearB);\n    return argbFromRgb(r, g, b);\n}\n/**\n * Converts a color from XYZ to ARGB.\n */\nexport function xyzFromArgb(argb) {\n    const r = linearized(redFromArgb(argb));\n    const g = linearized(greenFromArgb(argb));\n    const b = linearized(blueFromArgb(argb));\n    return mathUtils.matrixMultiply([r, g, b], SRGB_TO_XYZ);\n}\n/**\n * Converts a color represented in Lab color space into an ARGB\n * integer.\n */\nexport function argbFromLab(l, a, b) {\n    const whitePoint = WHITE_POINT_D65;\n    const fy = (l + 16.0) / 116.0;\n    const fx = a / 500.0 + fy;\n    const fz = fy - b / 200.0;\n    const xNormalized = labInvf(fx);\n    const yNormalized = labInvf(fy);\n    const zNormalized = labInvf(fz);\n    const x = xNormalized * whitePoint[0];\n    const y = yNormalized * whitePoint[1];\n    const z = zNormalized * whitePoint[2];\n    return argbFromXyz(x, y, z);\n}\n/**\n * Converts a color from ARGB representation to L*a*b*\n * representation.\n *\n * @param argb the ARGB representation of a color\n * @return a Lab object representing the color\n */\nexport function labFromArgb(argb) {\n    const linearR = linearized(redFromArgb(argb));\n    const linearG = linearized(greenFromArgb(argb));\n    const linearB = linearized(blueFromArgb(argb));\n    const matrix = SRGB_TO_XYZ;\n    const x = matrix[0][0] * linearR + matrix[0][1] * linearG + matrix[0][2] * linearB;\n    const y = matrix[1][0] * linearR + matrix[1][1] * linearG + matrix[1][2] * linearB;\n    const z = matrix[2][0] * linearR + matrix[2][1] * linearG + matrix[2][2] * linearB;\n    const whitePoint = WHITE_POINT_D65;\n    const xNormalized = x / whitePoint[0];\n    const yNormalized = y / whitePoint[1];\n    const zNormalized = z / whitePoint[2];\n    const fx = labF(xNormalized);\n    const fy = labF(yNormalized);\n    const fz = labF(zNormalized);\n    const l = 116.0 * fy - 16;\n    const a = 500.0 * (fx - fy);\n    const b = 200.0 * (fy - fz);\n    return [l, a, b];\n}\n/**\n * Converts an L* value to an ARGB representation.\n *\n * @param lstar L* in L*a*b*\n * @return ARGB representation of grayscale color with lightness\n * matching L*\n */\nexport function argbFromLstar(lstar) {\n    const y = yFromLstar(lstar);\n    const component = delinearized(y);\n    return argbFromRgb(component, component, component);\n}\n/**\n * Computes the L* value of a color in ARGB representation.\n *\n * @param argb ARGB representation of a color\n * @return L*, from L*a*b*, coordinate of the color\n */\nexport function lstarFromArgb(argb) {\n    const y = xyzFromArgb(argb)[1];\n    return 116.0 * labF(y / 100.0) - 16.0;\n}\n/**\n * Converts an L* value to a Y value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param lstar L* in L*a*b*\n * @return Y in XYZ\n */\nexport function yFromLstar(lstar) {\n    return 100.0 * labInvf((lstar + 16.0) / 116.0);\n}\n/**\n * Linearizes an RGB component.\n *\n * @param rgbComponent 0 <= rgb_component <= 255, represents R/G/B\n * channel\n * @return 0.0 <= output <= 100.0, color channel converted to\n * linear RGB space\n */\nexport function linearized(rgbComponent) {\n    const normalized = rgbComponent / 255.0;\n    if (normalized <= 0.040449936) {\n        return normalized / 12.92 * 100.0;\n    }\n    else {\n        return Math.pow((normalized + 0.055) / 1.055, 2.4) * 100.0;\n    }\n}\n/**\n * Delinearizes an RGB component.\n *\n * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n * linear R/G/B channel\n * @return 0 <= output <= 255, color channel converted to regular\n * RGB space\n */\nexport function delinearized(rgbComponent) {\n    const normalized = rgbComponent / 100.0;\n    let delinearized = 0.0;\n    if (normalized <= 0.0031308) {\n        delinearized = normalized * 12.92;\n    }\n    else {\n        delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n    }\n    return mathUtils.clampInt(0, 255, Math.round(delinearized * 255.0));\n}\n/**\n * Returns the standard white point; white on a sunny day.\n *\n * @return The white point\n */\nexport function whitePointD65() {\n    return WHITE_POINT_D65;\n}\nfunction labF(t) {\n    const e = 216.0 / 24389.0;\n    const kappa = 24389.0 / 27.0;\n    if (t > e) {\n        return Math.pow(t, 1.0 / 3.0);\n    }\n    else {\n        return (kappa * t + 16) / 116;\n    }\n}\nfunction labInvf(ft) {\n    const e = 216.0 / 24389.0;\n    const kappa = 24389.0 / 27.0;\n    const ft3 = ft * ft * ft;\n    if (ft3 > e) {\n        return ft3;\n    }\n    else {\n        return (116 * ft - 16) / kappa;\n    }\n}\n//# sourceMappingURL=color_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { QuantizerCelebi } from '../quantize/quantizer_celebi';\nimport { Score } from '../score/score';\nimport { argbFromRgb } from './color_utils';\n/**\n * Get the source color from an image.\n *\n * @param image The image element\n * @return Source color - the color most suitable for creating a UI theme\n */\nexport async function sourceColorFromImage(image) {\n    // Convert Image data to Pixel Array\n    const imageBytes = await new Promise((resolve, reject) => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!context) {\n            return reject(new Error('Could not get canvas context'));\n        }\n        image.onload = () => {\n            canvas.width = image.width;\n            canvas.height = image.height;\n            context.drawImage(image, 0, 0);\n            resolve(context.getImageData(0, 0, image.width, image.height).data);\n        };\n    });\n    // Convert Image data to Pixel Array\n    const pixels = [];\n    for (let i = 0; i < imageBytes.length; i += 4) {\n        const r = imageBytes[i];\n        const g = imageBytes[i + 1];\n        const b = imageBytes[i + 2];\n        const a = imageBytes[i + 3];\n        if (a < 255) {\n            continue;\n        }\n        const argb = argbFromRgb(r, g, b);\n        pixels.push(argb);\n    }\n    // Convert Pixels to Material Colors\n    const result = QuantizerCelebi.quantize(pixels, 128);\n    const ranked = Score.score(result);\n    const top = ranked[0];\n    return top;\n}\n//# sourceMappingURL=image_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n/**\n * Utility methods for mathematical operations.\n */\n/**\n * The signum function.\n *\n * @return 1 if num > 0, -1 if num < 0, and 0 if num = 0\n */\nexport function signum(num) {\n    if (num < 0) {\n        return -1;\n    }\n    else if (num === 0) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n/**\n * The linear interpolation function.\n *\n * @return start if amount = 0 and stop if amount = 1\n */\nexport function lerp(start, stop, amount) {\n    return (1.0 - amount) * start + amount * stop;\n}\n/**\n * Clamps an integer between two integers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nexport function clampInt(min, max, input) {\n    if (input < min) {\n        return min;\n    }\n    else if (input > max) {\n        return max;\n    }\n    return input;\n}\n/**\n * Clamps an integer between two floating-point numbers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nexport function clampDouble(min, max, input) {\n    if (input < min) {\n        return min;\n    }\n    else if (input > max) {\n        return max;\n    }\n    return input;\n}\n/**\n * Sanitizes a degree measure as an integer.\n *\n * @return a degree measure between 0 (inclusive) and 360\n * (exclusive).\n */\nexport function sanitizeDegreesInt(degrees) {\n    degrees = degrees % 360;\n    if (degrees < 0) {\n        degrees = degrees + 360;\n    }\n    return degrees;\n}\n/**\n * Sanitizes a degree measure as a floating-point number.\n *\n * @return a degree measure between 0.0 (inclusive) and 360.0\n * (exclusive).\n */\nexport function sanitizeDegreesDouble(degrees) {\n    degrees = degrees % 360.0;\n    if (degrees < 0) {\n        degrees = degrees + 360.0;\n    }\n    return degrees;\n}\n/**\n * Sign of direction change needed to travel from one angle to\n * another.\n *\n * For angles that are 180 degrees apart from each other, both\n * directions have the same travel distance, so either direction is\n * shortest. The value 1.0 is returned in this case.\n *\n * @param from The angle travel starts from, in degrees.\n * @param to The angle travel ends at, in degrees.\n * @return -1 if decreasing from leads to the shortest travel\n * distance, 1 if increasing from leads to the shortest travel\n * distance.\n */\nexport function rotationDirection(from, to) {\n    const increasingDifference = sanitizeDegreesDouble(to - from);\n    return increasingDifference <= 180.0 ? 1.0 : -1.0;\n}\n/**\n * Distance of two points on a circle, represented using degrees.\n */\nexport function differenceDegrees(a, b) {\n    return 180.0 - Math.abs(Math.abs(a - b) - 180.0);\n}\n/**\n * Multiplies a 1x3 row vector with a 3x3 matrix.\n */\nexport function matrixMultiply(row, matrix) {\n    const a = row[0] * matrix[0][0] + row[1] * matrix[0][1] + row[2] * matrix[0][2];\n    const b = row[0] * matrix[1][0] + row[1] * matrix[1][1] + row[2] * matrix[1][2];\n    const c = row[0] * matrix[2][0] + row[1] * matrix[2][1] + row[2] * matrix[2][2];\n    return [a, b, c];\n}\n//# sourceMappingURL=math_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as colorUtils from './color_utils';\n/**\n * Utility methods for hexadecimal representations of colors.\n */\n/**\n * @param argb ARGB representation of a color.\n * @return Hex string representing color, ex. #ff0000 for red.\n */\nexport const hexFromArgb = (argb) => {\n    const r = colorUtils.redFromArgb(argb);\n    const g = colorUtils.greenFromArgb(argb);\n    const b = colorUtils.blueFromArgb(argb);\n    const outParts = [r.toString(16), g.toString(16), b.toString(16)];\n    // Pad single-digit output values\n    for (const [i, part] of outParts.entries()) {\n        if (part.length === 1) {\n            outParts[i] = '0' + part;\n        }\n    }\n    return '#' + outParts.join('');\n};\n/**\n * @param hex String representing color as hex code. Accepts strings with or\n *     without leading #, and string representing the color using 3, 6, or 8\n *     hex characters.\n * @return ARGB representation of color.\n */\nexport const argbFromHex = (hex) => {\n    hex = hex.replace('#', '');\n    const isThree = hex.length === 3;\n    const isSix = hex.length === 6;\n    const isEight = hex.length === 8;\n    if (!isThree && !isSix && !isEight) {\n        throw new Error('unexpected hex ' + hex);\n    }\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    if (isThree) {\n        r = parseIntHex(hex.slice(0, 1).repeat(2));\n        g = parseIntHex(hex.slice(1, 2).repeat(2));\n        b = parseIntHex(hex.slice(2, 3).repeat(2));\n    }\n    else if (isSix) {\n        r = parseIntHex(hex.slice(0, 2));\n        g = parseIntHex(hex.slice(2, 4));\n        b = parseIntHex(hex.slice(4, 6));\n    }\n    else if (isEight) {\n        r = parseIntHex(hex.slice(2, 4));\n        g = parseIntHex(hex.slice(4, 6));\n        b = parseIntHex(hex.slice(6, 8));\n    }\n    return (((255 << 24) | ((r & 0x0ff) << 16) | ((g & 0x0ff) << 8) | (b & 0x0ff)) >>>\n        0);\n};\nfunction parseIntHex(value) {\n    // tslint:disable-next-line:ban\n    return parseInt(value, 16);\n}\n//# sourceMappingURL=string_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Blend } from '../blend/blend';\nimport { CorePalette } from '../palettes/core_palette';\nimport { Scheme } from '../scheme/scheme';\nimport { sourceColorFromImage } from './image_utils';\nimport { hexFromArgb } from './string_utils';\n/**\n * Generate a theme from a source color\n *\n * @param source Source color\n * @param customColors Array of custom colors\n * @return Theme object\n */\nexport function themeFromSourceColor(source, customColors = []) {\n    const palette = CorePalette.of(source);\n    return {\n        source,\n        schemes: {\n            light: Scheme.light(source),\n            dark: Scheme.dark(source),\n        },\n        palettes: {\n            primary: palette.a1,\n            secondary: palette.a2,\n            tertiary: palette.a3,\n            neutral: palette.n1,\n            neutralVariant: palette.n2,\n            error: palette.error,\n        },\n        customColors: customColors.map((c) => customColor(source, c)),\n    };\n}\n/**\n * Generate a theme from an image source\n *\n * @param image Image element\n * @param customColors Array of custom colors\n * @return Theme object\n */\nexport async function themeFromImage(image, customColors = []) {\n    const source = await sourceColorFromImage(image);\n    return themeFromSourceColor(source, customColors);\n}\n/**\n * Generate custom color group from source and target color\n *\n * @param source Source color\n * @param color Custom color\n * @return Custom color group\n *\n * @link https://m3.material.io/styles/color/the-color-system/color-roles\n */\nexport function customColor(source, color) {\n    let value = color.value;\n    const from = value;\n    const to = source;\n    if (color.blend) {\n        value = Blend.harmonize(from, to);\n    }\n    const palette = CorePalette.of(value);\n    const tones = palette.a1;\n    return {\n        color,\n        value,\n        light: {\n            color: tones.tone(40),\n            onColor: tones.tone(100),\n            colorContainer: tones.tone(90),\n            onColorContainer: tones.tone(10),\n        },\n        dark: {\n            color: tones.tone(80),\n            onColor: tones.tone(20),\n            colorContainer: tones.tone(30),\n            onColorContainer: tones.tone(90),\n        },\n    };\n}\n/**\n * Apply a theme to an element\n *\n * @param theme Theme object\n * @param options Options\n */\nexport function applyTheme(theme, options) {\n    var _a, _b;\n    const target = (options === null || options === void 0 ? void 0 : options.target) || document.body;\n    const isDark = (_a = options === null || options === void 0 ? void 0 : options.dark) !== null && _a !== void 0 ? _a : false;\n    const scheme = isDark ? theme.schemes.dark : theme.schemes.light;\n    setSchemeProperties(target, scheme);\n    if (options === null || options === void 0 ? void 0 : options.brightnessSuffix) {\n        setSchemeProperties(target, theme.schemes.dark, '-dark');\n        setSchemeProperties(target, theme.schemes.light, '-light');\n    }\n    if (options === null || options === void 0 ? void 0 : options.paletteTones) {\n        const tones = (_b = options === null || options === void 0 ? void 0 : options.paletteTones) !== null && _b !== void 0 ? _b : [];\n        for (const [key, palette] of Object.entries(theme.palettes)) {\n            const paletteKey = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n            for (const tone of tones) {\n                const token = `--md-ref-palette-${paletteKey}-${paletteKey}${tone}`;\n                const color = hexFromArgb(palette.tone(tone));\n                target.style.setProperty(token, color);\n            }\n        }\n    }\n}\nfunction setSchemeProperties(target, scheme, suffix = '') {\n    for (const [key, value] of Object.entries(scheme.toJSON())) {\n        const token = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        const color = hexFromArgb(value);\n        target.style.setProperty(`--md-sys-color-${token}${suffix}`, color);\n    }\n}\n//# sourceMappingURL=theme_utils.js.map","// TODO: async. Should probably be done with NSFileHandle and some notifications\n// TODO: file descriptor. Needs to be done with NSFileHandle\nvar Buffer = require(\"buffer\").Buffer;\nvar utils = require(\"./utils\");\nvar parseStat = utils.parseStat;\nvar fsError = utils.fsError;\nvar fsErrorForPath = utils.fsErrorForPath;\nvar encodingFromOptions = utils.encodingFromOptions;\nvar NOT_IMPLEMENTED = utils.NOT_IMPLEMENTED;\n\nmodule.exports.constants = {\n  F_OK: 0,\n  R_OK: 4,\n  W_OK: 2,\n  X_OK: 1,\n};\n\nmodule.exports.access = NOT_IMPLEMENTED(\"access\");\n\nmodule.exports.accessSync = function (path, mode) {\n  mode = mode | 0;\n  var fileManager = NSFileManager.defaultManager();\n\n  switch (mode) {\n    case 0:\n      canAccess = module.exports.existsSync(path);\n      break;\n    case 1:\n      canAccess = Boolean(Number(fileManager.isExecutableFileAtPath(path)));\n      break;\n    case 2:\n      canAccess = Boolean(Number(fileManager.isWritableFileAtPath(path)));\n      break;\n    case 3:\n      canAccess =\n        Boolean(Number(fileManager.isExecutableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isWritableFileAtPath(path)));\n      break;\n    case 4:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path)));\n      break;\n    case 5:\n      canAccess =\n        Boolean(Number(fileManager.isReadableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isExecutableFileAtPath(path)));\n      break;\n    case 6:\n      canAccess =\n        Boolean(Number(fileManager.isReadableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isWritableFileAtPath(path)));\n      break;\n    case 7:\n      canAccess =\n        Boolean(Number(fileManager.isReadableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isWritableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isExecutableFileAtPath(path)));\n      break;\n  }\n\n  if (!canAccess) {\n    throw new Error(\"Can't access \" + String(path));\n  }\n};\n\nmodule.exports.appendFile = NOT_IMPLEMENTED(\"appendFile\");\n\nmodule.exports.appendFileSync = function (file, data, options) {\n  if (!module.exports.existsSync(file)) {\n    return module.exports.writeFileSync(file, data, options);\n  }\n\n  var handle = NSFileHandle.fileHandleForWritingAtPath(file);\n  handle.seekToEndOfFile();\n\n  var encoding = encodingFromOptions(options, \"utf8\");\n\n  var nsdata = Buffer.from(\n    data,\n    encoding === \"NSData\" || encoding === \"buffer\" ? undefined : encoding\n  ).toNSData();\n\n  handle.writeData(nsdata);\n};\n\nmodule.exports.chmod = NOT_IMPLEMENTED(\"chmod\");\n\nmodule.exports.chmodSync = function (path, mode) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.setAttributes_ofItemAtPath_error(\n    {\n      NSFilePosixPermissions: mode,\n    },\n    path,\n    err\n  );\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, undefined, err.value());\n  }\n};\n\nmodule.exports.chown = NOT_IMPLEMENTED(\"chown\");\nmodule.exports.chownSync = NOT_IMPLEMENTED(\"chownSync\");\n\nmodule.exports.close = NOT_IMPLEMENTED(\"close\");\nmodule.exports.closeSync = NOT_IMPLEMENTED(\"closeSync\");\n\nmodule.exports.copyFile = NOT_IMPLEMENTED(\"copyFile\");\n\nmodule.exports.copyFileSync = function (path, dest, flags) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.copyItemAtPath_toPath_error(path, dest, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, false, err.value());\n  }\n};\n\nmodule.exports.createReadStream = NOT_IMPLEMENTED(\"createReadStream\");\nmodule.exports.createWriteStream = NOT_IMPLEMENTED(\"createWriteStream\");\n\nmodule.exports.exists = NOT_IMPLEMENTED(\"exists\");\n\nmodule.exports.existsSync = function (path) {\n  var fileManager = NSFileManager.defaultManager();\n  return Boolean(Number(fileManager.fileExistsAtPath(path)));\n};\n\nmodule.exports.fchmod = NOT_IMPLEMENTED(\"fchmod\");\nmodule.exports.fchmodSync = NOT_IMPLEMENTED(\"fchmodSync\");\nmodule.exports.fchown = NOT_IMPLEMENTED(\"fchown\");\nmodule.exports.fchownSync = NOT_IMPLEMENTED(\"fchownSync\");\nmodule.exports.fdatasync = NOT_IMPLEMENTED(\"fdatasync\");\nmodule.exports.fdatasyncSync = NOT_IMPLEMENTED(\"fdatasyncSync\");\nmodule.exports.fstat = NOT_IMPLEMENTED(\"fstat\");\nmodule.exports.fstatSync = NOT_IMPLEMENTED(\"fstatSync\");\nmodule.exports.fsync = NOT_IMPLEMENTED(\"fsync\");\nmodule.exports.fsyncSync = NOT_IMPLEMENTED(\"fsyncSync\");\nmodule.exports.ftruncate = NOT_IMPLEMENTED(\"ftruncate\");\nmodule.exports.ftruncateSync = NOT_IMPLEMENTED(\"ftruncateSync\");\nmodule.exports.futimes = NOT_IMPLEMENTED(\"futimes\");\nmodule.exports.futimesSync = NOT_IMPLEMENTED(\"futimesSync\");\n\nmodule.exports.lchmod = NOT_IMPLEMENTED(\"lchmod\");\nmodule.exports.lchmodSync = NOT_IMPLEMENTED(\"lchmodSync\");\nmodule.exports.lchown = NOT_IMPLEMENTED(\"lchown\");\nmodule.exports.lchownSync = NOT_IMPLEMENTED(\"lchownSync\");\n\nmodule.exports.link = NOT_IMPLEMENTED(\"link\");\n\nmodule.exports.linkSync = function (existingPath, newPath) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.linkItemAtPath_toPath_error(existingPath, newPath, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(existingPath, undefined, err.value());\n  }\n};\n\nmodule.exports.lstat = NOT_IMPLEMENTED(\"lstat\");\n\nmodule.exports.lstatSync = function (path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var result = fileManager.attributesOfItemAtPath_error(path, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, undefined, err.value());\n  }\n\n  return parseStat(result);\n};\n\nmodule.exports.mkdir = NOT_IMPLEMENTED(\"mkdir\");\n\nmodule.exports.mkdirSync = function (path, options) {\n  var mode = 0o777;\n  var recursive = false;\n  if (options && options.mode) {\n    mode = options.mode;\n  }\n  if (options && options.recursive) {\n    recursive = options.recursive;\n  }\n  if (typeof options === \"number\") {\n    mode = options;\n  }\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error(\n    path,\n    recursive,\n    {\n      NSFilePosixPermissions: mode,\n    },\n    err\n  );\n\n  if (err.value() !== null) {\n    throw new Error(err.value());\n  }\n};\n\nmodule.exports.mkdtemp = NOT_IMPLEMENTED(\"mkdtemp\");\n\nmodule.exports.mkdtempSync = function (path) {\n  function makeid() {\n    var text = \"\";\n    var possible =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 6; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n  var tempPath = path + makeid();\n  module.exports.mkdirSync(tempPath);\n  return tempPath;\n};\n\nmodule.exports.open = NOT_IMPLEMENTED(\"open\");\nmodule.exports.openSync = NOT_IMPLEMENTED(\"openSync\");\n\nmodule.exports.read = NOT_IMPLEMENTED(\"read\");\n\nmodule.exports.readdir = NOT_IMPLEMENTED(\"readdir\");\n\nmodule.exports.readdirSync = function (path, options) {\n  var encoding = encodingFromOptions(options, \"utf8\");\n  var fileManager = NSFileManager.defaultManager();\n  var paths = fileManager.subpathsAtPath(path);\n  var arr = [];\n  for (var i = 0; i < paths.length; i++) {\n    var pathName = paths[i];\n    arr.push(encoding === \"buffer\" ? Buffer.from(pathName) : String(pathName));\n  }\n  return arr;\n};\n\nmodule.exports.readFile = NOT_IMPLEMENTED(\"readFile\");\n\nmodule.exports.readFileSync = function (path, options) {\n  var encoding = encodingFromOptions(options, \"buffer\");\n  var fileManager = NSFileManager.defaultManager();\n  var data = fileManager.contentsAtPath(path);\n  if (!data) {\n    throw fsErrorForPath(path, false);\n  }\n\n  var buffer = Buffer.from(data);\n\n  if (encoding === \"buffer\") {\n    return buffer;\n  } else if (encoding === \"NSData\") {\n    return buffer.toNSData();\n  } else {\n    return buffer.toString(encoding);\n  }\n};\n\nmodule.exports.readlink = NOT_IMPLEMENTED(\"readlink\");\n\nmodule.exports.readlinkSync = function (path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var result = fileManager.destinationOfSymbolicLinkAtPath_error(path, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, undefined, err.value());\n  }\n\n  return String(result);\n};\n\nmodule.exports.readSync = NOT_IMPLEMENTED(\"readSync\");\n\nmodule.exports.realpath = NOT_IMPLEMENTED(\"realpath\");\nmodule.exports.realpath.native = NOT_IMPLEMENTED(\"realpath.native\");\n\nmodule.exports.realpathSync = function (path) {\n  return String(\n    NSString.stringWithString(path).stringByResolvingSymlinksInPath()\n  );\n};\n\nmodule.exports.realpathSync.native = NOT_IMPLEMENTED(\"realpathSync.native\");\n\nmodule.exports.rename = NOT_IMPLEMENTED(\"rename\");\n\nmodule.exports.renameSync = function (oldPath, newPath) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.moveItemAtPath_toPath_error(oldPath, newPath, err);\n\n  var error = err.value();\n\n  if (error !== null) {\n    // if there is already a file, we need to overwrite it\n    if (\n      String(error.domain()) === \"NSCocoaErrorDomain\" &&\n      Number(error.code()) === 516\n    ) {\n      var err2 = MOPointer.alloc().init();\n      fileManager.replaceItemAtURL_withItemAtURL_backupItemName_options_resultingItemURL_error(\n        NSURL.fileURLWithPath(newPath),\n        NSURL.fileURLWithPath(oldPath),\n        null,\n        NSFileManagerItemReplacementUsingNewMetadataOnly,\n        null,\n        err2\n      );\n      if (err2.value() !== null) {\n        throw fsErrorForPath(oldPath, undefined, err2.value());\n      }\n    } else {\n      throw fsErrorForPath(oldPath, undefined, error);\n    }\n  }\n};\n\nmodule.exports.rmdir = NOT_IMPLEMENTED(\"rmdir\");\n\nmodule.exports.rmdirSync = function (path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var isDirectory = module.exports.lstatSync(path).isDirectory();\n  if (!isDirectory) {\n    throw fsError(\"ENOTDIR\", {\n      path: path,\n      syscall: \"rmdir\",\n    });\n  }\n  fileManager.removeItemAtPath_error(path, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, true, err.value(), \"rmdir\");\n  }\n};\n\nmodule.exports.stat = NOT_IMPLEMENTED(\"stat\");\n\n// the only difference with lstat is that we resolve symlinks\n//\n// > lstat() is identical to stat(), except that if pathname is a symbolic\n// > link, then it returns information about the link itself, not the file\n// > that it refers to.\n// http://man7.org/linux/man-pages/man2/lstat.2.html\nmodule.exports.statSync = function (path) {\n  return module.exports.lstatSync(module.exports.realpathSync(path));\n};\n\nmodule.exports.symlink = NOT_IMPLEMENTED(\"symlink\");\n\nmodule.exports.symlinkSync = function (target, path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var result = fileManager.createSymbolicLinkAtPath_withDestinationPath_error(\n    path,\n    target,\n    err\n  );\n\n  if (err.value() !== null) {\n    throw new Error(err.value());\n  }\n};\n\nmodule.exports.truncate = NOT_IMPLEMENTED(\"truncate\");\n\nmodule.exports.truncateSync = function (path, len) {\n  var hFile = NSFileHandle.fileHandleForUpdatingAtPath(sFilePath);\n  hFile.truncateFileAtOffset(len || 0);\n  hFile.closeFile();\n};\n\nmodule.exports.unlink = NOT_IMPLEMENTED(\"unlink\");\n\nmodule.exports.unlinkSync = function (path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var isDirectory = module.exports.lstatSync(path).isDirectory();\n  if (isDirectory) {\n    throw fsError(\"EPERM\", {\n      path: path,\n      syscall: \"unlink\",\n    });\n  }\n  var result = fileManager.removeItemAtPath_error(path, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, false, err.value());\n  }\n};\n\nmodule.exports.unwatchFile = NOT_IMPLEMENTED(\"unwatchFile\");\n\nmodule.exports.utimes = NOT_IMPLEMENTED(\"utimes\");\n\nmodule.exports.utimesSync = function (path, aTime, mTime) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var result = fileManager.setAttributes_ofItemAtPath_error(\n    {\n      NSFileModificationDate: aTime,\n    },\n    path,\n    err\n  );\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, undefined, err.value());\n  }\n};\n\nmodule.exports.watch = NOT_IMPLEMENTED(\"watch\");\nmodule.exports.watchFile = NOT_IMPLEMENTED(\"watchFile\");\n\nmodule.exports.write = NOT_IMPLEMENTED(\"write\");\n\nmodule.exports.writeFile = NOT_IMPLEMENTED(\"writeFile\");\n\nmodule.exports.writeFileSync = function (path, data, options) {\n  var encoding = encodingFromOptions(options, \"utf8\");\n\n  var nsdata = Buffer.from(\n    data,\n    encoding === \"NSData\" || encoding === \"buffer\" ? undefined : encoding\n  ).toNSData();\n\n  nsdata.writeToFile_atomically(path, true);\n};\n\nmodule.exports.writeSync = NOT_IMPLEMENTED(\"writeSync\");\n","module.exports.parseStat = function parseStat(result) {\n  return {\n    dev: String(result.NSFileDeviceIdentifier),\n    // ino: 48064969, The file system specific \"Inode\" number for the file.\n    mode: result.NSFileType | result.NSFilePosixPermissions,\n    nlink: Number(result.NSFileReferenceCount),\n    uid: String(result.NSFileOwnerAccountID),\n    gid: String(result.NSFileGroupOwnerAccountID),\n    // rdev: 0, A numeric device identifier if the file is considered \"special\".\n    size: Number(result.NSFileSize),\n    // blksize: 4096, The file system block size for i/o operations.\n    // blocks: 8, The number of blocks allocated for this file.\n    atimeMs:\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    mtimeMs:\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    ctimeMs:\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    birthtimeMs:\n      Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000,\n    atime: new Date(\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5\n    ), // the 0.5 comes from the node source. Not sure why it's added but in doubt...\n    mtime: new Date(\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5\n    ),\n    ctime: new Date(\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5\n    ),\n    birthtime: new Date(\n      Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000 + 0.5\n    ),\n    isBlockDevice: function () {\n      return result.NSFileType === NSFileTypeBlockSpecial;\n    },\n    isCharacterDevice: function () {\n      return result.NSFileType === NSFileTypeCharacterSpecial;\n    },\n    isDirectory: function () {\n      return result.NSFileType === NSFileTypeDirectory;\n    },\n    isFIFO: function () {\n      return false;\n    },\n    isFile: function () {\n      return result.NSFileType === NSFileTypeRegular;\n    },\n    isSocket: function () {\n      return result.NSFileType === NSFileTypeSocket;\n    },\n    isSymbolicLink: function () {\n      return result.NSFileType === NSFileTypeSymbolicLink;\n    },\n  };\n};\n\nvar ERRORS = {\n  EPERM: {\n    message: \"operation not permitted\",\n    errno: -1,\n  },\n  ENOENT: {\n    message: \"no such file or directory\",\n    errno: -2,\n  },\n  EACCES: {\n    message: \"permission denied\",\n    errno: -13,\n  },\n  ENOTDIR: {\n    message: \"not a directory\",\n    errno: -20,\n  },\n  EISDIR: {\n    message: \"illegal operation on a directory\",\n    errno: -21,\n  },\n};\n\nfunction fsError(code, options) {\n  var error = new Error(\n    code +\n      \": \" +\n      ERRORS[code].message +\n      \", \" +\n      (options.syscall || \"\") +\n      (options.path ? \" '\" + options.path + \"'\" : \"\")\n  );\n\n  Object.keys(options).forEach(function (k) {\n    error[k] = options[k];\n  });\n\n  error.code = code;\n  error.errno = ERRORS[code].errno;\n\n  return error;\n}\n\nmodule.exports.fsError = fsError;\n\nmodule.exports.fsErrorForPath = function fsErrorForPath(\n  path,\n  shouldBeDir,\n  err,\n  syscall\n) {\n  var fileManager = NSFileManager.defaultManager();\n  var doesExist = fileManager.fileExistsAtPath(path);\n  if (!doesExist) {\n    return fsError(\"ENOENT\", {\n      path: path,\n      syscall: syscall || \"open\",\n    });\n  }\n  var isReadable = fileManager.isReadableFileAtPath(path);\n  if (!isReadable) {\n    return fsError(\"EACCES\", {\n      path: path,\n      syscall: syscall || \"open\",\n    });\n  }\n  if (typeof shouldBeDir !== \"undefined\") {\n    var isDirectory = require(\"./index\").lstatSync(path).isDirectory();\n    if (isDirectory && !shouldBeDir) {\n      return fsError(\"EISDIR\", {\n        path: path,\n        syscall: syscall || \"read\",\n      });\n    } else if (!isDirectory && shouldBeDir) {\n      return fsError(\"ENOTDIR\", {\n        path: path,\n        syscall: syscall || \"read\",\n      });\n    }\n  }\n  return new Error(err || \"Unknown error while manipulating \" + path);\n};\n\nmodule.exports.encodingFromOptions = function encodingFromOptions(\n  options,\n  defaultValue\n) {\n  return options && options.encoding\n    ? String(options.encoding)\n    : options\n    ? String(options)\n    : defaultValue;\n};\n\nmodule.exports.NOT_IMPLEMENTED = function NOT_IMPLEMENTED(name) {\n  return function () {\n    throw new Error(\n      \"fs.\" +\n        name +\n        \" is not implemented yet. If you feel like implementing it, any contribution will be gladly accepted on https://github.com/skpm/fs\"\n    );\n  };\n};\n","/* from https://github.com/taylorhakes/promise-polyfill */\n\nfunction promiseFinally(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\nfunction noop() {}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError(\"Promises must be constructed via new\");\n  if (typeof fn !== \"function\") throw new TypeError(\"not a function\");\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError(\"A promise cannot be resolved with itself.\");\n    if (\n      newValue &&\n      (typeof newValue === \"object\" || typeof newValue === \"function\")\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === \"function\") {\n        doResolve(then.bind(newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value, self);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === \"function\" ? onFulfilled : null;\n  this.onRejected = typeof onRejected === \"function\" ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) {\n          Promise._multipleResolvesFn(\"resolve\", self, value);\n          return;\n        }\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) {\n          Promise._multipleResolvesFn(\"reject\", self, reason);\n          return;\n        }\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) {\n      Promise._multipleResolvesFn(\"reject\", self, ex);\n      return;\n    }\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype[\"catch\"] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype[\"finally\"] = promiseFinally;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!Array.isArray(arr)) {\n      return reject(new TypeError(\"Promise.all accepts an array\"));\n    }\n\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === \"object\" || typeof val === \"function\")) {\n          var then = val.then;\n          if (typeof then === \"function\") {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === \"object\" && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!Array.isArray(arr)) {\n      return reject(new TypeError(\"Promise.race accepts an array\"));\n    }\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      Promise.resolve(arr[i]).then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn = setImmediate;\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err, promise) {\n  if (\n    typeof process !== \"undefined\" &&\n    process.listenerCount &&\n    (process.listenerCount(\"unhandledRejection\") ||\n      process.listenerCount(\"uncaughtException\"))\n  ) {\n    process.emit(\"unhandledRejection\", err, promise);\n    process.emit(\"uncaughtException\", err, \"unhandledRejection\");\n  } else if (typeof console !== \"undefined\" && console) {\n    console.warn(\"Possible Unhandled Promise Rejection:\", err);\n  }\n};\n\nPromise._multipleResolvesFn = function _multipleResolvesFn(\n  type,\n  promise,\n  value\n) {\n  if (typeof process !== \"undefined\" && process.emit) {\n    process.emit(\"multipleResolves\", type, promise, value);\n  }\n};\n\nmodule.exports = Promise;\n","module.exports = (function() { return compare; })();\n\nvar HexRgb   = require('color-model').HexRgb,\n    methods = {\n        'EuclideanDistance' : require('./method/euclidean-distance')\n      , 'CIE76Difference'   : require('./method/cie-76-difference')\n    };\n\n/**\n * Compares two colors and returns difference from 1 to 100\n *\n * @param {String} color1\n * @param {String} color2\n * @param {String} method Default method is best from currently implemented\n * @return {Number} difference\n */\nfunction compare(color1, color2, method) {\n  var methodName = method || 'CIE76Difference';\n\n  if (undefined === methods[methodName]) {\n    throw new Error('Method \"' + methodName + '\" is unknown. See implemented methods in ./lib/method directory.');\n  }\n\n  /** @type Abstract */\n  var methodObj = new methods[methodName];\n\n  return methodObj.compare(new HexRgb(color1), new HexRgb(color2));\n};\n","module.exports  = {\n  compare       : require('./compare')\n  , method      : {\n      'EuclideanDistance' : require('./method/euclidean-distance')\n    , 'CIE76Difference'   : require('./method/cie-76-difference')\n  }\n};\n","module.exports = (function() { return Abstract; })();\n\nfunction Abstract() {\n};\n\n/**\n * Compares two colors and returns difference from 1 to 100\n *\n * @param {Rgb} color1\n * @param {Rgb} color2\n * @return {Number} difference\n */\nAbstract.prototype.compare = function(color1, color2) {\n  throw new Error('Compare method unimplemented!');\n};\n","module.exports = (function() { return CIE76Difference; })();\n\n/**\n * @extends Abstract\n */\nfunction CIE76Difference() {\n};\n\nrequire('util').inherits(CIE76Difference, require('./abstract')); 'code' ? 'completion' : CIE76Difference.prototype = new Abstract;\n\n/**\n * @param {Rgb} color1\n * @param {Rgb} color2\n */\nCIE76Difference.prototype.compare = function(color1, color2) {\n  if (color1.equals(color2)) {\n    return 0;\n  }\n\n  function squaredDelta(v1, v2) {\n    return Math.pow(v1 - v2, 2);\n  }\n\n  var lab1 = color1.toLab(),\n      lab2 = color2.toLab(),\n      sum  = 0;\n\n  sum += squaredDelta(lab1.lightness(), lab2.lightness());\n  sum += squaredDelta(lab1.a(), lab2.a());\n  sum += squaredDelta(lab1.b(), lab2.b());\n\n  return Math.max(Math.min(Math.sqrt(sum), 100), 0)\n};\n","module.exports = (function() { return EuclideanDistance; })();\n\n/**\n * @extends Abstract\n */\nfunction EuclideanDistance() {\n};\n\nrequire('util').inherits(EuclideanDistance, require('./abstract')); 'code' ? 'completion' : EuclideanDistance.prototype = new Abstract;\n\n/**\n * @param {Rgb} color1\n * @param {Rgb} color2\n */\nEuclideanDistance.prototype.compare = function(color1, color2) {\n  if (color1.equals(color2)) {\n    return 0;\n  }\n\n  function squaredDelta(v1, v2) {\n    return Math.pow(v1 - v2, 2);\n  }\n\n  var sum = 0;\n  sum += squaredDelta(color1.red(),   color2.red());\n  sum += squaredDelta(color1.green(), color2.green());\n  sum += squaredDelta(color1.blue(),  color2.blue());\n\n  var conversionIndex = 19.5075;\n\n  return Math.sqrt(sum / conversionIndex);\n};\n","if (process.env.COLOR_MODEL_COVERAGE) {\n  eval('module.exports = require(\"./.coverage/lib\");');\n} else {\n  module.exports = require('./lib');\n}\n","module.exports = (function() { return AbstractModel; })();\n\nvar _r = require('./component'); eval('var Component = _r');\n\n/**\n * Abstract color model\n */\nfunction AbstractModel() {\n  this._name       = null;\n  this._components = [];\n};\n\n/**\n * @returns {String}\n */\nAbstractModel.prototype.toString = function () {\n  var v = [];\n  for (var i = 0, iMax = this._components.length; i < iMax; i++) {\n    v.push(this['_' + this._components[i]].get());\n  }\n  return this._name + '(' + v.join(', ') + ')';\n};\n\n/**\n * @param {AbstractModel} that\n * @returns {Boolean}\n */\nAbstractModel.prototype.equals = function (that) {\n  if (!(that instanceof AbstractModel) || this._name !== that._name) {\n    return false;\n  }\n  for (var i = 0, cs = this._components, iMax = cs.length; i < iMax; i++) {\n    var key = '_' + cs[i];\n    if (!this[key].equals(that[key])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * @abstract\n * @returns {Xyz}\n */\nAbstractModel.prototype.toXyz = function () {\n  throw new Error('Model ' + this._name + ' has not implemented Xyz conversion!');\n};\n\n/**\n * @returns {Lab}\n */\nAbstractModel.prototype.toLab = function () {\n  return this.toXyz().toLab();\n};\n\n/**\n * Getter/chainable setter in one place\n *\n * @param {String} name\n * @param {Number} value\n * @returns {AbstractModel}\n */\nAbstractModel.prototype.component = function (name, value) {\n  var component = this['_' + name];\n  if (undefined === component || !(component instanceof Component)) {\n    throw new Error('Component \"' + name + '\" is not exists');\n  }\n\n  if (1 == arguments.length) {\n    return component.get();\n  }\n\n  component.set(value);\n  return this;\n};\n\n/**\n * @param {String} name\n * @param {Array} args\n * @returns {AbstractModel}\n */\nAbstractModel.prototype._component = function (name, args) {\n  /** @type Component */\n  var component = this['_' + name];\n\n  if (0 == args.length) {\n    return component.get();\n  }\n\n  component.set(args[0]);\n  return this;\n};\n","module.exports = (function() { return Component; })();\n\n/**\n * Color model Component\n * @param {String} name\n * @param {Number} from\n * @param {Number} to\n */\nfunction Component(name, from, to) {\n  if (!name) {\n    throw new Error('Name not set');\n  }\n  this._name = name;\n\n  from = parseFloat(from);\n  to   = parseFloat(to);\n  if (!(from < to)) {\n    throw new Error('From must be less than to');\n  }\n  this._from = from;\n  this._to   = to;\n\n  this._value = null;\n};\n\n/**\n * @param {Number} value\n * @returns {Component}\n */\nComponent.prototype.set = function (value) {\n  value = value ? parseFloat(value) : 0;\n  if (isNaN(value)) {\n    throw new Error('Value for ' + this._name + ' must be numeric');\n  }\n\n  if (value < this._from || value > this._to) {\n    throw new Error('Value for ' + this._name + ' (' + value + ') must be between ' + this._from + ' and ' + this._to);\n  }\n\n  this._value = value;\n  return this;\n};\n\n/**\n * @returns {Number}\n */\nComponent.prototype.get = function () {\n  return this._value;\n};\n\n/**\n * @param {Component} that\n * @returns {Boolean}\n */\nComponent.prototype.equals = function (that) {\n  return (that instanceof Component)\n    && this._name  === that._name\n    && this._value === that._value;\n};\n","module.exports = (function() { return HexRgb; })();\n\nvar _r = require('./rgb'); eval('var Rgb = _r');\n\n/**\n * Rgb color model, that created from HEX string and formatted as HEX\n * @extends Rgb\n * @param {String} hex\n */\nfunction HexRgb(hex) {\n  if (undefined === hex) {\n    return HexRgb.super_.apply(this, args);\n  }\n\n  var c  = '([a-f0-9]{1,2})',\n      re = new RegExp('^#?' + c + c + c + '$', 'i'),\n      m  = hex.match(re);\n\n  if (null === m) {\n    throw new Error('Value \"' + hex + '\" is unknown hex color');\n  }\n\n  var args = [\n    this._parseIntFromHex(m[1]),\n    this._parseIntFromHex(m[2]),\n    this._parseIntFromHex(m[3])\n  ];\n  HexRgb.super_.apply(this, args);\n};\n\nrequire('util').inherits(HexRgb, require('./rgb')); 'code' ? 'completion' : HexRgb.prototype = new Rgb;\n\n/**\n * @param {String} hex\n * @returns {Number}\n */\nHexRgb.prototype._parseIntFromHex = function(hex) {\n  if (1 == hex.length) {\n    hex = hex + hex;\n  }\n  return parseInt(hex, 16);\n};\n\n/**\n * @returns {String}\n */\nHexRgb.prototype.toString = function() {\n  return '#' + this._formatIntAsHex(this.red()) + this._formatIntAsHex(this.green()) + this._formatIntAsHex(this.blue());\n};\n\n/**\n * @param {Number} intValue\n * @returns {String}\n */\nHexRgb.prototype._formatIntAsHex = function(intValue) {\n  intValue = Math.round(intValue);\n  strValue = '' + intValue;\n  if (1 == strValue.length) {\n    strValue = strValue + strValue;\n  }\n  return (intValue < 16 ? '0' : '') + intValue.toString(16);\n};\n\n/**\n * @returns {Rgb}\n */\nHexRgb.prototype.toRgb = function () {\n  return new Rgb(this._red.get(), this._green.get(), this._blue.get());\n};\n","module.exports = (function() { return Hsl; })();\n\nvar _r = require('./component'); eval('var Component = _r');\nvar _r = require('./rgb');       eval('var Rgb       = _r');\n\n/**\n * Hue, saturation, lightness color space\n * @extends AbstractModel\n * @param {Number} h\n * @param {Number} s\n * @param {Number} l\n */\nfunction Hsl(h, s, l) {\n  this._name       = 'hsl';\n  this._components = ['hue', 'saturation', 'lightness'];\n  this._hue        = new Component('hue',        0, 360); this._hue.set(h);\n  this._saturation = new Component('saturation', 0, 1  ); this._saturation.set(s);\n  this._lightness  = new Component('lightness',  0, 1  ); this._lightness.set(l);\n};\n\nrequire('util').inherits(Hsl, require('./abstract-model')); 'code' ? 'completion' : Hsl.prototype = new AbstractModel;\n\n/**\n * @param {Number} value from 0 to 360\n * @returns {Hsl}\n */\nHsl.prototype.hue = function (value) {\n  return this._component('hue', arguments);\n};\n\n/**\n * @param {Number} value from 0 to 1\n * @returns {Hsl}\n */\nHsl.prototype.saturation = function (value) {\n  return this._component('saturation', arguments);\n};\n\n/**\n * @param {Number} value from 0 to 1\n * @returns {Hsl}\n */\nHsl.prototype.lightness = function (value) {\n  return this._component('lightness', arguments);\n};\n\n/**\n * @returns {Xyz}\n */\nHsl.prototype.toXyz = function () {\n  return this.toRgb().toXyz();\n};\n\n/**\n * @returns {Rgb}\n */\nHsl.prototype.toRgb = function () {\n  var lightness  = this._lightness.get(),\n      saturation = this._saturation.get();\n  if (saturation == 0) {\n    var light = 0;\n    if (lightness < 0) {\n      light = 0;\n    } else if (lightness >= 1) {\n      light = 255;\n    } else {\n      light = (lightness * (1 << 16)) >> 8;\n    }\n    return new Rgb(light, light, light);\n  }\n\n  var hue   = this._hue.get() / this._hue._to,\n      temp2 = (lightness < 0.5) ?\n                (lightness * (saturation + 1)) :\n                (lightness + saturation) - (lightness * saturation),\n      temp1 = 2 * lightness - temp2;\n\n  return new Rgb(\n    this._calcHue(temp1, temp2, hue + 1 / 3),\n    this._calcHue(temp1, temp2, hue),\n    this._calcHue(temp1, temp2, hue - 1 / 3)\n  );\n};\n\n/**\n * @param {Number} temp1\n * @param {Number} temp2\n * @param {Number} hue\n * @returns {Number}\n */\nHsl.prototype._calcHue = function (temp1, temp2, hue) {\n  if (hue < 0) {\n    ++hue;\n  } else if (hue > 1) {\n    --hue;\n  }\n\n  result = temp1;\n  if (hue * 6 < 1) {\n    result = temp1 + (temp2 - temp1) * hue * 6;\n  } else if (hue * 2 < 1) {\n    result = temp2;\n  } else if (hue * 3 < 2) {\n    result = temp1 + (temp2 - temp1) * (2/3 - hue) * 6;\n  }\n\n  return (result * 255.99999999999997) >> 0;\n};\n","module.exports = {\n    Component     : require('./component')\n  , AbstractModel : require('./abstract-model')\n  , Xyz           : require('./xyz')\n  , Rgb           : require('./rgb')\n  , HexRgb        : require('./hex-rgb')\n  , Lab           : require('./lab')\n  , Hsl           : require('./hsl')\n};\n","module.exports = (function() { return Lab; })();\n\nvar _r = require('./component'); eval('var Component = _r');\n\n/**\n * Lab color space\n *\n * CIE 1976 (L*, a*, b*) color space\n * @extends AbstractModel\n * @param {Number} l\n * @param {Number} a\n * @param {Number} b\n */\nfunction Lab(l, a, b) {\n  this._name       = 'lab';\n  this._components = ['lightness', 'a', 'b'];\n  this._lightness  = new Component('lightness',    0, 100); this._lightness.set(l);\n  this._a          = new Component('a',          -87, 100); this._a.set(a);\n  this._b          = new Component('b',         -108, 100); this._b.set(b);\n};\n\nrequire('util').inherits(Lab, require('./abstract-model')); 'code' ? 'completion' : Lab.prototype = new AbstractModel;\n\n/**\n * @param {Number} value\n * @returns {Lab}\n */\nLab.prototype.lightness = function (value) {\n  return this._component('lightness', arguments);\n};\n\n/**\n * @param {Number} value\n * @returns {Lab}\n */\nLab.prototype.a = function (value) {\n  return this._component('a', arguments);\n};\n\n/**\n * @param {Number} value\n * @returns {Lab}\n */\nLab.prototype.b = function (value) {\n  return this._component('b', arguments);\n};\n","module.exports = (function() { return Rgb; })();\n\nvar _r = require('./component'); eval('var Component = _r');\nvar _r = require('./xyz');       eval('var Xyz       = _r');\nvar _r = require('./hsl');       eval('var Hsl       = _r');\n\n/**\n * Rgb color model\n * @extends AbstractModel\n * @param {Number} r\n * @param {Number} g\n * @param {Number} b\n */\nfunction Rgb(r, g, b) {\n  this._name       = 'rgb';\n  this._components = ['red', 'green', 'blue'];\n  this._red        = new Component('red',   0, 255); this._red.set(r);\n  this._green      = new Component('green', 0, 255); this._green.set(g);\n  this._blue       = new Component('blue',  0, 255); this._blue.set(b);\n};\n\nrequire('util').inherits(Rgb, require('./abstract-model')); 'code' ? 'completion' : Rgb.prototype = new AbstractModel;\n\n/**\n * @param {Number} value\n * @returns {Rgb}\n */\nRgb.prototype.red = function (value) {\n  return this._component('red', arguments);\n};\n\n/**\n * @param {Number} value\n * @returns {Rgb}\n */\nRgb.prototype.green = function (value) {\n  return this._component('green', arguments);\n};\n\n/**\n * @param {Number} value\n * @returns {Rgb}\n */\nRgb.prototype.blue = function (value) {\n  return this._component('blue', arguments);\n};\n\n/**\n * @returns {HexRgb}\n */\nRgb.prototype.toHex = function () {\n  var HexRgb = require('./hex-rgb');\n  return new HexRgb()\n    .red  (this._red  .get())\n    .green(this._green.get())\n    .blue (this._blue .get());\n};\n\n/**\n * @returns {String}\n */\nRgb.prototype.toHexString = function () {\n  return this.toHex().toString();\n};\n\n/**\n * @param {Number} value\n * @returns {Number}\n */\nRgb.prototype._preparePreXyzValue = function(value) {\n  value = value / 255;\n  if (value > 0.04045) {\n    value = (value + 0.055) / 1.055;\n    value = Math.pow(value, 2.4);\n  } else {\n    value = value / 12.92;\n  }\n  return value * 100;\n};\n\n/**\n * @returns {Xyz}\n */\nRgb.prototype.toXyz = function () {\n  var r = this._preparePreXyzValue(this._red  .get()),\n      g = this._preparePreXyzValue(this._green.get()),\n      b = this._preparePreXyzValue(this._blue .get());\n\n  return new Xyz(\n    this._finalizeXyzValue(r * 0.4124 + g * 0.3576 + b * 0.1805),\n    this._finalizeXyzValue(r * 0.2126 + g * 0.7152 + b * 0.0722),\n    this._finalizeXyzValue(r * 0.0193 + g * 0.1192 + b * 0.9505)\n  );\n};\n\n/**\n * @param {Number} preXyzValue\n * @returns {Number}\n */\nRgb.prototype._finalizeXyzValue = function (preXyzValue) {\n  return Math.round(preXyzValue * 10000) / 10000;\n};\n\n/**\n * @returns {Hsl}\n */\nRgb.prototype.toHsl = function () {\n  var r = this._red  .get() / 255,\n      g = this._green.get() / 255,\n      b = this._blue .get() / 255,\n      min   = Math.min(r, g, b),\n      max   = Math.max(r, g, b),\n      delta = max - min,\n      lightness = (min + max) / 2;\n\n  lightness = Math.round(lightness * 100) / 100;\n\n  if (delta == 0) {\n    return new Hsl(0, 0, lightness);\n  }\n\n  var saturation = 0;\n  if (lightness < 0.5) {\n    saturation = delta / (max + min);\n  } else {\n    saturation = delta / (2 - max - min);\n  }\n  saturation = Math.round(saturation * 100) / 100;\n\n  var hue  = 0,\n    deltaR = (((max - r) / 6 ) + (delta / 2)) / delta,\n    deltaG = (((max - g) / 6 ) + (delta / 2)) / delta,\n    deltaB = (((max - b) / 6 ) + (delta / 2)) / delta;\n\n  if (r == max) {\n    hue = deltaB - deltaG;\n  } else if (g == max) {\n    hue = ( 1 / 3 ) + deltaR - deltaB;\n  } else {\n    hue = ( 2 / 3 ) + deltaG - deltaR;\n  }\n\n  if (hue < 0) {\n    ++hue;\n  } else if (hue > 1) {\n    --hue;\n  }\n  hue = (hue * 360.99999999999997) >> 0;\n  if (360 == hue) {\n    hue = 0;\n  }\n\n  return new Hsl(hue, saturation, lightness);\n};\n","module.exports = (function() { return Xyz; })();\n\nvar _r = require('./component'); eval('var Component = _r');\nvar _r = require('./rgb');       eval('var Rgb       = _r');\nvar _r = require('./lab');       eval('var Lab       = _r');\n\n/**\n * XYZ color model - base color model for others\n *\n * CIE 1931 color space\n * @extends AbstractModel\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n */\nfunction Xyz(x, y, z) {\n  this._name       = 'xyz';\n  this._components = ['x', 'y', 'z'];\n  this._x          = new Component('x', 0, 95.05); this._x.set(x);\n  this._y          = new Component('y', 0, 100  ); this._y.set(y);\n  this._z          = new Component('z', 0, 108.9); this._z.set(z);\n};\n\nrequire('util').inherits(Xyz, require('./abstract-model')); 'code' ? 'completion' : Xyz.prototype = new AbstractModel;\n\n/**\n * @param {Number} value\n * @returns {Xyz}\n */\nXyz.prototype.x = function (value) {\n  return this._component('x', arguments);\n};\n\n/**\n * @param {Number} value\n * @returns {Xyz}\n */\nXyz.prototype.y = function (value) {\n  return this._component('y', arguments);\n};\n\n/**\n * @param {Number} value\n * @returns {Xyz}\n */\nXyz.prototype.z = function (value) {\n  return this._component('z', arguments);\n};\n\n/**\n * @returns {Xyz}\n */\nXyz.prototype.toXyz = function () {\n  return new Xyz(this._x.get(), this._y.get(), this._z.get());\n};\n\n/**\n * @returns {Lab}\n */\nXyz.prototype.toLab = function () {\n  var x = this._preparePreLabValue(this._x.get() /  95.047),\n      y = this._preparePreLabValue(this._y.get() / 100.000),\n      z = this._preparePreLabValue(this._z.get() / 108.883);\n\n  return new Lab(\n    this._finalizeLabValue((116 * y) - 16),\n    this._finalizeLabValue(500 * (x - y)),\n    this._finalizeLabValue(200 * (y - z))\n  );\n};\n\n/**\n * @param {Number} preLabValue\n * @returns {Number}\n */\nXyz.prototype._preparePreLabValue = function (preLabValue) {\n  if (preLabValue > 0.008856) {\n    return Math.pow(preLabValue, 1/3);\n  }\n  return (7.787 * preLabValue) + (16 / 116);\n};\n\n/**\n * @param {Number} preLabValue\n * @returns {Number}\n */\nXyz.prototype._finalizeLabValue = function (preLabValue) {\n  return Math.round(preLabValue * 10000) / 10000;\n};\n\n/**\n * @returns {Rgb}\n */\nXyz.prototype.toRgb = function () {\n  var x = this._x.get() / 100,\n      y = this._y.get() / 100,\n      z = this._z.get() / 100,\n      r = x *  3.2406 + y * -1.5372 + z * -0.4986,\n      g = x * -0.9689 + y *  1.8758 + z *  0.0415,\n      b = x *  0.0557 + y * -0.2040 + z *  1.0570;\n\n  return new Rgb(this._finalizeRgbValue(r), this._finalizeRgbValue(g), this._finalizeRgbValue(b));\n};\n\n/**\n * @param {Number} preRgbValue\n * @returns {Number}\n */\nXyz.prototype._finalizeRgbValue = function (preRgbValue) {\n  if (preRgbValue > 0.0031308 ) {\n    preRgbValue = 1.055 * Math.pow(preRgbValue,  1/2.4) - 0.055;\n  } else {\n    preRgbValue = 12.92 * preRgbValue;\n  }\n\n  return Math.round(255 * preRgbValue);\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/*jshint esversion: 6 */\n\nfunction colorcolor(color, newColor = \"rgba\", calculateOpacity = false) {\n\tcolor = color.toLowerCase();\n\tnewColor = newColor.toLowerCase();\n\tvar returnedColor = color;\n\tvar namedColor = require('color-name');\n\tvar r,g,b,a;\n\tvar roundTo = 4;\n\tvar colorDefinitions = {\n\t\trgb: {\n\t\t\tre: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n\t\t\texample: [ \"rgb(123, 234, 45)\", \"rgb(255,234,245)\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\treturn [\n\t\t\t\t\tparseInt(bits[ 1 ], 10), parseInt(bits[ 2 ], 10), parseInt(bits[ 3 ], 10), 1\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\trgba: {\n\t\t\tre: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d+(?:\\.\\d+)?|\\.\\d+)\\s*\\)/,\n\t\t\texample: [ \"rgba(123, 234, 45, 1)\", \"rgba(255,234,245, 0.5)\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\treturn [\n\t\t\t\t\tparseInt(bits[ 1 ], 10), parseInt(bits[ 2 ], 10), parseInt(bits[ 3 ], 10), parseFloat(bits[ 4 ])\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\thex: {\n\t\t\tre: /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n\t\t\texample: [ \"00ff00\", \"336699\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\treturn [\n\t\t\t\t\tparseInt(bits[ 1 ], 16), parseInt(bits[ 2 ], 16), parseInt(bits[ 3 ], 16), 1\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\thex3: {\n\t\t\tre: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n\t\t\texample: [ \"fb0\", \"f0f\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\treturn [\n\t\t\t\t\tparseInt(bits[ 1 ] + bits[ 1 ], 16), parseInt(bits[ 2 ] + bits[ 2 ], 16), parseInt(bits[ 3 ] + bits[ 3 ], 16), 1\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\thexa: {\n\t\t\tre: /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n\t\t\texample: [ \"00ff00ff\", \"336699a0\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\treturn [\n\t\t\t\t\tparseInt(bits[ 1 ], 16), parseInt(bits[ 2 ], 16), parseInt(bits[ 3 ], 16), (parseInt(bits[ 4 ], 16) / 255)\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\thex4a: {\n\t\t\tre: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n\t\t\texample: [ \"fb0f\", \"f0f8\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\treturn [\n\t\t\t\t\tparseInt(bits[ 1 ] + bits[ 1 ], 16), parseInt(bits[ 2 ] + bits[ 2 ], 16), parseInt(bits[ 3 ] + bits[ 3 ], 16), (parseInt(bits[ 4 ] + bits[ 4 ], 16) / 255)\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\thsl: {\n\t\t\tre: /^hsl\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%\\)$/,\n\t\t\texample: [ \"hsl(120, 100%, 25%)\", \"hsl(0, 100%, 50%)\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\tbits[ 4 ] = 1;\n\t\t\t\tvar rgba = hslToRgb(bits);\n\t\t\t\treturn [\n\t\t\t\t\trgba.r, rgba.g, rgba.b, rgba.a\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\thsla: {\n\t\t\tre: /^hsla\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%,\\s*(\\d+(?:\\.\\d+)?|\\.\\d+)\\s*\\)/,\n\t\t\texample: [ \"hsla(120, 100%, 25%, 1)\", \"hsla(0, 100%, 50%, 0.5)\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\tvar rgba = hslToRgb(bits);\n\t\t\t\treturn [\n\t\t\t\t\trgba.r, rgba.g, rgba.b, rgba.a\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\thsv: {\n\t\t\tre: /^hsv\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%\\)$/,\n\t\t\texample: [ \"hsv(120, 100%, 25%)\", \"hsv(0, 100%, 50%)\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\tvar rgb = hsvToRgb(bits);\n\t\t\t\treturn [\n\t\t\t\t\trgb.r, rgb.g, rgb.b, 1\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\thsb: {\n\t\t\tre: /^hsb\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%\\)$/,\n\t\t\texample: [ \"hsb(120, 100%, 25%)\", \"hsb(0, 100%, 50%)\" ],\n\t\t\ttoRGBA: function (bits) {\n\t\t\t\tvar rgb = hsvToRgb(bits);\n\t\t\t\treturn [\n\t\t\t\t\trgb.r, rgb.g, rgb.b, 1\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t};\n\n\t// If this is a named color, convert it to hex\n\tif (namedColor.hasOwnProperty(color)) {\n\t\tcolor = namedColor[color];\n\t\tcolor.forEach(function(piece, index) {\n\t\t\t\"use strict\";\n\t\t\tcolor[index] = (\"0\" + piece.toString(16)).slice(-2);\n\t\t});\n\t\tcolor = \"#\" + color.join('');\n\t}\n\n\t// Search the color definitions for a match\n\tfor (let colorDefinition in colorDefinitions) {\n\t\tlet re = colorDefinitions[colorDefinition].re;\n\t\tlet processor = colorDefinitions[colorDefinition].toRGBA;\n\t\tlet bits = re.exec(color);\n\t\tif (bits) {\n\t\t\tlet channels = processor(bits);\n\t\t\tr = channels[0];\n\t\t\tg = channels[1];\n\t\t\tb = channels[2];\n\t\t\ta = +(Math.round(channels[3] + (\"e+\" + roundTo)) + (\"e-\" + roundTo));\n\t\t}\n\t}\n\tr = Math.round( ( r < 0 || isNaN(r) ) ? 0 : ( ( r > 255 ) ? 255 : r ) );\n\tg = Math.round( ( g < 0 || isNaN(g) ) ? 0 : ( ( g > 255 ) ? 255 : g ) );\n\tb = Math.round( ( b < 0 || isNaN(b) ) ? 0 : ( ( b > 255 ) ? 255 : b ) );\n\ta = ( a < 0 || isNaN(a) ) ? 0 : ( ( a > 1 ) ? 1 : a );\n\n\tswitch (newColor) {\n\t\tcase \"hex\":\n\t\t\treturnedColor = \"#\" + (\"0\" + r.toString(16)).slice(-2) + (\"0\" + g.toString(16)).slice(-2) + (\"0\" + b.toString(16)).slice(-2);\n\t\t\tbreak;\n\t\tcase \"hexa\":\n\t\t\tif (calculateOpacity) {\n\t\t\t\t[r, g, b, a] = calculateOpacityFromWhite(r, g, b, a);\n\t\t\t}\n\t\t\treturnedColor = \"#\" + (\"0\" + r.toString(16)).slice(-2) + (\"0\" + g.toString(16)).slice(-2) + (\"0\" + b.toString(16)).slice(-2) + (\"0\" + (Math.round(255 * a)).toString(16)).slice(-2);\n\t\t\tbreak;\n\t\tcase \"hsl\":\n\t\t\tlet hsl = rgbToHsl({ \"r\": r, \"g\": g, \"b\": b });\n\t\t\treturnedColor = `hsl(${hsl.h},${hsl.s}%,${hsl.l}%)`;\n\t\t\tbreak;\n\t\tcase \"hsla\":\n\t\t\tif (calculateOpacity) {\n\t\t\t\t[r, g, b, a] = calculateOpacityFromWhite(r, g, b, a);\n\t\t\t}\n\t\t\tlet hsla = rgbToHsl({ \"r\": r, \"g\": g, \"b\": b, \"a\": a });\n\t\t\treturnedColor = `hsla(${hsla.h},${hsla.s}%,${hsla.l}%,${hsla.a})`;\n\t\t\tbreak;\n\t\tcase \"hsb\":\n\t\t\t/* Same as `hsv` */\n\t\t\tlet hsb = rgbToHsv({ \"r\": r, \"g\": g, \"b\": b });\n\t\t\treturnedColor = `hsb(${hsb.h},${hsb.s}%,${hsb.v}%)`;\n\t\t\tbreak;\n\t\tcase \"hsv\":\n\t\t\tlet hsv = rgbToHsv({ \"r\": r, \"g\": g, \"b\": b });\n\t\t\treturnedColor = `hsv(${hsv.h},${hsv.s}%,${hsv.v}%)`;\n\t\t\tbreak;\n\t\tcase \"rgb\":\n\t\t\treturnedColor = `rgb(${r},${g},${b})`;\n\t\t\tbreak;\n\t\tcase \"rgba\":\n\t\t/* falls through */\n\t\tdefault:\n\t\t\tif (calculateOpacity) {\n\t\t\t\t[r, g, b, a] = calculateOpacityFromWhite(r, g, b, a);\n\t\t\t}\n\t\t\treturnedColor = `rgba(${r},${g},${b},${a})`;\n\t\t\tbreak;\n\t}\n\n\treturn returnedColor;\n}\n\nfunction calculateOpacityFromWhite(r, g, b, a) {\n\t\"use strict\";\n\tvar min = 0;\n\ta = ( 255 - ( min = Math.min(r, g, b) ) ) / 255;\n\tr = ( 0 || ( r - min ) / a ).toFixed(0);\n\tg = ( 0 || ( g - min ) / a ).toFixed(0);\n\tb = ( 0 || ( b - min ) / a ).toFixed(0);\n\ta = parseFloat(a.toFixed(4));\n\n\treturn [r, g, b, a];\n}\n\nfunction hslToRgb(bits) {\n\tvar rgba = {}, hsl = {\n\t\th: bits[1] / 360,\n\t\ts: bits[2] / 100,\n\t\tl: bits[3] / 100,\n\t\ta: parseFloat(bits[ 4 ])\n\t};\n\tif (hsl.s === 0) {\n\t\tlet v = 255 * hsl.l;\n\t\trgba = {\n\t\t\tr: v,\n\t\t\tg: v,\n\t\t\tb: v,\n\t\t\ta: hsl.a\n\t\t};\n\t} else {\n\t\tlet q = hsl.l < 0.5 ? hsl.l * ( 1 + hsl.s ) : ( hsl.l + hsl.s ) - ( hsl.l * hsl.s );\n\t\tlet p = 2 * hsl.l - q;\n\t\trgba.r = hueToRgb(p, q, hsl.h + ( 1 / 3 ) ) * 255;\n\t\trgba.g = hueToRgb(p, q, hsl.h) * 255;\n\t\trgba.b = hueToRgb(p, q, hsl.h - ( 1 / 3 ) ) * 255;\n\t\trgba.a = hsl.a;\n\t}\n\n\treturn rgba;\n}\n\nfunction rgbToHsl(rgba) {\n\trgba.r = rgba.r / 255;\n\trgba.g = rgba.g / 255;\n\trgba.b = rgba.b / 255;\n\tvar max = Math.max(rgba.r, rgba.g, rgba.b), min = Math.min(rgba.r, rgba.g, rgba.b), hsl = [], d;\n\thsl.a = rgba.a;\n\thsl.l = ( max + min ) / 2;\n\tif (max === min) {\n\t\thsl.h = 0;\n\t\thsl.s = 0;\n\t} else {\n\t\td = max - min;\n\t\thsl.s = hsl.l >= 0.5 ? d / ( 2 - max - min ) : d / ( max + min );\n\t\tswitch (max) {\n\t\t\tcase rgba.r:\n\t\t\t\thsl.h = ( rgba.g - rgba.b ) / d + ( rgba.g < rgba.b ? 6 : 0 );\n\t\t\t\tbreak;\n\t\t\tcase rgba.g:\n\t\t\t\thsl.h = ( rgba.b - rgba.r ) / d + 2;\n\t\t\t\tbreak;\n\t\t\tcase rgba.b:\n\t\t\t\thsl.h = ( rgba.r - rgba.g ) / d + 4;\n\t\t\t\tbreak;\n\t\t}\n\t\thsl.h /= 6;\n\t}\n\thsl.h = parseInt(( hsl.h * 360 ).toFixed(0), 10);\n\thsl.s = parseInt(( hsl.s * 100 ).toFixed(0), 10);\n\thsl.l = parseInt(( hsl.l * 100 ).toFixed(0), 10);\n\n\treturn hsl;\n}\n\nfunction hsvToRgb(bits) {\n\tvar rgb = {}, hsv = {\n\t\th: bits[1] / 360,\n\t\ts: bits[2] / 100,\n\t\tv: bits[3] / 100\n\t}, i = Math.floor(hsv.h * 6), f = hsv.h * 6 - i, p = hsv.v * ( 1 - hsv.s ), q = hsv.v * ( 1 - f * hsv.s ), t = hsv.v * ( 1 - ( 1 - f ) * hsv.s );\n\tswitch (i % 6) {\n\t\tcase 0:\n\t\t\trgb.r = hsv.v;\n\t\t\trgb.g = t;\n\t\t\trgb.b = p;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\trgb.r = q;\n\t\t\trgb.g = hsv.v;\n\t\t\trgb.b = p;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\trgb.r = p;\n\t\t\trgb.g = hsv.v;\n\t\t\trgb.b = t;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\trgb.r = p;\n\t\t\trgb.g = q;\n\t\t\trgb.b = hsv.v;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\trgb.r = t;\n\t\t\trgb.g = p;\n\t\t\trgb.b = hsv.v;\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\trgb.r = hsv.v;\n\t\t\trgb.g = p;\n\t\t\trgb.b = q;\n\t\t\tbreak;\n\t}\n\trgb.r = rgb.r * 255;\n\trgb.g = rgb.g * 255;\n\trgb.b = rgb.b * 255;\n\n\treturn rgb;\n}\n\nfunction rgbToHsv(rgba) {\n\trgba.r = toPercent(parseInt(rgba.r, 10) % 256, 256);\n\trgba.g = toPercent(parseInt(rgba.g, 10) % 256, 256);\n\trgba.b = toPercent(parseInt(rgba.b, 10) % 256, 256);\n\tvar max = Math.max(rgba.r, rgba.g, rgba.b), min = Math.min(rgba.r, rgba.g, rgba.b), d = max - min, hsv = {\n\t\t\"h\": 0,\n\t\t\"s\": max === 0 ? 0 : d / max,\n\t\t\"v\": max\n\t};\n\tif (max !== min) {\n\t\tswitch (max) {\n\t\t\tcase rgba.r:\n\t\t\t\thsv.h = ( rgba.g - rgba.b ) / d + ( rgba.g < rgba.b ? 6 : 0 );\n\t\t\t\tbreak;\n\t\t\tcase rgba.g:\n\t\t\t\thsv.h = ( rgba.b - rgba.r ) / d + 2;\n\t\t\t\tbreak;\n\t\t\tcase rgba.b:\n\t\t\t\thsv.h = ( rgba.r - rgba.g ) / d + 4;\n\t\t\t\tbreak;\n\t\t}\n\t\thsv.h /= 6;\n\t}\n\thsv.h = parseInt(( hsv.h * 360 ).toFixed(0), 10);\n\thsv.s = parseInt(( hsv.s * 100 ).toFixed(0), 10);\n\thsv.v = parseInt(( hsv.v * 100 ).toFixed(0), 10);\n\n\treturn hsv;\n}\n\nfunction hueToRgb(p, q, t) {\n\tif (t < 0) {\n\t\tt += 1;\n\t}\n\tif (t > 1) {\n\t\tt -= 1;\n\t}\n\tif (t < 1 / 6) {\n\t\treturn p + ( q - p ) * 6 * t;\n\t}\n\tif (t < 1 / 2) {\n\t\treturn q;\n\t}\n\tif (t < 2 / 3) {\n\t\treturn p + ( q - p ) * ( ( 2 / 3 - t ) * 6 );\n\t}\n\n\treturn p;\n}\n\nfunction toPercent(amount, limit) {\n\treturn amount / limit;\n}\n\nmodule.exports = colorcolor;\nglobal.colorcolor = module.exports; /* ew */\n","/*!\n * hex-color-regex <https://github.com/regexps/hex-color-regex>\n *\n * Copyright (c) 2015 Charlike Mike Reagent <@tunnckoCore> (http://www.tunnckocore.tk)\n * Released under the MIT license.\n */\n\n'use strict'\n\nmodule.exports = function hexColorRegex (opts) {\n  opts = opts && typeof opts === 'object' ? opts : {}\n\n  return opts.strict ? /^#([a-f0-9]{6}|[a-f0-9]{3})\\b$/i : /#([a-f0-9]{6}|[a-f0-9]{3})\\b/gi\n}\n","const hexCharacters = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;\nconst match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;\nconst nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nexport default function hexRgb(hex, options = {}) {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alphaFromHex = 1;\n\n\tif (hex.length === 8) {\n\t\talphaFromHex = Number.parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.slice(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talphaFromHex = Number.parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.slice(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst number = Number.parseInt(hex, 16);\n\tconst red = number >> 16;\n\tconst green = (number >> 8) & 255;\n\tconst blue = number & 255;\n\tconst alpha = typeof options.alpha === 'number' ? options.alpha : alphaFromHex;\n\n\tif (options.format === 'array') {\n\t\treturn [red, green, blue, alpha];\n\t}\n\n\tif (options.format === 'css') {\n\t\tconst alphaString = alpha === 1 ? '' : ` / ${Number((alpha * 100).toFixed(2))}%`;\n\t\treturn `rgb(${red} ${green} ${blue}${alphaString})`;\n\t}\n\n\treturn {red, green, blue, alpha};\n}\n","/*!\n * is-hexcolor <https://github.com/tunnckoCore/is-hexcolor>\n *\n * Copyright (c) 2015 Charlike Mike Reagent <@tunnckoCore> (http://www.tunnckocore.tk)\n * Released under the MIT license.\n */\n\n'use strict'\n\nvar hexColorRegex = require('hex-color-regex');\n\nmodule.exports = function isHexcolor (hex) {\n  return hexColorRegex({strict: true}).test(hex)\n}\n","/* globals MOClassDescription, NSObject, NSSelectorFromString, NSClassFromString, MOPropertyDescription */\n\nmodule.exports = function MochaDelegate(definition, superclass) {\n  var uniqueClassName =\n    'MochaJSDelegate_DynamicClass_' + NSUUID.UUID().UUIDString()\n\n  var delegateClassDesc = MOClassDescription.allocateDescriptionForClassWithName_superclass_(\n    uniqueClassName,\n    superclass || NSObject\n  )\n\n  // Storage\n  var handlers = {}\n  var ivars = {}\n\n  // Define an instance method\n  function setHandlerForSelector(selectorString, func) {\n    var handlerHasBeenSet = selectorString in handlers\n    var selector = NSSelectorFromString(selectorString)\n\n    handlers[selectorString] = func\n\n    /*\n      For some reason, Mocha acts weird about arguments: https://github.com/logancollins/Mocha/issues/28\n      We have to basically create a dynamic handler with a likewise dynamic number of predefined arguments.\n    */\n    if (!handlerHasBeenSet) {\n      var args = []\n      var regex = /:/g\n      while (regex.exec(selectorString)) {\n        args.push('arg' + args.length)\n      }\n\n      // eslint-disable-next-line no-eval\n      var dynamicFunction = eval(\n        '(function (' +\n          args.join(', ') +\n          ') { return handlers[selectorString].apply(this, arguments); })'\n      )\n\n      delegateClassDesc.addInstanceMethodWithSelector_function(\n        selector,\n        dynamicFunction\n      )\n    }\n  }\n\n  // define a property\n  function setIvar(key, value) {\n    var ivarHasBeenSet = key in handlers\n\n    ivars[key] = value\n\n    if (!ivarHasBeenSet) {\n      delegateClassDesc.addInstanceVariableWithName_typeEncoding(key, '@')\n      var description = MOPropertyDescription.new()\n      description.name = key\n      description.typeEncoding = '@'\n      description.weak = true\n      description.ivarName = key\n      delegateClassDesc.addProperty(description)\n    }\n  }\n\n  this.getClass = function() {\n    return NSClassFromString(uniqueClassName)\n  }\n\n  this.getClassInstance = function(instanceVariables) {\n    var instance = NSClassFromString(uniqueClassName).new()\n    Object.keys(ivars).forEach(function(key) {\n      instance[key] = ivars[key]\n    })\n    Object.keys(instanceVariables || {}).forEach(function(key) {\n      instance[key] = instanceVariables[key]\n    })\n    return instance\n  }\n  // alias\n  this.new = this.getClassInstance\n\n  // Convenience\n  if (typeof definition === 'object') {\n    Object.keys(definition).forEach(\n      function(key) {\n        if (typeof definition[key] === 'function') {\n          setHandlerForSelector(key, definition[key])\n        } else {\n          setIvar(key, definition[key])\n        }\n      }\n    )\n  }\n\n  delegateClassDesc.registerClass()\n}\n","'use strict';\n/* eslint-disable no-mixed-operators */\nmodule.exports = (red, green, blue, alpha) => {\n\tconst isPercent = (red + (alpha || '')).toString().includes('%');\n\n\tif (typeof red === 'string') {\n\t\t[red, green, blue, alpha] = red.match(/(0?\\.?\\d{1,3})%?\\b/g).map(Number);\n\t} else if (alpha !== undefined) {\n\t\talpha = parseFloat(alpha);\n\t}\n\n\tif (typeof red !== 'number' ||\n\t\ttypeof green !== 'number' ||\n\t\ttypeof blue !== 'number' ||\n\t\tred > 255 ||\n\t\tgreen > 255 ||\n\t\tblue > 255\n\t) {\n\t\tthrow new TypeError('Expected three numbers below 256');\n\t}\n\n\tif (typeof alpha === 'number') {\n\t\tif (!isPercent && alpha >= 0 && alpha <= 1) {\n\t\t\talpha = Math.round(255 * alpha);\n\t\t} else if (isPercent && alpha >= 0 && alpha <= 100) {\n\t\t\talpha = Math.round(255 * alpha / 100);\n\t\t} else {\n\t\t\tthrow new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);\n\t\t}\n\n\t\talpha = (alpha | 1 << 8).toString(16).slice(1);\n\t} else {\n\t\talpha = '';\n\t}\n\n\treturn ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1) + alpha;\n};\n/* eslint-enable no-mixed-operators */\n","function parseHexColor(color) {\n  // Check the string for incorrect formatting.\n  if (!color || color[0] !== '#') {\n    if (\n      color &&\n      typeof color.isKindOfClass === 'function' &&\n      color.isKindOfClass(NSColor)\n    ) {\n      return color\n    }\n    throw new Error(\n      'Incorrect color formating. It should be an hex color: #RRGGBBAA'\n    )\n  }\n\n  // append FF if alpha channel is not specified.\n  var source = color.substr(1)\n  if (source.length === 3) {\n    source += 'F'\n  } else if (source.length === 6) {\n    source += 'FF'\n  }\n  // Convert the string from #FFF format to #FFFFFF format.\n  var hex\n  if (source.length === 4) {\n    for (var i = 0; i < 4; i += 1) {\n      hex += source[i]\n      hex += source[i]\n    }\n  } else if (source.length === 8) {\n    hex = source\n  } else {\n    return NSColor.whiteColor()\n  }\n\n  var r = parseInt(hex.slice(0, 2), 16) / 255\n  var g = parseInt(hex.slice(2, 4), 16) / 255\n  var b = parseInt(hex.slice(4, 6), 16) / 255\n  var a = parseInt(hex.slice(6, 8), 16) / 255\n\n  return NSColor.colorWithSRGBRed_green_blue_alpha(r, g, b, a)\n}\n\nmodule.exports = function (browserWindow, panel, webview) {\n  // keep reference to the subviews\n  browserWindow._panel = panel\n  browserWindow._webview = webview\n  browserWindow._destroyed = false\n\n  browserWindow.destroy = function () {\n    return panel.close()\n  }\n\n  browserWindow.close = function () {\n    if (panel.delegate().utils && panel.delegate().utils.parentWindow) {\n      var shouldClose = true\n      browserWindow.emit('close', {\n        get defaultPrevented() {\n          return !shouldClose\n        },\n        preventDefault: function () {\n          shouldClose = false\n        },\n      })\n      if (shouldClose) {\n        panel.delegate().utils.parentWindow.endSheet(panel)\n      }\n      return\n    }\n\n    if (!browserWindow.isClosable()) {\n      return\n    }\n\n    panel.performClose(null)\n  }\n\n  function focus(focused) {\n    if (!browserWindow.isVisible()) {\n      return\n    }\n    if (focused) {\n      NSApplication.sharedApplication().activateIgnoringOtherApps(true)\n      panel.makeKeyAndOrderFront(null)\n    } else {\n      panel.orderBack(null)\n      NSApp.mainWindow().makeKeyAndOrderFront(null)\n    }\n  }\n\n  browserWindow.focus = focus.bind(this, true)\n  browserWindow.blur = focus.bind(this, false)\n\n  browserWindow.isFocused = function () {\n    return panel.isKeyWindow()\n  }\n\n  browserWindow.isDestroyed = function () {\n    return browserWindow._destroyed\n  }\n\n  browserWindow.show = function () {\n    // This method is supposed to put focus on window, however if the app does not\n    // have focus then \"makeKeyAndOrderFront\" will only show the window.\n    NSApp.activateIgnoringOtherApps(true)\n\n    if (panel.delegate().utils && panel.delegate().utils.parentWindow) {\n      return panel.delegate().utils.parentWindow.beginSheet_completionHandler(\n        panel,\n        __mocha__.createBlock_function('v16@?0q8', function () {\n          browserWindow.emit('closed')\n        })\n      )\n    }\n\n    return panel.makeKeyAndOrderFront(null)\n  }\n\n  browserWindow.showInactive = function () {\n    return panel.orderFrontRegardless()\n  }\n\n  browserWindow.hide = function () {\n    return panel.orderOut(null)\n  }\n\n  browserWindow.isVisible = function () {\n    return panel.isVisible()\n  }\n\n  browserWindow.isModal = function () {\n    return false\n  }\n\n  browserWindow.maximize = function () {\n    if (!browserWindow.isMaximized()) {\n      panel.zoom(null)\n    }\n  }\n  browserWindow.unmaximize = function () {\n    if (browserWindow.isMaximized()) {\n      panel.zoom(null)\n    }\n  }\n\n  browserWindow.isMaximized = function () {\n    if ((panel.styleMask() & NSResizableWindowMask) !== 0) {\n      return panel.isZoomed()\n    }\n    var rectScreen = NSScreen.mainScreen().visibleFrame()\n    var rectWindow = panel.frame()\n    return (\n      rectScreen.origin.x == rectWindow.origin.x &&\n      rectScreen.origin.y == rectWindow.origin.y &&\n      rectScreen.size.width == rectWindow.size.width &&\n      rectScreen.size.height == rectWindow.size.height\n    )\n  }\n\n  browserWindow.minimize = function () {\n    return panel.miniaturize(null)\n  }\n\n  browserWindow.restore = function () {\n    return panel.deminiaturize(null)\n  }\n\n  browserWindow.isMinimized = function () {\n    return panel.isMiniaturized()\n  }\n\n  browserWindow.setFullScreen = function (fullscreen) {\n    if (fullscreen !== browserWindow.isFullscreen()) {\n      panel.toggleFullScreen(null)\n    }\n  }\n\n  browserWindow.isFullscreen = function () {\n    return panel.styleMask() & NSFullScreenWindowMask\n  }\n\n  browserWindow.setAspectRatio = function (aspectRatio /* , extraSize */) {\n    // Reset the behaviour to default if aspect_ratio is set to 0 or less.\n    if (aspectRatio > 0.0) {\n      panel.setAspectRatio(NSMakeSize(aspectRatio, 1.0))\n    } else {\n      panel.setResizeIncrements(NSMakeSize(1.0, 1.0))\n    }\n  }\n\n  browserWindow.setBounds = function (bounds, animate) {\n    if (!bounds) {\n      return\n    }\n\n    // Do nothing if in fullscreen mode.\n    if (browserWindow.isFullscreen()) {\n      return\n    }\n\n    const newBounds = Object.assign(browserWindow.getBounds(), bounds)\n\n    // TODO: Check size constraints since setFrame does not check it.\n    // var size = bounds.size\n    // size.SetToMax(GetMinimumSize());\n    // gfx::Size max_size = GetMaximumSize();\n    // if (!max_size.IsEmpty())\n    //   size.SetToMin(max_size);\n\n    var cocoaBounds = NSMakeRect(\n      newBounds.x,\n      0,\n      newBounds.width,\n      newBounds.height\n    )\n    // Flip Y coordinates based on the primary screen\n    var screen = NSScreen.screens().firstObject()\n    cocoaBounds.origin.y = NSHeight(screen.frame()) - newBounds.y\n\n    panel.setFrame_display_animate(cocoaBounds, true, animate)\n  }\n\n  browserWindow.getBounds = function () {\n    const cocoaBounds = panel.frame()\n    var mainScreenRect = NSScreen.screens().firstObject().frame()\n    return {\n      x: cocoaBounds.origin.x,\n      y: Math.round(NSHeight(mainScreenRect) - cocoaBounds.origin.y),\n      width: cocoaBounds.size.width,\n      height: cocoaBounds.size.height,\n    }\n  }\n\n  browserWindow.setContentBounds = function (bounds, animate) {\n    // TODO:\n    browserWindow.setBounds(bounds, animate)\n  }\n\n  browserWindow.getContentBounds = function () {\n    // TODO:\n    return browserWindow.getBounds()\n  }\n\n  browserWindow.setSize = function (width, height, animate) {\n    // TODO: handle resizing around center\n    return browserWindow.setBounds({ width: width, height: height }, animate)\n  }\n\n  browserWindow.getSize = function () {\n    var bounds = browserWindow.getBounds()\n    return [bounds.width, bounds.height]\n  }\n\n  browserWindow.setContentSize = function (width, height, animate) {\n    // TODO: handle resizing around center\n    return browserWindow.setContentBounds(\n      { width: width, height: height },\n      animate\n    )\n  }\n\n  browserWindow.getContentSize = function () {\n    var bounds = browserWindow.getContentBounds()\n    return [bounds.width, bounds.height]\n  }\n\n  browserWindow.setMinimumSize = function (width, height) {\n    const minSize = CGSizeMake(width, height)\n    panel.setContentMinSize(minSize)\n  }\n\n  browserWindow.getMinimumSize = function () {\n    const size = panel.contentMinSize()\n    return [size.width, size.height]\n  }\n\n  browserWindow.setMaximumSize = function (width, height) {\n    const maxSize = CGSizeMake(width, height)\n    panel.setContentMaxSize(maxSize)\n  }\n\n  browserWindow.getMaximumSize = function () {\n    const size = panel.contentMaxSize()\n    return [size.width, size.height]\n  }\n\n  browserWindow.setResizable = function (resizable) {\n    return browserWindow._setStyleMask(resizable, NSResizableWindowMask)\n  }\n\n  browserWindow.isResizable = function () {\n    return panel.styleMask() & NSResizableWindowMask\n  }\n\n  browserWindow.setMovable = function (movable) {\n    return panel.setMovable(movable)\n  }\n  browserWindow.isMovable = function () {\n    return panel.isMovable()\n  }\n\n  browserWindow.setMinimizable = function (minimizable) {\n    return browserWindow._setStyleMask(minimizable, NSMiniaturizableWindowMask)\n  }\n\n  browserWindow.isMinimizable = function () {\n    return panel.styleMask() & NSMiniaturizableWindowMask\n  }\n\n  browserWindow.setMaximizable = function (maximizable) {\n    if (panel.standardWindowButton(NSWindowZoomButton)) {\n      panel.standardWindowButton(NSWindowZoomButton).setEnabled(maximizable)\n    }\n  }\n\n  browserWindow.isMaximizable = function () {\n    return (\n      panel.standardWindowButton(NSWindowZoomButton) &&\n      panel.standardWindowButton(NSWindowZoomButton).isEnabled()\n    )\n  }\n\n  browserWindow.setFullScreenable = function (fullscreenable) {\n    browserWindow._setCollectionBehavior(\n      fullscreenable,\n      NSWindowCollectionBehaviorFullScreenPrimary\n    )\n    // On EL Capitan this flag is required to hide fullscreen button.\n    browserWindow._setCollectionBehavior(\n      !fullscreenable,\n      NSWindowCollectionBehaviorFullScreenAuxiliary\n    )\n  }\n\n  browserWindow.isFullScreenable = function () {\n    var collectionBehavior = panel.collectionBehavior()\n    return collectionBehavior & NSWindowCollectionBehaviorFullScreenPrimary\n  }\n\n  browserWindow.setClosable = function (closable) {\n    browserWindow._setStyleMask(closable, NSClosableWindowMask)\n  }\n\n  browserWindow.isClosable = function () {\n    return panel.styleMask() & NSClosableWindowMask\n  }\n\n  browserWindow.setAlwaysOnTop = function (top, level, relativeLevel) {\n    var windowLevel = NSNormalWindowLevel\n    var maxWindowLevel = CGWindowLevelForKey(kCGMaximumWindowLevelKey)\n    var minWindowLevel = CGWindowLevelForKey(kCGMinimumWindowLevelKey)\n\n    if (top) {\n      if (level === 'normal') {\n        windowLevel = NSNormalWindowLevel\n      } else if (level === 'torn-off-menu') {\n        windowLevel = NSTornOffMenuWindowLevel\n      } else if (level === 'modal-panel') {\n        windowLevel = NSModalPanelWindowLevel\n      } else if (level === 'main-menu') {\n        windowLevel = NSMainMenuWindowLevel\n      } else if (level === 'status') {\n        windowLevel = NSStatusWindowLevel\n      } else if (level === 'pop-up-menu') {\n        windowLevel = NSPopUpMenuWindowLevel\n      } else if (level === 'screen-saver') {\n        windowLevel = NSScreenSaverWindowLevel\n      } else if (level === 'dock') {\n        // Deprecated by macOS, but kept for backwards compatibility\n        windowLevel = NSDockWindowLevel\n      } else {\n        windowLevel = NSFloatingWindowLevel\n      }\n    }\n\n    var newLevel = windowLevel + (relativeLevel || 0)\n    if (newLevel >= minWindowLevel && newLevel <= maxWindowLevel) {\n      panel.setLevel(newLevel)\n    } else {\n      throw new Error(\n        'relativeLevel must be between ' +\n          minWindowLevel +\n          ' and ' +\n          maxWindowLevel\n      )\n    }\n  }\n\n  browserWindow.isAlwaysOnTop = function () {\n    return panel.level() !== NSNormalWindowLevel\n  }\n\n  browserWindow.moveTop = function () {\n    return panel.orderFrontRegardless()\n  }\n\n  browserWindow.center = function () {\n    panel.center()\n  }\n\n  browserWindow.setPosition = function (x, y, animate) {\n    return browserWindow.setBounds({ x: x, y: y }, animate)\n  }\n\n  browserWindow.getPosition = function () {\n    var bounds = browserWindow.getBounds()\n    return [bounds.x, bounds.y]\n  }\n\n  browserWindow.setTitle = function (title) {\n    panel.setTitle(title)\n  }\n\n  browserWindow.getTitle = function () {\n    return String(panel.title())\n  }\n\n  var attentionRequestId = 0\n  browserWindow.flashFrame = function (flash) {\n    if (flash) {\n      attentionRequestId = NSApp.requestUserAttention(NSInformationalRequest)\n    } else {\n      NSApp.cancelUserAttentionRequest(attentionRequestId)\n      attentionRequestId = 0\n    }\n  }\n\n  browserWindow.getNativeWindowHandle = function () {\n    return panel\n  }\n\n  browserWindow.getNativeWebViewHandle = function () {\n    return webview\n  }\n\n  browserWindow.loadURL = function (url) {\n    // When frameLocation is a file, prefix it with the Sketch Resources path\n    if (/^(?!https?|file).*\\.html?$/.test(url)) {\n      if (typeof __command !== 'undefined' && __command.pluginBundle()) {\n        url =\n          'file://' + __command.pluginBundle().urlForResourceNamed(url).path()\n      }\n    }\n\n    if (/^file:\\/\\/.*\\.html?$/.test(url)) {\n      // ensure URLs containing spaces are properly handled\n      url = NSString.alloc().initWithString(url)\n      url = url.stringByAddingPercentEncodingWithAllowedCharacters(\n        NSCharacterSet.URLQueryAllowedCharacterSet()\n      )\n      webview.loadFileURL_allowingReadAccessToURL(\n        NSURL.URLWithString(url),\n        NSURL.URLWithString('file:///')\n      )\n      return\n    }\n\n    const properURL = NSURL.URLWithString(url)\n    const urlRequest = NSURLRequest.requestWithURL(properURL)\n\n    webview.loadRequest(urlRequest)\n  }\n\n  browserWindow.reload = function () {\n    webview.reload()\n  }\n\n  browserWindow.setHasShadow = function (hasShadow) {\n    return panel.setHasShadow(hasShadow)\n  }\n\n  browserWindow.hasShadow = function () {\n    return panel.hasShadow()\n  }\n\n  browserWindow.setOpacity = function (opacity) {\n    return panel.setAlphaValue(opacity)\n  }\n\n  browserWindow.getOpacity = function () {\n    return panel.alphaValue()\n  }\n\n  browserWindow.setVisibleOnAllWorkspaces = function (visible) {\n    return browserWindow._setCollectionBehavior(\n      visible,\n      NSWindowCollectionBehaviorCanJoinAllSpaces\n    )\n  }\n\n  browserWindow.isVisibleOnAllWorkspaces = function () {\n    var collectionBehavior = panel.collectionBehavior()\n    return collectionBehavior & NSWindowCollectionBehaviorCanJoinAllSpaces\n  }\n\n  browserWindow.setIgnoreMouseEvents = function (ignore) {\n    return panel.setIgnoresMouseEvents(ignore)\n  }\n\n  browserWindow.setContentProtection = function (enable) {\n    panel.setSharingType(enable ? NSWindowSharingNone : NSWindowSharingReadOnly)\n  }\n\n  browserWindow.setAutoHideCursor = function (autoHide) {\n    panel.setDisableAutoHideCursor(autoHide)\n  }\n\n  browserWindow.setVibrancy = function (type) {\n    var effectView = browserWindow._vibrantView\n\n    if (!type) {\n      if (effectView == null) {\n        return\n      }\n\n      effectView.removeFromSuperview()\n      panel.setVibrantView(null)\n      return\n    }\n\n    if (effectView == null) {\n      var contentView = panel.contentView()\n      effectView = NSVisualEffectView.alloc().initWithFrame(\n        contentView.bounds()\n      )\n      browserWindow._vibrantView = effectView\n\n      effectView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n      effectView.setBlendingMode(NSVisualEffectBlendingModeBehindWindow)\n      effectView.setState(NSVisualEffectStateActive)\n      effectView.setFrame(contentView.bounds())\n      contentView.addSubview_positioned_relativeTo(\n        effectView,\n        NSWindowBelow,\n        null\n      )\n    }\n\n    var vibrancyType = NSVisualEffectMaterialLight\n\n    if (type === 'appearance-based') {\n      vibrancyType = NSVisualEffectMaterialAppearanceBased\n    } else if (type === 'light') {\n      vibrancyType = NSVisualEffectMaterialLight\n    } else if (type === 'dark') {\n      vibrancyType = NSVisualEffectMaterialDark\n    } else if (type === 'titlebar') {\n      vibrancyType = NSVisualEffectMaterialTitlebar\n    } else if (type === 'selection') {\n      vibrancyType = NSVisualEffectMaterialSelection\n    } else if (type === 'menu') {\n      vibrancyType = NSVisualEffectMaterialMenu\n    } else if (type === 'popover') {\n      vibrancyType = NSVisualEffectMaterialPopover\n    } else if (type === 'sidebar') {\n      vibrancyType = NSVisualEffectMaterialSidebar\n    } else if (type === 'medium-light') {\n      vibrancyType = NSVisualEffectMaterialMediumLight\n    } else if (type === 'ultra-dark') {\n      vibrancyType = NSVisualEffectMaterialUltraDark\n    }\n\n    effectView.setMaterial(vibrancyType)\n  }\n\n  browserWindow._setBackgroundColor = function (colorName) {\n    var color = parseHexColor(colorName)\n    webview.setValue_forKey(false, 'drawsBackground')\n    panel.backgroundColor = color\n  }\n\n  browserWindow._invalidate = function () {\n    panel.flushWindow()\n    panel.contentView().setNeedsDisplay(true)\n  }\n\n  browserWindow._setStyleMask = function (on, flag) {\n    var wasMaximizable = browserWindow.isMaximizable()\n    if (on) {\n      panel.setStyleMask(panel.styleMask() | flag)\n    } else {\n      panel.setStyleMask(panel.styleMask() & ~flag)\n    }\n    // Change style mask will make the zoom button revert to default, probably\n    // a bug of Cocoa or macOS.\n    browserWindow.setMaximizable(wasMaximizable)\n  }\n\n  browserWindow._setCollectionBehavior = function (on, flag) {\n    var wasMaximizable = browserWindow.isMaximizable()\n    if (on) {\n      panel.setCollectionBehavior(panel.collectionBehavior() | flag)\n    } else {\n      panel.setCollectionBehavior(panel.collectionBehavior() & ~flag)\n    }\n    // Change collectionBehavior will make the zoom button revert to default,\n    // probably a bug of Cocoa or macOS.\n    browserWindow.setMaximizable(wasMaximizable)\n  }\n\n  browserWindow._showWindowButton = function (button) {\n    var view = panel.standardWindowButton(button)\n    view.superview().addSubview_positioned_relative(view, NSWindowAbove, null)\n  }\n}\n","module.exports = {\n  JS_BRIDGE: '__skpm_sketchBridge',\n  JS_BRIDGE_RESULT_SUCCESS: '__skpm_sketchBridge_success',\n  JS_BRIDGE_RESULT_ERROR: '__skpm_sketchBridge_error',\n  START_MOVING_WINDOW: '__skpm_startMovingWindow',\n  EXECUTE_JAVASCRIPT: '__skpm_executeJS',\n  EXECUTE_JAVASCRIPT_SUCCESS: '__skpm_executeJS_success_',\n  EXECUTE_JAVASCRIPT_ERROR: '__skpm_executeJS_error_',\n}\n","var tagsToFocus =\n  '[\"text\", \"textarea\", \"date\", \"datetime-local\", \"email\", \"number\", \"month\", \"password\", \"search\", \"tel\", \"time\", \"url\", \"week\" ]'\n\nmodule.exports = function (webView, event) {\n  var point = webView.convertPoint_fromView(event.locationInWindow(), null)\n  return (\n    'var el = document.elementFromPoint(' + // get the DOM element that match the event\n    point.x +\n    ', ' +\n    point.y +\n    '); ' +\n    'if (el && el.tagName === \"SELECT\") {' + // select needs special handling\n    '  var event = document.createEvent(\"MouseEvents\");' +\n    '  event.initMouseEvent(\"mousedown\", true, true, window);' +\n    '  el.dispatchEvent(event);' +\n    '} else if (el && ' + // some tags need to be focused instead of clicked\n    tagsToFocus +\n    '.indexOf(el.type) >= 0 && ' +\n    'el.focus' +\n    ') {' +\n    'el.focus();' + // so focus them\n    '} else if (el) {' +\n    'el.dispatchEvent(new Event(\"click\", {bubbles: true}))' + // click the others\n    '}'\n  )\n}\n","var CONSTANTS = require('./constants')\n\nmodule.exports = function (webview, browserWindow) {\n  function executeJavaScript(script, userGesture, callback) {\n    if (typeof userGesture === 'function') {\n      callback = userGesture\n      userGesture = false\n    }\n    var fiber = coscript.createFiber()\n\n    // if the webview is not ready yet, defer the execution until it is\n    if (\n      webview.navigationDelegate().state &&\n      webview.navigationDelegate().state.wasReady == 0\n    ) {\n      return new Promise(function (resolve, reject) {\n        browserWindow.once('ready-to-show', function () {\n          executeJavaScript(script, userGesture, callback)\n            .then(resolve)\n            .catch(reject)\n          fiber.cleanup()\n        })\n      })\n    }\n\n    return new Promise(function (resolve, reject) {\n      var requestId = Math.random()\n\n      browserWindow.webContents.on(\n        CONSTANTS.EXECUTE_JAVASCRIPT_SUCCESS + requestId,\n        function (res) {\n          try {\n            if (callback) {\n              callback(null, res)\n            }\n            resolve(res)\n          } catch (err) {\n            reject(err)\n          }\n          fiber.cleanup()\n        }\n      )\n      browserWindow.webContents.on(\n        CONSTANTS.EXECUTE_JAVASCRIPT_ERROR + requestId,\n        function (err) {\n          try {\n            if (callback) {\n              callback(err)\n              resolve()\n            } else {\n              reject(err)\n            }\n          } catch (err2) {\n            reject(err2)\n          }\n          fiber.cleanup()\n        }\n      )\n\n      webview.evaluateJavaScript_completionHandler(\n        module.exports.wrapScript(script, requestId),\n        null\n      )\n    })\n  }\n\n  return executeJavaScript\n}\n\nmodule.exports.wrapScript = function (script, requestId) {\n  return (\n    'window.' +\n    CONSTANTS.EXECUTE_JAVASCRIPT +\n    '(' +\n    requestId +\n    ', ' +\n    JSON.stringify(script) +\n    ')'\n  )\n}\n\nmodule.exports.injectScript = function (webView) {\n  var source =\n    'window.' +\n    CONSTANTS.EXECUTE_JAVASCRIPT +\n    ' = function(id, script) {' +\n    '  try {' +\n    '    var res = eval(script);' +\n    '    if (res && typeof res.then === \"function\" && typeof res.catch === \"function\") {' +\n    '      res.then(function (res2) {' +\n    '        window.postMessage(\"' +\n    CONSTANTS.EXECUTE_JAVASCRIPT_SUCCESS +\n    '\" + id, res2);' +\n    '      })' +\n    '      .catch(function (err) {' +\n    '        window.postMessage(\"' +\n    CONSTANTS.EXECUTE_JAVASCRIPT_ERROR +\n    '\" + id, err);' +\n    '      })' +\n    '    } else {' +\n    '      window.postMessage(\"' +\n    CONSTANTS.EXECUTE_JAVASCRIPT_SUCCESS +\n    '\" + id, res);' +\n    '    }' +\n    '  } catch (err) {' +\n    '    window.postMessage(\"' +\n    CONSTANTS.EXECUTE_JAVASCRIPT_ERROR +\n    '\" + id, err);' +\n    '  }' +\n    '}'\n  var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n    source,\n    0,\n    true\n  )\n  webView.configuration().userContentController().addUserScript(script)\n}\n","function addEdgeConstraint(edge, subview, view, constant) {\n  view.addConstraint(\n    NSLayoutConstraint.constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(\n      subview,\n      edge,\n      NSLayoutRelationEqual,\n      view,\n      edge,\n      1,\n      constant\n    )\n  )\n}\nmodule.exports = function fitSubviewToView(subview, view, constants) {\n  constants = constants || []\n  subview.setTranslatesAutoresizingMaskIntoConstraints(false)\n\n  addEdgeConstraint(NSLayoutAttributeLeft, subview, view, constants[0] || 0)\n  addEdgeConstraint(NSLayoutAttributeTop, subview, view, constants[1] || 0)\n  addEdgeConstraint(NSLayoutAttributeRight, subview, view, constants[2] || 0)\n  addEdgeConstraint(NSLayoutAttributeBottom, subview, view, constants[3] || 0)\n}\n","/* let's try to match the API from Electron's Browser window\n(https://github.com/electron/electron/blob/master/docs/api/browser-window.md) */\nvar EventEmitter = require('events')\nvar buildBrowserAPI = require('./browser-api')\nvar buildWebAPI = require('./webview-api')\nvar fitSubviewToView = require('./fitSubview')\nvar dispatchFirstClick = require('./dispatch-first-click')\nvar injectClientMessaging = require('./inject-client-messaging')\nvar movableArea = require('./movable-area')\nvar executeJavaScript = require('./execute-javascript')\nvar setDelegates = require('./set-delegates')\n\nfunction BrowserWindow(options) {\n  options = options || {}\n\n  var identifier = options.identifier || String(NSUUID.UUID().UUIDString())\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n\n  var existingBrowserWindow = BrowserWindow.fromId(identifier)\n\n  // if we already have a window opened, reuse it\n  if (existingBrowserWindow) {\n    return existingBrowserWindow\n  }\n\n  var browserWindow = new EventEmitter()\n  browserWindow.id = identifier\n\n  if (options.modal && !options.parent) {\n    throw new Error('A modal needs to have a parent.')\n  }\n\n  // Long-running script\n  var fiber = coscript.createFiber()\n\n  // Window size\n  var width = options.width || 800\n  var height = options.height || 600\n  var mainScreenRect = NSScreen.screens().firstObject().frame()\n  var cocoaBounds = NSMakeRect(\n    typeof options.x !== 'undefined'\n      ? options.x\n      : Math.round((NSWidth(mainScreenRect) - width) / 2),\n    typeof options.y !== 'undefined'\n      ? NSHeight(mainScreenRect) - options.y\n      : Math.round((NSHeight(mainScreenRect) - height) / 2),\n    width,\n    height\n  )\n\n  if (options.titleBarStyle && options.titleBarStyle !== 'default') {\n    options.frame = false\n  }\n\n  var useStandardWindow = options.windowType !== 'textured'\n  var styleMask = NSTitledWindowMask\n\n  // this is commented out because the toolbar doesn't appear otherwise :thinking-face:\n  // if (!useStandardWindow || options.frame === false) {\n  //   styleMask = NSFullSizeContentViewWindowMask\n  // }\n  if (options.minimizable !== false) {\n    styleMask |= NSMiniaturizableWindowMask\n  }\n  if (options.closable !== false) {\n    styleMask |= NSClosableWindowMask\n  }\n  if (options.resizable !== false) {\n    styleMask |= NSResizableWindowMask\n  }\n  if (!useStandardWindow || options.transparent || options.frame === false) {\n    styleMask |= NSTexturedBackgroundWindowMask\n  }\n\n  var panel = NSPanel.alloc().initWithContentRect_styleMask_backing_defer(\n    cocoaBounds,\n    styleMask,\n    NSBackingStoreBuffered,\n    true\n  )\n\n  // this would be nice but it's crashing on macOS 11.0\n  // panel.releasedWhenClosed = true\n\n  var wkwebviewConfig = WKWebViewConfiguration.alloc().init()\n  var webView = WKWebView.alloc().initWithFrame_configuration(\n    CGRectMake(0, 0, options.width || 800, options.height || 600),\n    wkwebviewConfig\n  )\n  injectClientMessaging(webView)\n  webView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n\n  buildBrowserAPI(browserWindow, panel, webView)\n  buildWebAPI(browserWindow, panel, webView)\n  setDelegates(browserWindow, panel, webView, options)\n\n  if (options.windowType === 'desktop') {\n    panel.setLevel(kCGDesktopWindowLevel - 1)\n    // panel.setCanBecomeKeyWindow(false)\n    panel.setCollectionBehavior(\n      NSWindowCollectionBehaviorCanJoinAllSpaces |\n        NSWindowCollectionBehaviorStationary |\n        NSWindowCollectionBehaviorIgnoresCycle\n    )\n  }\n\n  if (\n    typeof options.minWidth !== 'undefined' ||\n    typeof options.minHeight !== 'undefined'\n  ) {\n    browserWindow.setMinimumSize(options.minWidth || 0, options.minHeight || 0)\n  }\n\n  if (\n    typeof options.maxWidth !== 'undefined' ||\n    typeof options.maxHeight !== 'undefined'\n  ) {\n    browserWindow.setMaximumSize(\n      options.maxWidth || 10000,\n      options.maxHeight || 10000\n    )\n  }\n\n  // if (options.focusable === false) {\n  //   panel.setCanBecomeKeyWindow(false)\n  // }\n\n  if (options.transparent || options.frame === false) {\n    panel.titlebarAppearsTransparent = true\n    panel.titleVisibility = NSWindowTitleHidden\n    panel.setOpaque(0)\n    panel.isMovableByWindowBackground = true\n    var toolbar2 = NSToolbar.alloc().initWithIdentifier(\n      'titlebarStylingToolbar'\n    )\n    toolbar2.setShowsBaselineSeparator(false)\n    panel.setToolbar(toolbar2)\n  }\n\n  if (options.titleBarStyle === 'hiddenInset') {\n    var toolbar = NSToolbar.alloc().initWithIdentifier('titlebarStylingToolbar')\n    toolbar.setShowsBaselineSeparator(false)\n    panel.setToolbar(toolbar)\n  }\n\n  if (options.frame === false || !options.useContentSize) {\n    browserWindow.setSize(width, height)\n  }\n\n  if (options.center) {\n    browserWindow.center()\n  }\n\n  if (options.alwaysOnTop) {\n    browserWindow.setAlwaysOnTop(true)\n  }\n\n  if (options.fullscreen) {\n    browserWindow.setFullScreen(true)\n  }\n  browserWindow.setFullScreenable(!!options.fullscreenable)\n\n  let title = options.title\n  if (options.frame === false) {\n    title = undefined\n  } else if (\n    typeof title === 'undefined' &&\n    typeof __command !== 'undefined' &&\n    __command.pluginBundle()\n  ) {\n    title = __command.pluginBundle().name()\n  }\n\n  if (title) {\n    browserWindow.setTitle(title)\n  }\n\n  var backgroundColor = options.backgroundColor\n  if (options.transparent) {\n    backgroundColor = NSColor.clearColor()\n  }\n  if (!backgroundColor && options.frame === false && options.vibrancy) {\n    backgroundColor = NSColor.clearColor()\n  }\n\n  browserWindow._setBackgroundColor(\n    backgroundColor || NSColor.windowBackgroundColor()\n  )\n\n  if (options.hasShadow === false) {\n    browserWindow.setHasShadow(false)\n  }\n\n  if (typeof options.opacity !== 'undefined') {\n    browserWindow.setOpacity(options.opacity)\n  }\n\n  options.webPreferences = options.webPreferences || {}\n\n  webView\n    .configuration()\n    .preferences()\n    .setValue_forKey(\n      options.webPreferences.devTools !== false,\n      'developerExtrasEnabled'\n    )\n  webView\n    .configuration()\n    .preferences()\n    .setValue_forKey(\n      options.webPreferences.javascript !== false,\n      'javaScriptEnabled'\n    )\n  webView\n    .configuration()\n    .preferences()\n    .setValue_forKey(!!options.webPreferences.plugins, 'plugInsEnabled')\n  webView\n    .configuration()\n    .preferences()\n    .setValue_forKey(\n      options.webPreferences.minimumFontSize || 0,\n      'minimumFontSize'\n    )\n\n  if (options.webPreferences.zoomFactor) {\n    webView.setMagnification(options.webPreferences.zoomFactor)\n  }\n\n  var contentView = panel.contentView()\n\n  if (options.frame !== false) {\n    webView.setFrame(contentView.bounds())\n    contentView.addSubview(webView)\n  } else {\n    // In OSX 10.10, adding subviews to the root view for the NSView hierarchy\n    // produces warnings. To eliminate the warnings, we resize the contentView\n    // to fill the window, and add subviews to that.\n    // http://crbug.com/380412\n    contentView.setAutoresizingMask(NSViewWidthSizable | NSViewHeightSizable)\n    fitSubviewToView(contentView, contentView.superview())\n\n    webView.setFrame(contentView.bounds())\n    contentView.addSubview(webView)\n\n    // The fullscreen button should always be hidden for frameless window.\n    if (panel.standardWindowButton(NSWindowFullScreenButton)) {\n      panel.standardWindowButton(NSWindowFullScreenButton).setHidden(true)\n    }\n\n    if (!options.titleBarStyle || options.titleBarStyle === 'default') {\n      // Hide the window buttons.\n      panel.standardWindowButton(NSWindowZoomButton).setHidden(true)\n      panel.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true)\n      panel.standardWindowButton(NSWindowCloseButton).setHidden(true)\n\n      // Some third-party macOS utilities check the zoom button's enabled state to\n      // determine whether to show custom UI on hover, so we disable it here to\n      // prevent them from doing so in a frameless app window.\n      panel.standardWindowButton(NSWindowZoomButton).setEnabled(false)\n    }\n  }\n\n  if (options.vibrancy) {\n    browserWindow.setVibrancy(options.vibrancy)\n  }\n\n  // Set maximizable state last to ensure zoom button does not get reset\n  // by calls to other APIs.\n  browserWindow.setMaximizable(options.maximizable !== false)\n\n  panel.setHidesOnDeactivate(options.hidesOnDeactivate !== false)\n\n  if (options.remembersWindowFrame) {\n    panel.setFrameAutosaveName(identifier)\n    panel.setFrameUsingName_force(panel.frameAutosaveName(), false)\n  }\n\n  if (options.acceptsFirstMouse) {\n    browserWindow.on('focus', function (event) {\n      if (event.type() === NSEventTypeLeftMouseDown) {\n        browserWindow.webContents\n          .executeJavaScript(dispatchFirstClick(webView, event))\n          .catch(() => {})\n      }\n    })\n  }\n\n  executeJavaScript.injectScript(webView)\n  movableArea.injectScript(webView)\n  movableArea.setupHandler(browserWindow)\n\n  if (options.show !== false) {\n    browserWindow.show()\n  }\n\n  browserWindow.on('closed', function () {\n    browserWindow._destroyed = true\n    threadDictionary.removeObjectForKey(identifier)\n    var observer = threadDictionary[identifier + '.themeObserver']\n    if (observer) {\n      NSApplication.sharedApplication().removeObserver_forKeyPath(\n        observer,\n        'effectiveAppearance'\n      )\n      threadDictionary.removeObjectForKey(identifier + '.themeObserver')\n    }\n    fiber.cleanup()\n  })\n\n  threadDictionary[identifier] = panel\n\n  fiber.onCleanup(function () {\n    if (!browserWindow._destroyed) {\n      browserWindow.destroy()\n    }\n  })\n\n  return browserWindow\n}\n\nBrowserWindow.fromId = function (identifier) {\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n\n  if (threadDictionary[identifier]) {\n    return BrowserWindow.fromPanel(threadDictionary[identifier], identifier)\n  }\n\n  return undefined\n}\n\nBrowserWindow.fromPanel = function (panel, identifier) {\n  var browserWindow = new EventEmitter()\n  browserWindow.id = identifier\n\n  if (!panel || !panel.contentView) {\n    throw new Error('needs to pass an NSPanel')\n  }\n\n  var webView = null\n  var subviews = panel.contentView().subviews()\n  for (var i = 0; i < subviews.length; i += 1) {\n    if (\n      !webView &&\n      !subviews[i].isKindOfClass(WKInspectorWKWebView) &&\n      subviews[i].isKindOfClass(WKWebView)\n    ) {\n      webView = subviews[i]\n    }\n  }\n\n  if (!webView) {\n    throw new Error('The panel needs to have a webview')\n  }\n\n  buildBrowserAPI(browserWindow, panel, webView)\n  buildWebAPI(browserWindow, panel, webView)\n\n  return browserWindow\n}\n\nmodule.exports = BrowserWindow\n","var CONSTANTS = require('./constants')\n\nmodule.exports = function (webView) {\n  var source =\n    'window.originalPostMessage = window.postMessage;' +\n    'window.postMessage = function(actionName) {' +\n    '  if (!actionName) {' +\n    \"    throw new Error('missing action name')\" +\n    '  }' +\n    '  var id = String(Math.random()).replace(\".\", \"\");' +\n    '    var args = [].slice.call(arguments);' +\n    '    args.unshift(id);' +\n    '  return new Promise(function (resolve, reject) {' +\n    '    window[\"' +\n    CONSTANTS.JS_BRIDGE_RESULT_SUCCESS +\n    '\" + id] = resolve;' +\n    '    window[\"' +\n    CONSTANTS.JS_BRIDGE_RESULT_ERROR +\n    '\" + id] = reject;' +\n    '    window.webkit.messageHandlers.' +\n    CONSTANTS.JS_BRIDGE +\n    '.postMessage(JSON.stringify(args));' +\n    '  });' +\n    '}'\n  var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n    source,\n    0,\n    true\n  )\n  webView.configuration().userContentController().addUserScript(script)\n}\n","var CONSTANTS = require('./constants')\n\nmodule.exports.injectScript = function (webView) {\n  var source =\n    '(function () {' +\n    \"document.addEventListener('mousedown', onMouseDown);\" +\n    '' +\n    'function shouldDrag(target) {' +\n    '  if (!target || (target.dataset || {}).appRegion === \"no-drag\") { return false }' +\n    '  if ((target.dataset || {}).appRegion === \"drag\") { return true }' +\n    '  return shouldDrag(target.parentElement)' +\n    '};' +\n    '' +\n    'function onMouseDown(e) {' +\n    '  if (e.button !== 0 || !shouldDrag(e.target)) { return }' +\n    '  window.postMessage(\"' +\n    CONSTANTS.START_MOVING_WINDOW +\n    '\");' +\n    '};' +\n    '})()'\n  var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n    source,\n    0,\n    true\n  )\n  webView.configuration().userContentController().addUserScript(script)\n}\n\nmodule.exports.setupHandler = function (browserWindow) {\n  var initialMouseLocation = null\n  var initialWindowPosition = null\n  var interval = null\n\n  function moveWindow() {\n    // if the user released the button, stop moving the window\n    if (!initialWindowPosition || NSEvent.pressedMouseButtons() !== 1) {\n      clearInterval(interval)\n      initialMouseLocation = null\n      initialWindowPosition = null\n      return\n    }\n\n    var mouse = NSEvent.mouseLocation()\n    browserWindow.setPosition(\n      initialWindowPosition.x + (mouse.x - initialMouseLocation.x),\n      initialWindowPosition.y + (initialMouseLocation.y - mouse.y), // y is inverted\n      false\n    )\n  }\n\n  browserWindow.webContents.on(CONSTANTS.START_MOVING_WINDOW, function () {\n    initialMouseLocation = NSEvent.mouseLocation()\n    var position = browserWindow.getPosition()\n    initialWindowPosition = {\n      x: position[0],\n      y: position[1],\n    }\n\n    interval = setInterval(moveWindow, 1000 / 60) // 60 fps\n  })\n}\n","module.exports = function (webArguments) {\n  var args = null\n  try {\n    args = JSON.parse(webArguments)\n  } catch (e) {\n    // malformed arguments\n  }\n\n  if (\n    !args ||\n    !args.constructor ||\n    args.constructor !== Array ||\n    args.length == 0\n  ) {\n    return null\n  }\n\n  return args\n}\n","var ObjCClass = require('mocha-js-delegate')\nvar parseWebArguments = require('./parseWebArguments')\nvar CONSTANTS = require('./constants')\n\n// We create one ObjC class for ourselves here\nvar WindowDelegateClass\nvar NavigationDelegateClass\nvar WebScriptHandlerClass\nvar ThemeObserverClass\n\n// TODO: events\n// - 'page-favicon-updated'\n// - 'new-window'\n// - 'did-navigate-in-page'\n// - 'will-prevent-unload'\n// - 'crashed'\n// - 'unresponsive'\n// - 'responsive'\n// - 'destroyed'\n// - 'before-input-event'\n// - 'certificate-error'\n// - 'found-in-page'\n// - 'media-started-playing'\n// - 'media-paused'\n// - 'did-change-theme-color'\n// - 'update-target-url'\n// - 'cursor-changed'\n// - 'context-menu'\n// - 'select-bluetooth-device'\n// - 'paint'\n// - 'console-message'\n\nmodule.exports = function (browserWindow, panel, webview, options) {\n  if (!ThemeObserverClass) {\n    ThemeObserverClass = new ObjCClass({\n      utils: null,\n\n      'observeValueForKeyPath:ofObject:change:context:': function (\n        keyPath,\n        object,\n        change\n      ) {\n        const newAppearance = change[NSKeyValueChangeNewKey]\n        const isDark =\n          String(\n            newAppearance.bestMatchFromAppearancesWithNames([\n              'NSAppearanceNameAqua',\n              'NSAppearanceNameDarkAqua',\n            ])\n          ) === 'NSAppearanceNameDarkAqua'\n\n        this.utils.executeJavaScript(\n          \"document.body.classList.remove('__skpm-\" +\n            (isDark ? 'light' : 'dark') +\n            \"'); document.body.classList.add('__skpm-\" +\n            (isDark ? 'dark' : 'light') +\n            \"')\"\n        )\n      },\n    })\n  }\n\n  if (!WindowDelegateClass) {\n    WindowDelegateClass = new ObjCClass({\n      utils: null,\n      panel: null,\n\n      'windowDidResize:': function () {\n        this.utils.emit('resize')\n      },\n\n      'windowDidMiniaturize:': function () {\n        this.utils.emit('minimize')\n      },\n\n      'windowDidDeminiaturize:': function () {\n        this.utils.emit('restore')\n      },\n\n      'windowDidEnterFullScreen:': function () {\n        this.utils.emit('enter-full-screen')\n      },\n\n      'windowDidExitFullScreen:': function () {\n        this.utils.emit('leave-full-screen')\n      },\n\n      'windowDidMove:': function () {\n        this.utils.emit('move')\n        this.utils.emit('moved')\n      },\n\n      'windowShouldClose:': function () {\n        var shouldClose = 1\n        this.utils.emit('close', {\n          get defaultPrevented() {\n            return !shouldClose\n          },\n          preventDefault: function () {\n            shouldClose = 0\n          },\n        })\n        return shouldClose\n      },\n\n      'windowWillClose:': function () {\n        this.utils.emit('closed')\n      },\n\n      'windowDidBecomeKey:': function () {\n        this.utils.emit('focus', this.panel.currentEvent())\n      },\n\n      'windowDidResignKey:': function () {\n        this.utils.emit('blur')\n      },\n    })\n  }\n\n  if (!NavigationDelegateClass) {\n    NavigationDelegateClass = new ObjCClass({\n      state: {\n        wasReady: 0,\n      },\n      utils: null,\n\n      // // Called when the web view begins to receive web content.\n      'webView:didCommitNavigation:': function (webView) {\n        this.utils.emit('will-navigate', {}, String(String(webView.URL())))\n      },\n\n      // // Called when web content begins to load in a web view.\n      'webView:didStartProvisionalNavigation:': function () {\n        this.utils.emit('did-start-navigation')\n        this.utils.emit('did-start-loading')\n      },\n\n      // Called when a web view receives a server redirect.\n      'webView:didReceiveServerRedirectForProvisionalNavigation:': function () {\n        this.utils.emit('did-get-redirect-request')\n      },\n\n      // // Called when the web view needs to respond to an authentication challenge.\n      // 'webView:didReceiveAuthenticationChallenge:completionHandler:': function(\n      //   webView,\n      //   challenge,\n      //   completionHandler\n      // ) {\n      //   function callback(username, password) {\n      //     completionHandler(\n      //       0,\n      //       NSURLCredential.credentialWithUser_password_persistence(\n      //         username,\n      //         password,\n      //         1\n      //       )\n      //     )\n      //   }\n      //   var protectionSpace = challenge.protectionSpace()\n      //   this.utils.emit(\n      //     'login',\n      //     {},\n      //     {\n      //       method: String(protectionSpace.authenticationMethod()),\n      //       url: 'not implemented', // TODO:\n      //       referrer: 'not implemented', // TODO:\n      //     },\n      //     {\n      //       isProxy: !!protectionSpace.isProxy(),\n      //       scheme: String(protectionSpace.protocol()),\n      //       host: String(protectionSpace.host()),\n      //       port: Number(protectionSpace.port()),\n      //       realm: String(protectionSpace.realm()),\n      //     },\n      //     callback\n      //   )\n      // },\n\n      // Called when an error occurs during navigation.\n      // 'webView:didFailNavigation:withError:': function(\n      //   webView,\n      //   navigation,\n      //   error\n      // ) {},\n\n      // Called when an error occurs while the web view is loading content.\n      'webView:didFailProvisionalNavigation:withError:': function (\n        webView,\n        navigation,\n        error\n      ) {\n        this.utils.emit('did-fail-load', error)\n      },\n\n      // Called when the navigation is complete.\n      'webView:didFinishNavigation:': function () {\n        if (this.state.wasReady == 0) {\n          this.state.wasReady = 1\n          this.utils.emitBrowserEvent('ready-to-show')\n        }\n        this.utils.emit('did-navigate')\n        this.utils.emit('did-frame-navigate')\n        this.utils.emit('did-stop-loading')\n        this.utils.emit('did-finish-load')\n        this.utils.emit('did-frame-finish-load')\n      },\n\n      // Called when the web view’s web content process is terminated.\n      'webViewWebContentProcessDidTerminate:': function () {\n        this.utils.emit('dom-ready')\n      },\n\n      // Decides whether to allow or cancel a navigation.\n      // webView:decidePolicyForNavigationAction:decisionHandler:\n\n      // Decides whether to allow or cancel a navigation after its response is known.\n      // webView:decidePolicyForNavigationResponse:decisionHandler:\n    })\n  }\n\n  if (!WebScriptHandlerClass) {\n    WebScriptHandlerClass = new ObjCClass({\n      utils: null,\n      'userContentController:didReceiveScriptMessage:': function (_, message) {\n        var args = this.utils.parseWebArguments(String(message.body()))\n        if (!args) {\n          return\n        }\n        if (!args[0] || typeof args[0] !== 'string') {\n          return\n        }\n        args[0] = String(args[0])\n\n        this.utils.emit.apply(this, args)\n      },\n    })\n  }\n\n  var themeObserver = ThemeObserverClass.new({\n    utils: {\n      executeJavaScript(script) {\n        webview.evaluateJavaScript_completionHandler(script, null)\n      },\n    },\n  })\n\n  var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n    \"document.addEventListener('DOMContentLoaded', function() { document.body.classList.add('__skpm-\" +\n      (typeof MSTheme !== 'undefined' && MSTheme.sharedTheme().isDark()\n        ? 'dark'\n        : 'light') +\n      \"') }, false)\",\n    0,\n    true\n  )\n  webview.configuration().userContentController().addUserScript(script)\n\n  NSApplication.sharedApplication().addObserver_forKeyPath_options_context(\n    themeObserver,\n    'effectiveAppearance',\n    NSKeyValueObservingOptionNew,\n    null\n  )\n\n  var threadDictionary = NSThread.mainThread().threadDictionary()\n  threadDictionary[browserWindow.id + '.themeObserver'] = themeObserver\n\n  var navigationDelegate = NavigationDelegateClass.new({\n    utils: {\n      setTitle: browserWindow.setTitle.bind(browserWindow),\n      emitBrowserEvent() {\n        try {\n          browserWindow.emit.apply(browserWindow, arguments)\n        } catch (err) {\n          if (\n            typeof process !== 'undefined' &&\n            process.listenerCount &&\n            process.listenerCount('uncaughtException')\n          ) {\n            process.emit('uncaughtException', err, 'uncaughtException')\n          } else {\n            console.error(err)\n            throw err\n          }\n        }\n      },\n      emit() {\n        try {\n          browserWindow.webContents.emit.apply(\n            browserWindow.webContents,\n            arguments\n          )\n        } catch (err) {\n          if (\n            typeof process !== 'undefined' &&\n            process.listenerCount &&\n            process.listenerCount('uncaughtException')\n          ) {\n            process.emit('uncaughtException', err, 'uncaughtException')\n          } else {\n            console.error(err)\n            throw err\n          }\n        }\n      },\n    },\n    state: {\n      wasReady: 0,\n    },\n  })\n\n  webview.setNavigationDelegate(navigationDelegate)\n\n  var webScriptHandler = WebScriptHandlerClass.new({\n    utils: {\n      emit(id, type) {\n        if (!type) {\n          webview.evaluateJavaScript_completionHandler(\n            CONSTANTS.JS_BRIDGE_RESULT_SUCCESS + id + '()',\n            null\n          )\n          return\n        }\n\n        var args = []\n        for (var i = 2; i < arguments.length; i += 1) args.push(arguments[i])\n\n        var listeners = browserWindow.webContents.listeners(type)\n\n        Promise.all(\n          listeners.map(function (l) {\n            return Promise.resolve().then(function () {\n              return l.apply(l, args)\n            })\n          })\n        )\n          .then(function (res) {\n            webview.evaluateJavaScript_completionHandler(\n              CONSTANTS.JS_BRIDGE_RESULT_SUCCESS +\n                id +\n                '(' +\n                JSON.stringify(res) +\n                ')',\n              null\n            )\n          })\n          .catch(function (err) {\n            webview.evaluateJavaScript_completionHandler(\n              CONSTANTS.JS_BRIDGE_RESULT_ERROR +\n                id +\n                '(' +\n                JSON.stringify(err) +\n                ')',\n              null\n            )\n          })\n      },\n      parseWebArguments: parseWebArguments,\n    },\n  })\n\n  webview\n    .configuration()\n    .userContentController()\n    .addScriptMessageHandler_name(webScriptHandler, CONSTANTS.JS_BRIDGE)\n\n  var utils = {\n    emit() {\n      try {\n        browserWindow.emit.apply(browserWindow, arguments)\n      } catch (err) {\n        if (\n          typeof process !== 'undefined' &&\n          process.listenerCount &&\n          process.listenerCount('uncaughtException')\n        ) {\n          process.emit('uncaughtException', err, 'uncaughtException')\n        } else {\n          console.error(err)\n          throw err\n        }\n      }\n    },\n  }\n  if (options.modal) {\n    // find the window of the document\n    var msdocument\n    if (options.parent.type === 'Document') {\n      msdocument = options.parent.sketchObject\n    } else {\n      msdocument = options.parent\n    }\n    if (msdocument && String(msdocument.class()) === 'MSDocumentData') {\n      // we only have an MSDocumentData instead of a MSDocument\n      // let's try to get back to the MSDocument\n      msdocument = msdocument.delegate()\n    }\n    utils.parentWindow = msdocument.windowForSheet()\n  }\n\n  var windowDelegate = WindowDelegateClass.new({\n    utils: utils,\n    panel: panel,\n  })\n\n  panel.setDelegate(windowDelegate)\n}\n","var EventEmitter = require('events')\nvar executeJavaScript = require('./execute-javascript')\n\n// let's try to match https://github.com/electron/electron/blob/master/docs/api/web-contents.md\nmodule.exports = function buildAPI(browserWindow, panel, webview) {\n  var webContents = new EventEmitter()\n\n  webContents.loadURL = browserWindow.loadURL\n\n  webContents.loadFile = function (/* filePath */) {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n\n  webContents.downloadURL = function (/* filePath */) {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n\n  webContents.getURL = function () {\n    return String(webview.URL())\n  }\n\n  webContents.getTitle = function () {\n    return String(webview.title())\n  }\n\n  webContents.isDestroyed = function () {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n\n  webContents.focus = browserWindow.focus\n  webContents.isFocused = browserWindow.isFocused\n\n  webContents.isLoading = function () {\n    return !!webview.loading()\n  }\n\n  webContents.isLoadingMainFrame = function () {\n    // TODO:\n    return !!webview.loading()\n  }\n\n  webContents.isWaitingForResponse = function () {\n    return !webview.loading()\n  }\n\n  webContents.stop = function () {\n    webview.stopLoading()\n  }\n  webContents.reload = function () {\n    webview.reload()\n  }\n  webContents.reloadIgnoringCache = function () {\n    webview.reloadFromOrigin()\n  }\n  webContents.canGoBack = function () {\n    return !!webview.canGoBack()\n  }\n  webContents.canGoForward = function () {\n    return !!webview.canGoForward()\n  }\n  webContents.canGoToOffset = function (offset) {\n    return !!webview.backForwardList().itemAtIndex(offset)\n  }\n  webContents.clearHistory = function () {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.goBack = function () {\n    webview.goBack()\n  }\n  webContents.goForward = function () {\n    webview.goForward()\n  }\n  webContents.goToIndex = function (index) {\n    var backForwardList = webview.backForwardList()\n    var backList = backForwardList.backList()\n    var backListLength = backList.count()\n    if (backListLength > index) {\n      webview.loadRequest(NSURLRequest.requestWithURL(backList[index]))\n      return\n    }\n    var forwardList = backForwardList.forwardList()\n    if (forwardList.count() > index - backListLength) {\n      webview.loadRequest(\n        NSURLRequest.requestWithURL(forwardList[index - backListLength])\n      )\n      return\n    }\n    throw new Error('Cannot go to index ' + index)\n  }\n  webContents.goToOffset = function (offset) {\n    if (!webContents.canGoToOffset(offset)) {\n      throw new Error('Cannot go to offset ' + offset)\n    }\n    webview.loadRequest(\n      NSURLRequest.requestWithURL(webview.backForwardList().itemAtIndex(offset))\n    )\n  }\n  webContents.isCrashed = function () {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.setUserAgent = function (/* userAgent */) {\n    // TODO:\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.getUserAgent = function () {\n    const userAgent = webview.customUserAgent()\n    return userAgent ? String(userAgent) : undefined\n  }\n  webContents.insertCSS = function (css) {\n    var source =\n      \"var style = document.createElement('style'); style.innerHTML = \" +\n      css.replace(/\"/, '\\\\\"') +\n      '; document.head.appendChild(style);'\n    var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n      source,\n      0,\n      true\n    )\n    webview.configuration().userContentController().addUserScript(script)\n  }\n  webContents.insertJS = function (source) {\n    var script = WKUserScript.alloc().initWithSource_injectionTime_forMainFrameOnly(\n      source,\n      0,\n      true\n    )\n    webview.configuration().userContentController().addUserScript(script)\n  }\n  webContents.executeJavaScript = executeJavaScript(webview, browserWindow)\n  webContents.setIgnoreMenuShortcuts = function () {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.setAudioMuted = function (/* muted */) {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.isAudioMuted = function () {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.setZoomFactor = function (factor) {\n    webview.setMagnification_centeredAtPoint(factor, CGPointMake(0, 0))\n  }\n  webContents.getZoomFactor = function (callback) {\n    callback(Number(webview.magnification()))\n  }\n  webContents.setZoomLevel = function (level) {\n    // eslint-disable-next-line no-restricted-properties\n    webContents.setZoomFactor(Math.pow(1.2, level))\n  }\n  webContents.getZoomLevel = function (callback) {\n    // eslint-disable-next-line no-restricted-properties\n    callback(Math.log(Number(webview.magnification())) / Math.log(1.2))\n  }\n  webContents.setVisualZoomLevelLimits = function (/* minimumLevel, maximumLevel */) {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n  webContents.setLayoutZoomLevelLimits = function (/* minimumLevel, maximumLevel */) {\n    // TODO:??\n    console.warn(\n      'Not implemented yet, please open a PR on https://github.com/skpm/sketch-module-web-view :)'\n    )\n  }\n\n  // TODO:\n  // webContents.undo = function() {\n  //   webview.undoManager().undo()\n  // }\n  // webContents.redo = function() {\n  //   webview.undoManager().redo()\n  // }\n  // webContents.cut = webview.cut\n  // webContents.copy = webview.copy\n  // webContents.paste = webview.paste\n  // webContents.pasteAndMatchStyle = webview.pasteAsRichText\n  // webContents.delete = webview.delete\n  // webContents.replace = webview.replaceSelectionWithText\n\n  webContents.send = function () {\n    const script =\n      'window.postMessage({' +\n      'isSketchMessage: true,' +\n      \"origin: '\" +\n      String(__command.identifier()) +\n      \"',\" +\n      'args: ' +\n      JSON.stringify([].slice.call(arguments)) +\n      '}, \"*\")'\n    webview.evaluateJavaScript_completionHandler(script, null)\n  }\n\n  webContents.getNativeWebview = function () {\n    return webview\n  }\n\n  browserWindow.webContents = webContents\n}\n","/* globals NSThread */\nvar threadDictionary = NSThread.mainThread().threadDictionary()\n\nmodule.exports.getWebview = function (identifier) {\n  return require('./lib').fromId(identifier) // eslint-disable-line\n}\n\nmodule.exports.isWebviewPresent = function isWebviewPresent(identifier) {\n  return !!threadDictionary[identifier]\n}\n\nmodule.exports.sendToWebview = function sendToWebview(identifier, evalString) {\n  if (!module.exports.isWebviewPresent(identifier)) {\n    return\n  }\n\n  var panel = threadDictionary[identifier]\n  var webview = null\n  var subviews = panel.contentView().subviews()\n  for (var i = 0; i < subviews.length; i += 1) {\n    if (\n      !webview &&\n      !subviews[i].isKindOfClass(WKInspectorWKWebView) &&\n      subviews[i].isKindOfClass(WKWebView)\n    ) {\n      webview = subviews[i]\n    }\n  }\n\n  if (!webview || !webview.evaluateJavaScript_completionHandler) {\n    throw new Error('Webview ' + identifier + ' not found')\n  }\n\n  webview.evaluateJavaScript_completionHandler(evalString, null)\n}\n","module.exports = \"file://\" + String(context.scriptPath).split(\".sketchplugin/Contents/Sketch\")[0] + \".sketchplugin/Contents/Resources/_webpack_resources/fb8fc0a1acb205f2facfdc5262277a78.html\";","Mocha.sharedRuntime().loadFrameworkWithName(\"CoreFoundation\");\n\nimport BrowserWindow from \"sketch-module-web-view\";\nimport { getWebview } from \"sketch-module-web-view/remote\";\n\nconst webviewIdentifier = \"dynamicPalette.webview\";\n\n// #region Node modules\nimport {\n    argbFromHex,\n    hexFromArgb,\n    themeFromSourceColor,\n    applyTheme,\n    TonalPalette,\n    HCT,\n    themeFromImage,\n} from \"@material/material-color-utilities\";\nimport hexRgb from \"hex-rgb\";\nvar cd = require(\"color-difference\");\nimport colorcolor from \"colorcolor\";\nimport isHexcolor from \"is-hexcolor\";\n\nimport { resolve } from \"path\";\nimport rgbHex from \"rgb-hex\";\nconst fs = require(\"@skpm/fs\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst desktopDir = path.join(os.homedir(), \"Desktop\");\n// #endregion Node modules\n\n// #region Sketch Items\nconst sketch = require(\"sketch\");\nconst Swatch = sketch.Swatch;\nconst Style = require(\"sketch/dom\").Style;\n\n// Document variables\nvar doc = context.document;\nvar document = sketch.getSelectedDocument();\nvar firstSelectedLayer = document.selectedLayers.layers[0];\nvar artboard = sketch.Artboard;\nvar data = document.sketchObject.documentData();\n// #endregion\n\n// #region Styles Variables\nvar layerStyles = document.sharedLayerStyles;\nvar textStyles = document.sharedTextStyles;\nvar arrayLayerStyleIDs = layerStyles.map((sharedstyle) => sharedstyle[\"id\"]);\nvar arrayLayerStyleNames = layerStyles.map(\n    (sharedstyle) => sharedstyle[\"name\"]\n);\nvar arrayLayerStyleStyles = layerStyles.map(\n    (sharedstyle) => sharedstyle[\"style\"]\n);\nvar layerStylesOrdered = [...document.sharedLayerStyles].sort(\n    (left, right) => left.name > right.name\n);\nvar insertedLayerStyles = [];\n\nvar arrayTextStyleIDs = textStyles.map((sharedstyle) => sharedstyle[\"id\"]);\nvar arrayTextStyleNames = textStyles.map((sharedstyle) => sharedstyle[\"name\"]);\nvar arrayTextStyleStyles = textStyles.map(\n    (sharedstyle) => sharedstyle[\"style\"]\n);\nvar textStylesOrdered = [...document.sharedTextStyles].sort(\n    (left, right) => left.name > right.name\n);\nvar stylesString = JSON.stringify(layerStylesOrdered);\nvar textString = JSON.stringify(textStylesOrdered);\nvar insertedTextStyles = [];\n// #endregion\n\nexport default function () {\n    /* Create the webview with the sizes */\n    const options = {\n        identifier: webviewIdentifier,\n        width: 421,\n        height: 570,\n        show: false,\n    };\n\n    const browserWindow = new BrowserWindow(options);\n    // only show the window when the page has loaded to avoid a white flash\n    browserWindow.once(\"ready-to-show\", () => {\n        // Send the list of Text Styles to the plugin webview\n        try {\n            browserWindow.show();\n            // browserWindow.loadURL(require(\"./resources/webview.html\"));\n        } catch (createWebViewErr) {\n            console.log(createWebViewErr);\n        }\n    });\n\n    const webContents = browserWindow.webContents;\n\n    // add a handler for a call from web content's javascript\n    webContents.on(\"nativeLog\", (parameters) => {\n        try {\n            // #region Theme\n            var theme;\n            let value = rgbHex(parameters.mainColor);\n\n            // #region Theme\n            theme = themeFromSourceColor(argbFromHex(value), [\n                // {\n                //     name: \"custom-1\",\n                //     value: argbFromHex(\"#ff0000\"),\n                //     blend: true,\n                // },\n                {},\n            ]);\n            // #endregion Theme\n\n            // #region Colors and palettes creation\n            const primary = [\n                \"Primary\",\n                hexFromArgb(theme.schemes.light.primary),\n            ];\n            const secondary = [\n                \"Secondary\",\n                hexFromArgb(theme.schemes.light.secondary),\n            ];\n            const tertiary = [\n                \"Tertiary\",\n                hexFromArgb(theme.schemes.light.tertiary),\n            ];\n            const error = [\"Error\", hexFromArgb(theme.schemes.light.error)];\n            const neutral = [\n                \"Neutral\",\n                hexFromArgb(theme.schemes.light.neutral),\n            ];\n            const neutralVariant = [\n                \"Neutral Variant\",\n                hexFromArgb(theme.schemes.light.neutralVariant),\n            ];\n            const shadow = [\"Shadow\", hexFromArgb(theme.schemes.light.shadow)];\n            const scrim = [\"Scrim\", hexFromArgb(theme.schemes.light.scrim)];\n            const surface = [\n                \"Surface\",\n                hexFromArgb(theme.schemes.light.surface),\n            ];\n\n            const primaryPalette = colorPalette(primary[1], primary[0]);\n            paletteToColorVariables(primaryPalette, \"Primary\");\n            const secondaryPalette = colorPalette(secondary[1], secondary[0]);\n            paletteToColorVariables(secondaryPalette, \"Secondary\");\n            const tertiaryPalette = colorPalette(tertiary[1], tertiary[0]);\n\n            paletteToColorVariables(tertiaryPalette, \"Tertiary\");\n            const errorPalette = colorPalette(error[1], error[0]);\n            paletteToColorVariables(errorPalette, \"Error\");\n            const neutralPalette = colorPalette(neutral[1], neutral[0]);\n            paletteToColorVariables(neutralPalette, \"Neutral\");\n            const neutralVariantPalette = colorPalette(\n                neutralVariant[1],\n                neutralVariant[0]\n            );\n            paletteToColorVariables(neutralVariantPalette, \"Neutral Variant\");\n            const shadowPalette = colorPalette(shadow[1], shadow[0]);\n            paletteToColorVariables(shadowPalette, \"Shadow\");\n            const scrimPalette = colorPalette(scrim[1], scrim[0]);\n            paletteToColorVariables(scrimPalette, \"Scrim\");\n            const surfacePalette = colorPalette(surface[1], surface[0]);\n            paletteToColorVariables(surfacePalette, \"Surface\");\n            // #endregion Colors and palettes creation\n\n            // #region Light theme\n            const lightTheme_primary = hexFromArgb(theme.schemes.light.primary);\n            const lightTheme_onPrimary = hexFromArgb(\n                theme.schemes.light.onPrimary\n            );\n            const lightTheme_primaryContainer = hexFromArgb(\n                theme.schemes.light.primaryContainer\n            );\n            const lightTheme_onPrimaryContainer = hexFromArgb(\n                theme.schemes.light.onPrimaryContainer\n            );\n            const lightTheme_secondary = hexFromArgb(\n                theme.schemes.light.secondary\n            );\n            const lightTheme_onSecondary = hexFromArgb(\n                theme.schemes.light.onSecondary\n            );\n            const lightTheme_secondaryContainer = hexFromArgb(\n                theme.schemes.light.secondaryContainer\n            );\n            const lightTheme_onSecondaryContainer = hexFromArgb(\n                theme.schemes.light.onSecondaryContainer\n            );\n            const lightTheme_tertiary = hexFromArgb(\n                theme.schemes.light.tertiary\n            );\n            const lightTheme_onTertiary = hexFromArgb(\n                theme.schemes.light.onTertiary\n            );\n            const lightTheme_tertiaryContainer = hexFromArgb(\n                theme.schemes.light.tertiaryContainer\n            );\n            const lightTheme_onTertiaryContainer = hexFromArgb(\n                theme.schemes.light.onTertiaryContainer\n            );\n            const lightTheme_error = hexFromArgb(theme.schemes.light.error);\n            const lightTheme_onError = hexFromArgb(theme.schemes.light.onError);\n            const lightTheme_errorContainer = hexFromArgb(\n                theme.schemes.light.errorContainer\n            );\n            const lightTheme_onErrorContainer = hexFromArgb(\n                theme.schemes.light.onErrorContainer\n            );\n            const lightTheme_background = hexFromArgb(\n                theme.schemes.light.background\n            );\n            const lightTheme_onbackground = hexFromArgb(\n                theme.schemes.light.onbackground\n            );\n            const lightTheme_surface = hexFromArgb(theme.schemes.light.surface);\n            const lightTheme_onSurface = hexFromArgb(\n                theme.schemes.light.onSurface\n            );\n            const lightTheme_outline = hexFromArgb(\n                theme.schemes.light.onbackground\n            );\n            const lightTheme_surfacevariant = hexFromArgb(\n                theme.schemes.light.surfaceVariant\n            );\n            const lightTheme_onSurfaceVariant = hexFromArgb(\n                theme.schemes.light.onSurfaceVariant\n            );\n            const lightTheme_shadow = hexFromArgb(theme.schemes.light.shadow);\n            const lightTheme_scrim = hexFromArgb(theme.schemes.light.scrim);\n            const lightTheme_inverseSurface = hexFromArgb(\n                theme.schemes.light.inverseSurface\n            );\n            const lightTheme_inverseOnSurface = hexFromArgb(\n                theme.schemes.light.inverseOnSurface\n            );\n            const lightTheme_inversePrimary = hexFromArgb(\n                theme.schemes.light.inversePrimary\n            );\n\n            const lightTheme = [\n                [\n                    \"Primary\",\n                    lightTheme_primary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Primary\",\n                ],\n                [\n                    \"onPrimary\",\n                    lightTheme_onPrimary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Neutral\",\n                ],\n                [\n                    \"primaryContainer\",\n                    lightTheme_primaryContainer,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Primary\",\n                ],\n                [\n                    \"onPrimaryContainer\",\n                    lightTheme_onPrimaryContainer,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"secondary\",\n                    lightTheme_secondary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Secondary\",\n                ],\n                [\n                    \"onSecondary\",\n                    lightTheme_onSecondary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"secondaryContainer\",\n                    lightTheme_secondaryContainer,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Secondary\",\n                ],\n                [\n                    \"onSecondaryContainer\",\n                    lightTheme_onSecondaryContainer,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"tertiary\",\n                    lightTheme_tertiary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Tertiary\",\n                ],\n                [\n                    \"onTertiary\",\n                    lightTheme_onTertiary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"tertiaryContainer\",\n                    lightTheme_tertiaryContainer,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Tertiary\",\n                ],\n                [\n                    \"onTertiaryContainer\",\n                    lightTheme_onTertiaryContainer,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"error\",\n                    lightTheme_error,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Error\",\n                ],\n                [\n                    \"onError\",\n                    lightTheme_onError,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Neutral\",\n                ],\n                [\n                    \"errorContainer\",\n                    lightTheme_errorContainer,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Error\",\n                ],\n                [\n                    \"onErrorContainer\",\n                    lightTheme_onErrorContainer,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"background\",\n                    lightTheme_background,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"onbackground\",\n                    lightTheme_onbackground,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Neutral\",\n                ],\n                [\n                    \"surface\",\n                    lightTheme_surface,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Surface\",\n                ],\n                [\n                    \"onSurface\",\n                    lightTheme_onSurface,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Surface\",\n                ],\n                [\n                    \"outline\",\n                    lightTheme_outline,\n                    false,\n                    true,\n                    true,\n                    false,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"surfacevariant\",\n                    lightTheme_surfacevariant,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Surface\",\n                ],\n                [\n                    \"onSurfaceVariant\",\n                    lightTheme_onSurfaceVariant,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Surface\",\n                ],\n                [\n                    \"shadow\",\n                    lightTheme_shadow,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Shadow\",\n                ],\n                // [\"scrim\", lightTheme_scrim,false],\n                [\n                    \"inverseSurface\",\n                    lightTheme_inverseSurface,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Surface\",\n                ],\n                [\n                    \"inverseOnSurface\",\n                    lightTheme_inverseOnSurface,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Surface\",\n                ],\n                [\n                    \"inversePrimary\",\n                    lightTheme_inversePrimary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Primary\",\n                ],\n            ];\n            // #endregion Light Theme\n\n            // #region Dark theme\n            const darkTheme_primary = hexFromArgb(theme.schemes.dark.primary);\n            const darkTheme_onPrimary = hexFromArgb(\n                theme.schemes.dark.onPrimary\n            );\n            const darkTheme_primaryContainer = hexFromArgb(\n                theme.schemes.dark.primaryContainer\n            );\n            const darkTheme_onPrimaryContainer = hexFromArgb(\n                theme.schemes.dark.onPrimaryContainer\n            );\n            const darkTheme_secondary = hexFromArgb(\n                theme.schemes.dark.secondary\n            );\n            const darkTheme_onSecondary = hexFromArgb(\n                theme.schemes.dark.onSecondary\n            );\n            const darkTheme_secondaryContainer = hexFromArgb(\n                theme.schemes.dark.secondaryContainer\n            );\n            const darkTheme_onSecondaryContainer = hexFromArgb(\n                theme.schemes.dark.onSecondaryContainer\n            );\n            const darkTheme_tertiary = hexFromArgb(theme.schemes.dark.tertiary);\n            const darkTheme_onTertiary = hexFromArgb(\n                theme.schemes.dark.onTertiary\n            );\n            const darkTheme_tertiaryContainer = hexFromArgb(\n                theme.schemes.dark.tertiaryContainer\n            );\n            const darkTheme_onTertiaryContainer = hexFromArgb(\n                theme.schemes.dark.onTertiaryContainer\n            );\n            const darkTheme_error = hexFromArgb(theme.schemes.dark.error);\n            const darkTheme_onError = hexFromArgb(theme.schemes.dark.onError);\n            const darkTheme_errorContainer = hexFromArgb(\n                theme.schemes.dark.errorContainer\n            );\n            const darkTheme_onErrorContainer = hexFromArgb(\n                theme.schemes.dark.onErrorContainer\n            );\n            const darkTheme_background = hexFromArgb(\n                theme.schemes.dark.background\n            );\n            const darkTheme_onbackground = hexFromArgb(\n                theme.schemes.dark.onbackground\n            );\n            const darkTheme_surface = hexFromArgb(theme.schemes.dark.surface);\n            const darkTheme_onSurface = hexFromArgb(\n                theme.schemes.dark.onSurface\n            );\n            const darkTheme_outline = hexFromArgb(\n                theme.schemes.dark.onbackground\n            );\n            const darkTheme_surfacevariant = hexFromArgb(\n                theme.schemes.dark.surfaceVariant\n            );\n            const darkTheme_onSurfaceVariant = hexFromArgb(\n                theme.schemes.dark.onSurfaceVariant\n            );\n            const darkTheme_shadow = hexFromArgb(theme.schemes.dark.shadow);\n            const darkTheme_scrim = hexFromArgb(theme.schemes.dark.scrim);\n            const darkTheme_inverseSurface = hexFromArgb(\n                theme.schemes.dark.inverseSurface\n            );\n            const darkTheme_inverseOnSurface = hexFromArgb(\n                theme.schemes.dark.inverseOnSurface\n            );\n            const darkTheme_inversePrimary = hexFromArgb(\n                theme.schemes.dark.inversePrimary\n            );\n\n            const darkTheme = [\n                [\n                    \"Primary\",\n                    darkTheme_primary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Primary\",\n                ],\n                [\n                    \"onPrimary\",\n                    darkTheme_onPrimary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Neutral\",\n                ],\n                [\n                    \"primaryContainer\",\n                    darkTheme_primaryContainer,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Primary\",\n                ],\n                [\n                    \"onPrimaryContainer\",\n                    darkTheme_onPrimaryContainer,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"secondary\",\n                    darkTheme_secondary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Secondary\",\n                ],\n                [\n                    \"onSecondary\",\n                    darkTheme_onSecondary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"secondaryContainer\",\n                    darkTheme_secondaryContainer,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Secondary\",\n                ],\n                [\n                    \"onSecondaryContainer\",\n                    darkTheme_onSecondaryContainer,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"tertiary\",\n                    darkTheme_tertiary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Tertiary\",\n                ],\n                [\n                    \"onTertiary\",\n                    darkTheme_onTertiary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"tertiaryContainer\",\n                    darkTheme_tertiaryContainer,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Tertiary\",\n                ],\n                [\n                    \"onTertiaryContainer\",\n                    darkTheme_onTertiaryContainer,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"error\",\n                    darkTheme_error,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Error\",\n                ],\n                [\n                    \"onError\",\n                    darkTheme_onError,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Neutral\",\n                ],\n                [\n                    \"errorContainer\",\n                    darkTheme_errorContainer,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Error\",\n                ],\n                [\n                    \"onErrorContainer\",\n                    darkTheme_onErrorContainer,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"background\",\n                    darkTheme_background,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"onbackground\",\n                    darkTheme_onbackground,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Neutral\",\n                ],\n                [\n                    \"surface\",\n                    darkTheme_surface,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Surface\",\n                ],\n                [\n                    \"onSurface\",\n                    darkTheme_onSurface,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Surface\",\n                ],\n                [\n                    \"outline\",\n                    darkTheme_outline,\n                    false,\n                    true,\n                    true,\n                    false,\n                    false,\n                    \"Neutral\",\n                ],\n                [\n                    \"surfacevariant\",\n                    darkTheme_surfacevariant,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Surface\",\n                ],\n                [\n                    \"onSurfaceVariant\",\n                    darkTheme_onSurfaceVariant,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Surface\",\n                ],\n                [\n                    \"shadow\",\n                    darkTheme_shadow,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Shadow\",\n                ],\n                // [\"scrim\", darkTheme_scrim,false],\n                [\n                    \"inverseSurface\",\n                    darkTheme_inverseSurface,\n                    true,\n                    false,\n                    true,\n                    false,\n                    false,\n                    \"Surface\",\n                ],\n                [\n                    \"inverseOnSurface\",\n                    darkTheme_inverseOnSurface,\n                    true,\n                    false,\n                    true,\n                    true,\n                    true,\n                    \"Surface\",\n                ],\n                [\n                    \"inversePrimary\",\n                    darkTheme_inversePrimary,\n                    true,\n                    false,\n                    true,\n                    true,\n                    false,\n                    \"Primary\",\n                ],\n            ];\n            // #endregion Dark Theme\n\n            // #region Create Styles\n            // Light and Dark theme arrays presents:\n            // 0 = styleName\n            // 1 = color\n            // 2 = fill\n            // 3 = border\n            // 4 = layer style\n            // 5 = text style\n            // 6 = titles\n            // 7 = palette of reference\n            lightTheme.forEach((style) => {\n                //  If layer style\n                if (style[4]) {\n                    // Fill style\n                    if (style[2]) {\n                        createNewLayerStyle(\n                            style,\n                            \"Light Theme/Fills/\",\n                            false,\n                            style[7]\n                        );\n                    }\n                    //  Border Style\n                    if (style[3]) {\n                        createNewLayerStyle(\n                            style,\n                            \"Light Theme/Borders/\",\n                            true,\n                            style[7]\n                        );\n                    }\n                }\n                //  If text style\n                if (style[5]) {\n                    createNewTextStyle(style, \"Light Theme/\", style[7]);\n                }\n            });\n\n            darkTheme.forEach((style) => {\n                //  If layer style\n                if (style[4]) {\n                    // Fill style\n                    if (style[2]) {\n                        createNewLayerStyle(\n                            style,\n                            \"Dark Theme/Fills/\",\n                            false,\n                            style[7]\n                        );\n                    }\n                    //  Border Style\n                    if (style[3]) {\n                        createNewLayerStyle(\n                            style,\n                            \"Dark Theme/Borders/\",\n                            true,\n                            style[7]\n                        );\n                    }\n                }\n                //  If text style\n                if (style[5]) {\n                    createNewTextStyle(style, \"Dark Theme/\", style[7]);\n                }\n            });\n            // #endregion Create Styles\n\n            // #region Connect Color Variables\n            layerStyles.forEach((layerStyle) => {\n                let styleName = layerStyle.name;\n                let stylePalette = \"\";\n                for (let n = 0; n < insertedLayerStyles.length; n++) {\n                    if (insertedLayerStyles[n][0] === styleName) {\n                        stylePalette = insertedLayerStyles[n][1];\n                        return;\n                    }\n                }\n\n                let styleFillColor = \"\";\n                if (\n                    layerStyle.style.fills[0] !== \"\" &&\n                    layerStyle.style.fills[0] !== undefined\n                ) {\n                    styleFillColor = layerStyle.style.fills[0].color;\n                }\n\n                let styleBorderColor = \"\";\n                if (\n                    layerStyle.style.borders[0] !== \"\" &&\n                    layerStyle.style.borders[0] !== undefined\n                ) {\n                    styleBorderColor = layerStyle.style.borders[0].color;\n                }\n\n                let message = \"Style Name: \" + styleName;\n                message = message + \" - Fill Color: \" + styleFillColor;\n                message = message + \" - Border Color: \" + styleBorderColor;\n                // console.log(message);\n\n                if (styleFillColor !== undefined && styleFillColor !== \"\") {\n                    let colorVariable = matchColorVariables(\n                        styleFillColor,\n                        stylePalette\n                    );\n                    if (colorVariable !== undefined) {\n                        layerStyle.style.fills[0].color =\n                            colorVariable.referencingColor;\n                    }\n                    // console.log(colorVariable);\n                }\n                if (styleBorderColor !== undefined && styleBorderColor !== \"\") {\n                    let colorVariable = matchColorVariables(\n                        styleBorderColor,\n                        styleName\n                    );\n                    if (colorVariable !== undefined) {\n                        layerStyle.style.borders[0].color =\n                            colorVariable.referencingColor;\n                    }\n                    // console.log(colorVariable);\n                    updateLayerStyles();\n                }\n            });\n\n            textStyles.forEach((textStyle) => {\n                let styleName = textStyle.name;\n                let stylePalette = \"\";\n                for (let n = 0; n < insertedTextStyles.length; n++) {\n                    if (insertedTextStyles[n][0] === styleName) {\n                        stylePalette = insertedTextStyles[n][1];\n                        return;\n                    }\n                }\n\n                let styleTextColor = textStyle.style.textColor;\n\n                let colorVariable = matchColorVariables(\n                    styleTextColor,\n                    stylePalette\n                );\n                if (colorVariable !== undefined) {\n                    textStyle.style.textColor = colorVariable.referencingColor;\n                }\n                updateTextStyles();\n            });\n\n            // #endregion Connect Color Variables\n\n            browserWindow.close();\n        } catch (pluginErr) {\n            console.log(pluginErr);\n        }\n    });\n\n    // console.log(JSON.stringify(theme, null, 2));\n\n    function paletteToColorVariables(palette, name) {\n        let arrayColorVarNames = document.swatches.map(\n            (Swatch) => Swatch[\"name\"]\n        );\n        palette.forEach((color) => {\n            let colorName = name + \"/\" + color[0];\n            let newSwatch = Swatch.from({\n                name: colorName,\n                color: color[1],\n            });\n\n            // Generate the new Color Variable if it doesn't exist\n            if (arrayColorVarNames.length > 0) {\n                if (arrayColorVarNames.indexOf(colorName) === -1) {\n                    document.swatches.push(newSwatch);\n                } else {\n                    var existingSwatch =\n                        document.swatches[\n                            arrayColorVarNames.indexOf(colorName)\n                        ];\n                    document.swatches[\n                        arrayColorVarNames.indexOf(colorName)\n                    ].sketchObject.updateWithColor(\n                        MSColor.colorWithHex_alpha(color[1].slice(0, 7), 1)\n                    );\n\n                    let swatchContainer = document.sketchObject\n                        .documentData()\n                        .sharedSwatches();\n\n                    // REFRESHES THE UI\n                    swatchContainer.updateReferencesToSwatch(\n                        existingSwatch.sketchObject\n                    );\n                }\n            } else {\n                document.swatches.push(newSwatch);\n            }\n        });\n    }\n\n    browserWindow.loadURL(require(\"../resources/webview.html\"));\n}\n\nfunction colorPalette(color, name = \"\") {\n    let tones = [100, 99, 95, 90, 80, 70, 60, 50, 40, 30, 20, 10, 0];\n    // let palette = [[name, color]];\n    let palette = [];\n    for (let n = 0; n < tones.length; n++) {\n        let valueName = name + \" \" + tones[n].toString();\n        palette.push([\n            valueName,\n            hexFromArgb(\n                TonalPalette.fromInt(argbFromHex(color)).tone(tones[n])\n            ),\n        ]);\n    }\n    return palette;\n}\n\n// ******************************************************************* //\n// General Styles management functions                                 //\n// ******************************************************************* //\n\nfunction getLayerStyleNameFromID(id) {\n    let styleName = \"\";\n    for (let i = 0; i < arrayLayerStyleNames.length; i++) {\n        if (arrayLayerStyleIDs[i] === id) {\n            styleName = arrayLayerStyleNames[i];\n        }\n    }\n    return styleName;\n}\n\nfunction getTextStyleNameFromID(id) {\n    try {\n        let textStyle = \"\";\n        for (let i = 0; i < arrayTextStyleStyles.length; i++) {\n            if (arrayTextStyleIDs[i] === id) {\n                textStyle = arrayTextStyleStyles[i];\n            }\n        }\n        return textStyle;\n    } catch (getTextStylesStyleFromIDErr) {\n        console.log(getTextStylesStyleFromIDErr);\n    }\n}\n\nfunction getLayerStyleIDFromName(name) {\n    let styleID = \"\";\n    for (let i = 0; i < arrayLayerStyleIDs.length; i++) {\n        if (arrayLayerStyleNames[i] === name) {\n            styleID = arrayLayerStyleIDs[i];\n        }\n    }\n    return styleID;\n}\n\nfunction getTextStyleIDFromName(name) {\n    let styleID = \"\";\n    for (let i = 0; i < arrayTextStyleIDs.length; i++) {\n        if (arrayTextStyleNames[i] === name) {\n            styleID = arrayTextStyleIDs[i];\n        }\n    }\n    return styleID;\n}\n\nfunction matchColorVariables(color, name) {\n    let newColorVariable;\n    name = name.toUpperCase();\n\n    let colorVariables = document.swatches;\n    let colorVariablesNames = [];\n    colorVariables.forEach((variable) => {\n        let variableName = variable.name.toString().toUpperCase();\n        colorVariablesNames.push(variableName);\n    });\n    // console.log(colorVariablesNames);\n    colorVariables.forEach((variable) => {\n        let variableName = variable.name.toString().toUpperCase();\n        let variableColor = variable.color.toString().toUpperCase();\n        color = color.toString().toUpperCase();\n        let variableColorHEX = colorcolor(variableColor, \"hex\");\n        let colorHEX = colorcolor(color, \"hex\");\n\n        let colorMatch = false;\n        if (cd.compare(variableColorHEX, colorHEX) < 3) {\n            colorMatch = true;\n        }\n\n        if (variableName.includes(name) && colorMatch) {\n            newColorVariable = variable;\n        }\n    });\n    return newColorVariable;\n}\n\nfunction checkSubString(str1, str2) {\n    return str1.indexOf(str2);\n}\n\nfunction createNewLayerStyle(\n    styleDetails = [],\n    folder = \"\",\n    border = false,\n    palette = \"\"\n) {\n    try {\n        let styleName = folder + styleDetails[0];\n        let styleColor = styleDetails[1];\n        let borders = [];\n        let fills = [];\n        if (border) {\n            borders = [\n                {\n                    color: styleColor,\n                    fillType: Style.FillType.Color,\n                    position: Style.BorderPosition.Inside,\n                },\n            ];\n        } else {\n            fills = [\n                {\n                    color: styleColor,\n                    fillType: Style.FillType.Color,\n                },\n            ];\n        }\n\n        if (arrayLayerStyleNames.indexOf(styleName) === -1) {\n            // 1. If the style is new\n            let sharedStyle = layerStyles.push({\n                name: styleName,\n                style: {\n                    fills: fills,\n                    borders: borders,\n                },\n                document: document,\n            });\n            insertedLayerStyles.push([sharedStyle.name, palette]);\n            updateLayerStyles();\n\n            return sharedStyle;\n        } else {\n            let existingStyleID = getLayerStyleIDFromName(styleName);\n            if (existingStyleID !== \"\") {\n                let localIndex = arrayLayerStyleIDs.indexOf(existingStyleID);\n                let existingStyle = layerStyles[localIndex];\n\n                if (fills.length > 0) {\n                    existingStyle.style.fills[0].color = fills[0].color;\n                }\n                if (borders.lengh > 0) {\n                    existingStyle.style.borders[0].color = borders[0].color;\n                }\n                insertedLayerStyles.push([existingStyle.name, palette]);\n                updateLayerStyles();\n            }\n        }\n    } catch (createLayerStyleErr) {\n        console.log(createLayerStyleErr);\n    }\n}\n\nfunction createNewTextStyle(styleDetails = [], folder = \"\", palette = \"\") {\n    try {\n        let styleName = folder + styleDetails[0];\n        let styleColor = styleDetails[1];\n        if (arrayTextStyleNames.indexOf(styleName) === -1) {\n            let sharedStyle = textStyles.push({\n                name: styleName,\n                style: {\n                    textColor: styleColor,\n                    fontSize: 16,\n                    fontFamily: \"Roboto\",\n                },\n                document: document,\n            });\n            insertedTextStyles.push([sharedStyle.name, palette]);\n            updateTextStyles();\n            // Titles\n            if (styleDetails[6] === true) {\n                console.log(\"Titles\");\n                styleName = folder + \"H1/\" + styleDetails[0];\n                if (arrayTextStyleNames.indexOf(styleName) === -1) {\n                    let sharedTitleStyle = textStyles.push({\n                        name: styleName,\n                        style: {\n                            textColor: styleColor,\n                            fontSize: 28,\n                            fontFamily: \"Roboto\",\n                        },\n                        document: document,\n                    });\n                    insertedTextStyles.push([sharedTitleStyle.name, palette]);\n                    updateTextStyles();\n                }\n            }\n            return sharedStyle;\n        } else {\n            // Update styles\n            let existingStyleID = getTextStyleIDFromName(styleName);\n            if (existingStyleID !== \"\") {\n                let localIndex = arrayTextStyleIDs.indexOf(existingStyleID);\n                let existingStyle = textStyles[localIndex];\n\n                existingStyle.style.textColor = styleColor;\n\n                insertedLayerStyles.push([existingStyle.name, palette]);\n                updateTextStyles();\n                return existingStyle;\n            }\n            // Update titles\n            styleName = folder + \"H1/\" + styleDetails[0];\n            existingStyleID = getTextStyleIDFromName(styleName);\n            if (existingStyleID !== \"\") {\n                let localIndex = arrayTextStyleIDs.indexOf(existingStyleID);\n                let existingStyle = textStyles[localIndex];\n\n                existingStyle.style.textColor = styleColor;\n\n                insertedLayerStyles.push([existingStyle.name, palette]);\n                updateTextStyles();\n                return existingStyle;\n            }\n        }\n    } catch (createTextStyleErr) {\n        console.log(createTextStyleErr);\n    }\n}\n\nfunction updateLayerStyles() {\n    layerStyles = document.sharedLayerStyles;\n    arrayLayerStyleIDs = layerStyles.map((sharedstyle) => sharedstyle[\"id\"]);\n    arrayLayerStyleNames = layerStyles.map(\n        (sharedstyle) => sharedstyle[\"name\"]\n    );\n    arrayLayerStyleStyles = layerStyles.map(\n        (sharedstyle) => sharedstyle[\"style\"]\n    );\n}\n\nfunction updateTextStyles() {\n    let textStyles = document.sharedTextStyles;\n    arrayTextStyleIDs = textStyles.map((sharedstyle) => sharedstyle[\"id\"]);\n    arrayTextStyleNames = textStyles.map((sharedstyle) => sharedstyle[\"name\"]);\n    arrayTextStyleStyles = textStyles.map(\n        (sharedstyle) => sharedstyle[\"style\"]\n    );\n}\n\nfunction getPath(initialPath = \"~/Documents\") {\n    const panel = NSOpenPanel.openPanel();\n    panel.setCanChooseFiles(true);\n    panel.setCanChooseDirectories(true);\n    panel.setCanCreateDirectories(true);\n    panel.setAllowsMultipleSelection(false);\n    panel.setTitle(\"Select a file or folder\");\n    panel.setPrompt(\"Select\");\n    panel.setDirectoryURL(NSURL.fileURLWithPath(initialPath));\n    const result = panel.runModal();\n    if (result === NSFileHandlingPanelOKButton) {\n        return panel.URL().path();\n    } else {\n        return null;\n    }\n}\n\n// ******************************************************************* //\n// When the plugin is shutdown by Sketch (for example when the user    //\n// disable the plugin) we need to close the webview if it's open       //\n// ******************************************************************* //\nexport function onShutdown() {\n    const existingWebview = getWebview(webviewIdentifier);\n    if (existingWebview) {\n        existingWebview.close();\n    }\n}\n","module.exports = require(\"buffer\");","module.exports = require(\"events\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");","module.exports = require(\"util\");"],"sourceRoot":""}